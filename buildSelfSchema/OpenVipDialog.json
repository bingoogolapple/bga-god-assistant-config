{
  "form": {
    "labelCol": 6,
    "wrapperCol": 12
  },
  "schema": {
    "type": "object",
    "properties": {
      "vwfqjlg2gl7": {
        "type": "void",
        "x-component": "FormGrid",
        "x-validator": [],
        "x-component-props": {
          "minColumns": 12,
          "maxColumns": 12,
          "style": {
            "padding": "20px 20px 20px 20px"
          },
          "rowGap": 18,
          "columnGap": 18
        },
        "x-designable-id": "vwfqjlg2gl7",
        "x-index": 0,
        "properties": {
          "ngozs43ktyn": {
            "type": "void",
            "x-component": "FormGrid.GridColumn",
            "x-validator": [],
            "x-component-props": {
              "gridSpan": 12
            },
            "x-designable-id": "ngozs43ktyn",
            "x-index": 0,
            "properties": {
              "title": {
                "type": "string",
                "x-component": "Text",
                "x-component-props": {
                  "content": "上帝小助手",
                  "style": {
                    "display": "flex",
                    "justifyContent": "center",
                    "flexDirection": "row",
                    "fontSize": "24px",
                    "margin": "0px 0px 0px 0px"
                  }
                },
                "x-designable-id": "ckwhwa2je5i",
                "x-index": 0,
                "x-validator": [],
                "name": "title",
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "$effect(() => {\n  $chrome.runtime\n    .getManifest()\n    .then((res) => {\n      $self.value = `上帝小助手 v${res.version}`\n    })\n    .catch((e) => {\n      $logger.error(\"扩展选项设置-getManifest 失败\", e)\n    })\n}, [])\n"
                  }
                }
              }
            }
          },
          "jh5b4w43fyf": {
            "type": "void",
            "x-component": "FormGrid.GridColumn",
            "x-validator": [],
            "x-component-props": {
              "gridSpan": 12
            },
            "x-designable-id": "jh5b4w43fyf",
            "x-index": 1,
            "properties": {
              "ohhedurg86w": {
                "type": "void",
                "x-component": "Div",
                "x-component-props": {
                  "style": {
                    "display": "flex",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "alignItems": "center"
                  }
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "// 会员仓库地址存储 key\nconst VIP_REPO_URL_KEY = \"vipRepoUrl\"\n// 扩展安装时间存储 key\nconst INSTALL_TIME_KEY = \"installTime\"\n\nconst entire = $self.address.entire\n\nconst getInstallTime = async () => {\n  const localResult = await $chrome.storage.local.get(INSTALL_TIME_KEY)\n  return localResult[INSTALL_TIME_KEY]\n}\n\nconst getVipRepoUrl = async () => {\n  const localResult = await $chrome.storage.local.get(VIP_REPO_URL_KEY)\n  return localResult[VIP_REPO_URL_KEY]\n}\n\nconst getVipConfig = async () => {\n  const assistantConfig = await $utils.getAssistantConfig()\n  if (!assistantConfig?.vip?.enabled || !assistantConfig?.vip?.configUrl) {\n    // $logger.info(\"getVipConfig: vip is disabled\")\n    // 扩展程序未启用 vip 功能\n    return {\n      isVipEnabled: false,\n    }\n  }\n\n  // 是否非适用期\n  let isNotTrialPeriod = true\n  // 安装时间\n  const installTime = await getInstallTime()\n\n  const trialPeriodTime = $dayjs(installTime)\n    .add(assistantConfig.vip.freeDay, \"day\")\n    .format(\"YYYY-MM-DD HH:mm:ss\")\n  if ($dayjs().isBefore($dayjs(trialPeriodTime))) {\n    // $logger.info(`当前时间在试用期内 ${trialPeriodTime}`)\n    isNotTrialPeriod = false\n  } else {\n    // $logger.info(`当前时间不在试用期内 ${trialPeriodTime}`)\n  }\n\n  const vipRepoUrl = await getVipRepoUrl()\n  if (!vipRepoUrl) {\n    // $logger.info(\"扩展程序启用了 vip 功能，但没有在本地配置 repoUrl\")\n    return {\n      isVipEnabled: true,\n      isOpenVip: false,\n      isNotTrialPeriod,\n      trialPeriodTime,\n    }\n  }\n\n  try {\n    // 由于内部返回的是个 proxy，所以这里需要通过 await res.status 来获取 status\n    // const res = await fetch(vipRepoUrl)\n    // const status = await res.status\n    const status = await fetch(vipRepoUrl).then((res) => res.status)\n    if (status !== 200) {\n      // $logger.info(\n      //   \"扩展程序启用了 vip 功能，但访问本地配置的 repoUrl 未成功\",\n      //   status\n      // )\n      return {\n        isVipEnabled: true,\n        isOpenVip: false,\n        isNotTrialPeriod,\n        trialPeriodTime,\n      }\n    }\n  } catch (e) {\n    // $logger.info(\"扩展程序启用了 vip 功能，但访问本地配置的 repoUrl 失败\", e)\n    return {\n      isVipEnabled: true,\n      isOpenVip: false,\n      isNotTrialPeriod,\n      trialPeriodTime,\n    }\n  }\n\n  try {\n    const vipConfigList = await fetch(assistantConfig.vip.configUrl).then(\n      (res) => res.json()\n    )\n    const vipConfig = vipConfigList.find((item) => item.repoUrl === vipRepoUrl)\n    if (!vipConfig) {\n      // $logger.info(\n      //   \"扩展程序启用了 vip 功能，但本地配置的 repoUrl 在远程配置列表中不存在\"\n      // )\n      return {\n        isVipEnabled: true,\n        isOpenVip: false,\n        isNotTrialPeriod,\n        trialPeriodTime,\n      }\n    }\n\n    if ($dayjs().isAfter($dayjs(vipConfig.expirationTime))) {\n      // $logger.info(\n      //   `扩展程序启用了 vip 功能，本地配置的 repoUrl 在远程配置列表中存在，但已过期 ${vipConfig.expirationTime}`\n      // )\n      return {\n        isVipEnabled: true,\n        isOpenVip: true,\n        isExpired: true,\n        expirationTime: vipConfig.expirationTime,\n        isNotTrialPeriod,\n        trialPeriodTime,\n      }\n    }\n\n    // $logger.info(\n    //   `扩展程序启用了 vip 功能，当前用户会员未过期 ${vipConfig.expirationTime}`\n    // )\n    return {\n      isVipEnabled: true, // 扩展自身是否启用会员功能\n      isOpenVip: true, // 用户是否开通了会员\n      isExpired: false, // 用户开通的会员是否已过期\n      expirationTime: vipConfig.expirationTime, // 用户开通的会员的过期时间\n      isNotTrialPeriod, // 是否非适用期，是否已过了试用期\n      trialPeriodTime, // 试用期过期时间\n    }\n  } catch (e) {\n    // $logger.info(\"扩展程序启用了 vip 功能，但获取远程 repoUrl 失败\", e)\n    return {\n      isVipEnabled: true,\n      isOpenVip: false,\n      isNotTrialPeriod,\n      trialPeriodTime,\n    }\n  }\n}\n\nconst refreshVipInfo = async () => {\n  const vipConfig = await $utils.getVipConfig(false, false)\n  // const vipConfig = await getVipConfig()\n  const {\n    isVipEnabled,\n    isOpenVip,\n    isNotTrialPeriod,\n    trialPeriodTime,\n    isExpired,\n    expirationTime,\n  } = vipConfig\n  if (isVipEnabled) {\n    const vipInfoField = $self.query(`${entire}.vipInfo`).take()\n\n    if (isOpenVip) {\n      // 已开通 vip\n      if (isExpired) {\n        // $logger.info(\"已开通 vip -> 已过期\", expirationTime)\n        vipInfoField.value = `已开通 vip，但已过期 ${expirationTime}`\n        vipInfoField.setComponentProps({\n          style: {\n            ...vipInfoField.componentProps.style,\n            color: \"red\",\n          },\n        })\n      } else {\n        // $logger.info(\"已开通 vip -> 未过期\", expirationTime)\n        vipInfoField.value = `已开通 vip，到期时间 ${expirationTime}`\n        vipInfoField.setComponentProps({\n          style: {\n            ...vipInfoField.componentProps.style,\n            color: \"green\",\n          },\n        })\n      }\n    } else {\n      // 未开通 vip\n      if (isNotTrialPeriod) {\n        // 未在试用期\n        // $logger.info(\"未开通 vip -> 未在试用期\", trialPeriodTime)\n        vipInfoField.value = `未开通 vip，已超过试用期 ${trialPeriodTime}`\n        vipInfoField.setComponentProps({\n          style: {\n            ...vipInfoField.componentProps.style,\n            color: \"red\",\n          },\n        })\n      } else {\n        // 还在试用期\n        // $logger.info(\"未开通 vip -> 还在试用期\", trialPeriodTime)\n        vipInfoField.value = `未开通 vip，还在试用期 ${trialPeriodTime}`\n        vipInfoField.setComponentProps({\n          style: {\n            ...vipInfoField.componentProps.style,\n            color: \"black\",\n          },\n        })\n      }\n    }\n  } else {\n    // $logger.info(\"扩展程序未启用 vip 功能\")\n  }\n}\n\nconst handleSaveVipRepoUrl = async (vipRepoUrlField) => {\n  const vipRepoUrl = vipRepoUrlField.value\n  if (!vipRepoUrl) {\n    $message.error(\"vip 链接不能为空\")\n    return\n  }\n\n  await $chrome.storage.local.set({ [VIP_REPO_URL_KEY]: vipRepoUrl })\n\n  refreshVipInfo()\n}\n\nconst init = async () => {\n  const vipRepoUrlField = $self.query(`${entire}.vipRepoUrl`).take()\n  const saveBtnField = $self.query(`${entire}.saveBtn`).take()\n\n  vipRepoUrlField.setComponentProps({\n    onPressEnter: () => handleSaveVipRepoUrl(vipRepoUrlField),\n  })\n  saveBtnField.setComponentProps({\n    onClick: () => handleSaveVipRepoUrl(vipRepoUrlField),\n  })\n\n  refreshVipInfo()\n\n  const vipRepoUrl = await getVipRepoUrl()\n  if (!vipRepoUrl) {\n    return\n  }\n\n  vipRepoUrlField.value = vipRepoUrl\n}\n\n$effect(() => {\n  init()\n}, [])\n"
                  }
                },
                "x-designable-id": "ohhedurg86w",
                "x-index": 0,
                "properties": {
                  "vipInfo": {
                    "type": "string",
                    "x-component": "Text",
                    "x-component-props": {
                      "content": "",
                      "style": {
                        "display": "flex",
                        "justifyContent": "center",
                        "flexDirection": "row",
                        "fontSize": "14px",
                        "margin": "0px 0px 0px 0px",
                        "fontStyle": "italic"
                      }
                    },
                    "x-designable-id": "na39z9puvrc",
                    "x-index": 0,
                    "x-validator": [],
                    "name": "vipInfo"
                  },
                  "vipRepoUrl": {
                    "type": "string",
                    "title": "vip 链接",
                    "x-decorator": "FormItem",
                    "x-component": "Input",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {
                      "wrapperWidth": "400px",
                      "style": {
                        "margin": "12px 0px 0px 0px"
                      }
                    },
                    "name": "vipRepoUrl",
                    "description": "请输入开通 vip 时作者给的 url 链接，然后回车或点击下方来按钮启用 vip",
                    "x-designable-id": "ax8i6v0jm10",
                    "x-index": 1
                  },
                  "saveBtn": {
                    "type": "string",
                    "x-component": "Button",
                    "x-validator": [],
                    "x-component-props": {
                      "children": "启用 vip",
                      "target": "_blank",
                      "type": "primary",
                      "size": "large",
                      "style": {
                        "margin": "16px 0px 0px 0px"
                      }
                    },
                    "name": "saveBtn",
                    "x-designable-id": "zaio5545hbv",
                    "x-index": 2
                  }
                }
              }
            }
          },
          "gv60viy9kku": {
            "type": "void",
            "x-component": "FormGrid.GridColumn",
            "x-validator": [],
            "x-component-props": {
              "gridSpan": 12
            },
            "x-designable-id": "gv60viy9kku",
            "x-index": 2,
            "properties": {
              "ogrtl5kv4q4": {
                "type": "string",
                "x-component": "Text",
                "x-component-props": {
                  "content": "如对开通 vip 有疑问，请扫下方二维码咨询作者",
                  "style": {
                    "display": "flex",
                    "justifyContent": "center",
                    "flexDirection": "row",
                    "fontSize": "20px",
                    "margin": "50px 0px 0px 0px"
                  }
                },
                "x-designable-id": "ogrtl5kv4q4",
                "x-index": 0,
                "x-validator": []
              }
            }
          },
          "5j2cmjfeocy": {
            "type": "void",
            "x-component": "FormGrid.GridColumn",
            "x-validator": [],
            "x-component-props": {
              "gridSpan": 6,
              "style": {
                "display": "flex",
                "justifyContent": "center",
                "flexDirection": "row",
                "alignItems": "center"
              }
            },
            "x-designable-id": "5j2cmjfeocy",
            "x-index": 3,
            "properties": {
              "9wiscb7k56g": {
                "type": "void",
                "x-component": "Card",
                "x-component-props": {
                  "title": "扫码加「作者微信」",
                  "styles": {
                    "title": {
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center"
                    },
                    "body": {
                      "display": "flex",
                      "flexDirection": "column",
                      "alignItems": "center"
                    }
                  },
                  "style": {
                    "width": "250px",
                    "height": "280px"
                  }
                },
                "x-designable-id": "9wiscb7k56g",
                "x-index": 0,
                "properties": {
                  "fb0evkkpsbx": {
                    "type": "string",
                    "x-component": "Img",
                    "x-validator": [],
                    "x-component-props": {
                      "style": {
                        "width": "180px"
                      }
                    },
                    "default": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/images/BGAQrCode.png",
                    "x-designable-id": "fb0evkkpsbx",
                    "x-index": 0
                  }
                }
              }
            }
          },
          "zblxkd8h524": {
            "type": "void",
            "x-component": "FormGrid.GridColumn",
            "x-validator": [],
            "x-component-props": {
              "gridSpan": 6,
              "style": {
                "display": "flex",
                "justifyContent": "center",
                "flexDirection": "row",
                "alignItems": "center"
              }
            },
            "x-designable-id": "zblxkd8h524",
            "x-index": 4,
            "properties": {
              "rfqbgi5jkym": {
                "type": "void",
                "x-component": "Card",
                "x-component-props": {
                  "title": "扫码加「作者 QQ」",
                  "styles": {
                    "title": {
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center"
                    },
                    "body": {
                      "display": "flex",
                      "flexDirection": "column",
                      "alignItems": "center"
                    }
                  },
                  "style": {
                    "width": "250px",
                    "height": "280px"
                  }
                },
                "x-designable-id": "rfqbgi5jkym",
                "x-index": 0,
                "properties": {
                  "qto041qwbb3": {
                    "type": "string",
                    "x-component": "Img",
                    "x-validator": [],
                    "x-component-props": {
                      "style": {
                        "width": "180px"
                      }
                    },
                    "default": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/images/BGAQQQrCode.jpg",
                    "x-designable-id": "qto041qwbb3",
                    "x-index": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "x-designable-id": "ig3sf7xyo7k"
  }
}