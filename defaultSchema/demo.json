{
  "form": {
    "labelCol": 6,
    "wrapperCol": 12,
    "className": "size-full bg-white bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px]",
    "style": {
      "height": "100vh",
      "overflow": "scroll"
    }
  },
  "schema": {
    "type": "object",
    "properties": {
      "q5l4kmucw83": {
        "type": "void",
        "x-component": "Div",
        "x-component-props": {
          "style": {
            "display": "flex",
            "flexDirection": "column",
            "alignItems": "center"
          }
        },
        "x-designable-id": "q5l4kmucw83",
        "x-index": 0,
        "properties": {
          "kicoo77eci2": {
            "type": "string",
            "x-component": "Text",
            "x-component-props": {
              "content": "demo，用于演示各种 api 的使用",
              "mode": "normal",
              "style": {
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "fontSize": "24px",
                "margin": "20px 0px 20px 0px"
              }
            },
            "x-designable-id": "kicoo77eci2",
            "x-index": 0,
            "x-validator": []
          },
          "mk5ysy0l3g4": {
            "type": "void",
            "x-component": "Space",
            "x-component-props": {
              "style": {
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "flexWrap": "wrap"
              }
            },
            "x-designable-id": "mk5ysy0l3g4",
            "x-index": 1,
            "properties": {
              "4muhsm6iwyi": {
                "type": "string",
                "x-component": "Button",
                "x-component-props": {
                  "target": "_blank",
                  "children": "监听点击事件"
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "/**\n * 添加点击事件\n **/\n$props({\n  onClick: () => {\n    $message.info(\"TODO 处理点击事件\")\n  },\n})"
                  }
                },
                "x-designable-id": "4muhsm6iwyi",
                "x-index": 0
              },
              "c18g28ks4ex": {
                "type": "string",
                "x-component": "Button",
                "x-component-props": {
                  "target": "_blank",
                  "children": "获取插件信息 chrome.runtime.getManifest"
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "$props({\n  onClick: async () => {\n    // 方式一\n    const manifest1 = await $chrome.runtime.getManifest()\n    alert(JSON.stringify(manifest1, null, 2))\n    // 方式二\n    const manifest2 = await $chrome.callMethodByPath(\"runtime.getManifest\")\n    alert(JSON.stringify(manifest2, null, 2))\n  },\n})\n"
                  }
                },
                "x-designable-id": "c18g28ks4ex",
                "x-index": 1
              },
              "hpz2w0a8jaw": {
                "type": "string",
                "x-component": "Button",
                "x-component-props": {
                  "target": "_blank",
                  "children": "数据缓存和读取 chrome.storage.local.xxx"
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "/**\n * 写入缓存和读取缓存\n */\n$props({\n  onClick: async () => {\n    // 写入缓存-方式1\n    await $chrome.storage.local.set({\n      key1: `${new Date().toLocaleString()}`,\n      key2: `${Math.random()}`,\n    })\n    // 写入缓存-方式2\n    await $chrome.callMethodByPath(\"storage.local.set\", {\n      key3: `${new Date().toLocaleString()}`,\n      key4: `${Math.random()}`,\n    })\n\n    // 读取缓存-方式1\n    const result1 = await $chrome.storage.local.get([\"key1\", \"key2\"])\n\n    // 读取缓存-方式2\n    const result2 = await $chrome.callMethodByPath(\"storage.local.get\", [\n      \"key1\",\n      \"key2\",\n    ])\n\n    $message.success(JSON.stringify({ result1, result2 }))\n  },\n})\n"
                  }
                },
                "x-designable-id": "hpz2w0a8jaw",
                "x-index": 2
              },
              "x32qncihyix": {
                "type": "string",
                "x-component": "Button",
                "x-component-props": {
                  "target": "_blank",
                  "children": "操作系统通知 chrome.notifications.xxx"
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "/**\n * 操作系统通知\n */\n$props({\n  onClick: () => {\n    let myNotificationId\n\n    // 创建系统通知\n    $chrome.notifications.create(\n      null,\n      {\n        type: \"basic\",\n        title: \"我是标题\",\n        message: \"我是内容\",\n        iconUrl: \"../images/128.png\",\n      },\n      $chrome.proxy((notificationId) => {\n        myNotificationId = notificationId\n        $message.info(`创建的系统通知 ID 为 ${notificationId}`)\n      })\n    )\n\n    // 延迟 3 秒更新系统通知\n    setTimeout(() => {\n      $chrome.notifications.update(\n        myNotificationId,\n        {\n          type: \"basic\",\n          title: \"我是修改后的标题\",\n          message: \"我是修改后内容\",\n          iconUrl: \"../images/128.png\",\n        },\n        $chrome.proxy((wasUpdated) => {\n          $message.info(`更新系统通知 ${wasUpdated}`)\n        })\n      )\n    }, 3000)\n\n    // 延迟 6 秒清除系统通知\n    setTimeout(() => {\n      $chrome.notifications.clear(\n        myNotificationId,\n        $chrome.proxy((wasCleared) => {\n          $message.info(`清除系统通知 ${wasCleared}`)\n        })\n      )\n    }, 6000)\n  },\n})"
                  }
                },
                "x-designable-id": "x32qncihyix",
                "x-index": 3
              },
              "3sxy8l7f5yj": {
                "type": "string",
                "x-component": "Button",
                "x-component-props": {
                  "target": "_blank",
                  "children": "获取当前窗口激活的标签页 chrome.tabs.query"
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "/**\n * 获取当前窗口激活的标签页\n */\n$props({\n  onClick: async () => {\n    // 方式1\n    const tab1 = await $chrome.tabs.query({\n      active: true,\n      lastFocusedWindow: true,\n    })\n    alert(JSON.stringify(tab1))\n    // 方式2\n    const tab2 = await $chrome.callMethodByPath(\"tabs.query\", {\n      active: true,\n      lastFocusedWindow: true,\n    })\n    alert(JSON.stringify(tab2))\n  },\n})\n"
                  }
                },
                "x-designable-id": "3sxy8l7f5yj",
                "x-index": 4,
                "x-validator": []
              }
            }
          },
          "c035qyoey2k": {
            "type": "string",
            "x-component": "Divider",
            "x-validator": [],
            "x-component-props": {
              "children": "生成当前激活标签的 url 二维码"
            },
            "x-designable-id": "c035qyoey2k",
            "x-index": 2
          },
          "daziy8wlqb8": {
            "type": "void",
            "x-component": "Div",
            "x-component-props": {},
            "x-designable-id": "daziy8wlqb8",
            "x-index": 3,
            "properties": {
              "m4sunypljsg": {
                "type": "string",
                "x-component": "QRCode",
                "x-validator": [],
                "x-component-props": {
                  "id": "qrCodeId",
                  "content": "我是二维码的内容",
                  "style": {}
                },
                "x-reactions": {
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ],
                  "fulfill": {
                    "run": "$effect(async () => {\n  const tabs = await $chrome.tabs.query({\n    active: true,\n    lastFocusedWindow: true,\n  })\n  $self.value = tabs[0].url\n}, [])\n"
                  }
                },
                "x-designable-id": "m4sunypljsg",
                "x-index": 0
              },
              "qwc0xp9ztev": {
                "type": "string",
                "x-component": "Button",
                "x-reactions": {
                  "fulfill": {
                    "run": "$props({\n  onClick: () => {\n    const imageUrl = document\n      .getElementById(\"qrCodeId\")\n      ?.querySelector(\"canvas\")\n      ?.toDataURL(\"image/png\", 1)\n\n    $utils.copyImageToClipboard(imageUrl)\n  },\n})\n"
                  },
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ]
                },
                "x-validator": [],
                "x-component-props": {
                  "children": "复制图片二维码",
                  "target": "_blank"
                },
                "x-designable-id": "qwc0xp9ztev",
                "x-index": 1
              }
            }
          },
          "swhi1clj8v4": {
            "type": "string",
            "x-component": "Divider",
            "x-validator": [],
            "x-component-props": {
              "children": "操作浏览器窗口"
            },
            "x-designable-id": "swhi1clj8v4",
            "x-index": 4
          },
          "createNewWindowDiv": {
            "type": "void",
            "x-component": "Div",
            "x-component-props": {},
            "name": "createNewWindowDiv",
            "x-designable-id": "0hlih6vvdnn",
            "x-index": 5,
            "properties": {
              "createNewWindowBtn": {
                "type": "string",
                "x-component": "Button",
                "x-reactions": {
                  "fulfill": {
                    "run": "$props({\n  onClick: () => {\n    // 获取弹窗\n    const dialog = $self\n      .query(`${$self.parent.address.entire}.createNewWindowDialog`)\n      .take()\n    // 打开弹窗\n    dialog.componentProps.open = true\n  },\n})\n"
                  },
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ]
                },
                "x-validator": [],
                "x-component-props": {
                  "children": "新建指定尺寸的窗口",
                  "target": "_blank",
                  "type": "primary"
                },
                "x-designable-id": "i17037bdnrp",
                "x-index": 0,
                "name": "createNewWindowBtn"
              },
              "createNewWindowDialog": {
                "type": "object",
                "x-component": "Modal",
                "x-reactions": {
                  "fulfill": {
                    "run": "$props({\n  // 点击取消按钮\n  onCancel: () => {\n    // 关闭当前对话框\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(() => {\n        // $logger.info(\"$self.value\", $self.value)\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n\n        const params = {\n          ...$self.value,\n        }\n        if (!params.url) {\n          delete params.url\n        }\n\n        // 新建指定尺寸的弹窗\n        $chrome.windows.create(params)\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                  },
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ]
                },
                "x-component-props": {
                  "cancelButtonProps": {},
                  "cancelText": "取消",
                  "okButtonProps": {},
                  "okText": "确定",
                  "classNames": {},
                  "styles": {},
                  "open": false,
                  "title": "新建指定尺寸的浏览器窗口"
                },
                "name": "createNewWindowDialog",
                "x-designable-id": "la17t83altj",
                "x-index": 1,
                "properties": {
                  "width": {
                    "type": "number",
                    "title": "窗口宽度",
                    "x-decorator": "FormItem",
                    "x-component": "NumberPicker",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {},
                    "name": "width",
                    "x-designable-id": "uwirjfjnjr7",
                    "x-index": 0,
                    "default": 800,
                    "required": true
                  },
                  "height": {
                    "type": "number",
                    "title": "窗口高度",
                    "x-decorator": "FormItem",
                    "x-component": "NumberPicker",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {},
                    "name": "height",
                    "default": 700,
                    "required": true,
                    "x-designable-id": "i3xqa6uemfo",
                    "x-index": 1
                  },
                  "url": {
                    "type": "string",
                    "title": "默认访问地址",
                    "x-decorator": "FormItem",
                    "x-component": "Input",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {},
                    "name": "url",
                    "x-designable-id": "f7ui2byhsse",
                    "x-index": 2,
                    "default": ""
                  }
                }
              }
            }
          },
          "updateCurrentWindowDiv": {
            "type": "void",
            "x-component": "Div",
            "x-component-props": {},
            "name": "updateCurrentWindowDiv",
            "x-designable-id": "vsu7lr10xbu",
            "x-index": 6,
            "properties": {
              "updateCurrentWindowBtn": {
                "type": "string",
                "x-component": "Button",
                "x-reactions": {
                  "fulfill": {
                    "run": "$props({\n  onClick: () => {\n    // 获取弹窗\n    const dialog = $self\n      .query(`${$self.parent.address.entire}.updateCurrentWindowDialog`)\n      .take()\n    // 打开弹窗\n    dialog.componentProps.open = true\n  },\n})\n"
                  },
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ]
                },
                "x-validator": [],
                "x-component-props": {
                  "children": "修改当前窗口尺寸",
                  "target": "_blank",
                  "type": "primary"
                },
                "x-designable-id": "b3qs388b1v1",
                "x-index": 0,
                "name": "updateCurrentWindowBtn"
              },
              "updateCurrentWindowDialog": {
                "type": "object",
                "x-component": "Modal",
                "x-reactions": {
                  "fulfill": {
                    "run": "$props({\n  // 点击取消按钮\n  onCancel: () => {\n    // 关闭当前对话框\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(async () => {\n        // $logger.info(\"$self.value\", $self.value)\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n\n        // 获取当前窗口\n        // const currentWindow = await $chrome.windows.getCurrent()\n        const currentWindow = await $chrome.callMethodByPath(\n          \"windows.getCurrent\"\n        )\n\n        // 更新当前窗口尺寸\n        // $chrome.windows.update(currentWindow.id, {\n        //   ...$self.value,\n        // })\n        $chrome.callMethodByPath(\"windows.update\", currentWindow.id, {\n          ...$self.value,\n        })\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                  },
                  "dependencies": [
                    {
                      "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                      "property": "value",
                      "type": "any"
                    }
                  ]
                },
                "x-component-props": {
                  "cancelButtonProps": {},
                  "cancelText": "取消",
                  "okButtonProps": {},
                  "okText": "确定",
                  "classNames": {},
                  "styles": {},
                  "open": false,
                  "title": "修改浏览器当前窗口尺寸"
                },
                "name": "updateCurrentWindowDialog",
                "x-designable-id": "g567yorfkqt",
                "x-index": 1,
                "properties": {
                  "width": {
                    "type": "number",
                    "title": "窗口宽度",
                    "x-decorator": "FormItem",
                    "x-component": "NumberPicker",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {},
                    "name": "width",
                    "x-designable-id": "s8ur6qq75tu",
                    "x-index": 0,
                    "default": 900,
                    "required": true
                  },
                  "height": {
                    "type": "number",
                    "title": "窗口高度",
                    "x-decorator": "FormItem",
                    "x-component": "NumberPicker",
                    "x-validator": [],
                    "x-component-props": {},
                    "x-decorator-props": {},
                    "name": "height",
                    "default": 800,
                    "required": true,
                    "x-designable-id": "kpodqdrk98l",
                    "x-index": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "x-designable-id": "ki5pn4qu2or"
  }
}