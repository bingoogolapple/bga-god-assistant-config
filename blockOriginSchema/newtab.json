{
    "form": {
        "labelCol": 6,
        "wrapperCol": 12,
        "style": {
            "height": "100vh",
            "overflow": "scroll"
        }
    },
    "schema": {
        "type": "object",
        "properties": {
            "bottomRightMenuDiv": {
                "type": "void",
                "x-component": "Div",
                "x-component-props": {},
                "name": "bottomRightMenuDiv",
                "x-reactions": {
                    "dependencies": [
                        {
                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                            "property": "value",
                            "type": "any"
                        }
                    ],
                    "fulfill": {
                        "run": "const rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n// 页面背景地址持久化缓存的 key\nconst cacheKeyBackgroundUrl = `${cacheKeyPrefix}BackgroundUrl`\n// 页面背景 base64 持久化缓存的 key\nconst cacheKeyBackgroundBase64 = `${cacheKeyPrefix}BackgroundBase64`\n\nconst DEFUALT_CLASS_NAME =\n  \"bg-white bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px]\"\nconst ROOT_CLASS = \"ant-formily-layout\"\n\n$self.state = $observable({\n  backgroundUrl: null,\n  backgroundBase64: null,\n})\n\n// 转换图片地址为 base64，以便加快本地加载速度\nconst convertImageUrlToBase64 = async (url) => {\n  const blob = await fetch(url).then((res) => res.blob())\n\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      const base64data = reader.result\n      resolve(base64data)\n    }\n    reader.onerror = (error) => {\n      reject(error)\n    }\n    reader.readAsDataURL(blob)\n  })\n}\n\n// 刷新页面背景\n$self.refreshPageBackground = async () => {\n  const backgroundUrl = await $chrome.localStorage.getItem(\n    cacheKeyBackgroundUrl\n  )\n  const backgroundBase64 = await $chrome.localStorage.getItem(\n    cacheKeyBackgroundBase64\n  )\n\n  $self.state.backgroundUrl = backgroundUrl\n  $self.state.backgroundBase64 = backgroundBase64\n\n  const pageRoot = document.querySelector(\".ant-formily-layout\")\n  if (!pageRoot) {\n    return\n  }\n\n  if (backgroundUrl) {\n    if (\n      backgroundUrl.startsWith(\"http\") ||\n      backgroundUrl.startsWith(\"data:image\")\n    ) {\n      if (backgroundBase64) {\n        pageRoot.style.backgroundImage = `url(${backgroundBase64})`\n      } else {\n        pageRoot.style.backgroundImage = `url(${backgroundUrl})`\n      }\n      pageRoot.style.backgroundRepeat = \"no-repeat\"\n      pageRoot.style.backgroundSize = \"cover\"\n      pageRoot.style.backgroundPosition = \"center\"\n      pageRoot.style.backgroundAttachment = \"fixed\"\n\n      pageRoot.className = `${ROOT_CLASS}`\n    } else {\n      pageRoot.className = `${backgroundUrl} ${ROOT_CLASS}`\n\n      const {\n        backgroundImage,\n        backgroundRepeat,\n        backgroundSize,\n        backgroundPosition,\n        backgroundAttachment,\n        ...restStyle\n      } = pageRoot.style\n      pageRoot.style = {\n        ...restStyle,\n      }\n    }\n  } else {\n    pageRoot.className = `${DEFUALT_CLASS_NAME} ${ROOT_CLASS}`\n\n    const {\n      backgroundImage,\n      backgroundRepeat,\n      backgroundSize,\n      backgroundPosition,\n      backgroundAttachment,\n      ...restStyle\n    } = pageRoot.style\n    pageRoot.style = {\n      ...restStyle,\n    }\n  }\n}\n\n// 设置页面背景\n$self.setPageBackground = async () => {\n  const pageBackgroundUrlField = $self\n    .query(`${rootEntire}.settingPageBackgroundDialog.pageBackgroundUrl`)\n    .take()\n  const backgroundUrl = pageBackgroundUrlField.value?.trim() || \"\"\n\n  let newBackgroundUrl = \"\"\n  let newBackgroundBase64 = \"\"\n\n  if (backgroundUrl) {\n    if (backgroundUrl.startsWith(\"http\")) {\n      try {\n        newBackgroundBase64 = await convertImageUrlToBase64(backgroundUrl)\n      } catch (e) {\n        $logger.error(\"背景图片转 base64 失败\")\n      }\n    } else if (backgroundUrl.startsWith(\"data:image\")) {\n      newBackgroundBase64 = backgroundUrl\n    }\n\n    newBackgroundUrl = backgroundUrl\n  }\n\n  await $chrome.localStorage.setItem(cacheKeyBackgroundUrl, newBackgroundUrl)\n  await $chrome.localStorage.setItem(\n    cacheKeyBackgroundBase64,\n    newBackgroundBase64\n  )\n\n  $self.refreshPageBackground()\n\n  if ($utils.isPreviewEnv) {\n    const tabs = await $chrome.tabs.query({\n      active: true,\n      currentWindow: true,\n    })\n    const tab = tabs[0]\n    if (tab) {\n      $chrome.tabs.update(tab.id, { url: tab.url })\n    }\n  }\n}\n\n// 展示设置页面背景对话框\n$self.showSettingPageBackgroundDialog = () => {\n  const settingPageBackgroundDialog = $self\n    .query(`${rootEntire}.settingPageBackgroundDialog`)\n    .take()\n  settingPageBackgroundDialog.setComponentProps({\n    open: true,\n  })\n}\n\n$effect(() => {\n  $self.refreshPageBackground()\n}, [])\n"
                    }
                },
                "x-designable-id": "926anchi0vd",
                "x-index": 0,
                "properties": {
                    "settingPageBackgroundDialog": {
                        "type": "object",
                        "x-component": "Modal",
                        "x-reactions": {
                            "fulfill": {
                                "run": "$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    const rootName = \"bottomRightMenuDiv\"\n    const rootEntire = $self.address.entire.substring(\n      0,\n      $self.address.entire.lastIndexOf(rootName) + rootName.length\n    )\n    const rootField = $self.query(rootEntire).take()\n    rootField.setPageBackground()\n\n    $self.componentProps.open = false\n  },\n})\n"
                            },
                            "dependencies": [
                                {
                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                    "property": "value",
                                    "type": "any"
                                }
                            ]
                        },
                        "x-component-props": {
                            "cancelButtonProps": {},
                            "cancelText": "取消",
                            "okButtonProps": {},
                            "okText": "确定",
                            "classNames": {},
                            "styles": {},
                            "title": "设置页面背景"
                        },
                        "name": "settingPageBackgroundDialog",
                        "x-designable-id": "wqr7hluk23w",
                        "x-index": 0,
                        "properties": {
                            "pageBackgroundUrl": {
                                "type": "string",
                                "title": "",
                                "x-decorator": "FormItem",
                                "x-component": "Input.TextArea",
                                "x-validator": [],
                                "x-component-props": {
                                    "placeholder": "请输入页面背景地址",
                                    "autoSize": {
                                        "minRows": 3,
                                        "maxRows": 5
                                    },
                                    "style": {}
                                },
                                "x-decorator-props": {},
                                "name": "pageBackgroundUrl",
                                "x-designable-id": "ujr0yk22bgn",
                                "x-index": 0,
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const rootName = \"bottomRightMenuDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$self.value = rootField.state.backgroundUrl\n"
                                    }
                                }
                            },
                            "fx9nc9i9ei2": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "display": "flex",
                                        "flexDirection": "column",
                                        "justifyContent": "center",
                                        "alignItems": "center"
                                    }
                                },
                                "x-designable-id": "fx9nc9i9ei2",
                                "x-index": 1,
                                "properties": {
                                    "tnijdzy5wus": {
                                        "type": "string",
                                        "x-component": "Button",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "$props({\n  onClick: () => {\n    $utils.openUrlInNewTab('https://image.baidu.com/search/index?tn=baiduimage&fm=result&ie=utf-8&word=%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8')\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "点我打开百度桌面壁纸-右键-复制图片地址",
                                            "target": "_blank",
                                            "style": {
                                                "margin": "0px 0px 8px 0px"
                                            }
                                        },
                                        "x-designable-id": "tnijdzy5wus",
                                        "x-index": 0
                                    },
                                    "i0yqtyfe7m6": {
                                        "type": "string",
                                        "x-component": "Button",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "$props({\n  onClick: () => {\n    $utils.openUrlInNewTab(\n      \"https://www.bing.com/images/search?q=%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8&first=1\"\n    )\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "点我打开必应桌面壁纸-右键-复制图片地址",
                                            "target": "_blank",
                                            "style": {
                                                "margin": "0px 0px 8px 0px"
                                            }
                                        },
                                        "x-designable-id": "i0yqtyfe7m6",
                                        "x-index": 1
                                    }
                                }
                            }
                        }
                    },
                    "bottomRightFbg": {
                        "type": "void",
                        "x-component": "FloatButtonGroup",
                        "x-component-props": {
                            "icon": "MoreOutlined",
                            "type": "primary",
                            "trigger": "hover",
                            "insetInlineEnd": 48,
                            "insetBlockEnd": 48,
                            "badge": {}
                        },
                        "x-designable-id": "oiiql0q7pb0",
                        "x-index": 1,
                        "name": "bottomRightFbg",
                        "properties": {
                            "editCurrentPageFb": {
                                "x-component": "FloatButton",
                                "x-component-props": {
                                    "description": "",
                                    "type": "primary",
                                    "badge": {},
                                    "target": "_blank",
                                    "icon": "EditFilled",
                                    "tooltip": "编辑当前页面"
                                },
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "$props({\n  onClick: () => {\n    // 编辑当前页面\n    $ga.editCurrentPage()\n  },\n})\n"
                                    }
                                },
                                "x-designable-id": "xwo67yypp2v",
                                "x-index": 0,
                                "name": "editCurrentPageFb"
                            },
                            "editBackgroundFb": {
                                "x-component": "FloatButton",
                                "x-component-props": {
                                    "description": "",
                                    "type": "primary",
                                    "badge": {},
                                    "target": "_blank",
                                    "icon": "BgColorsOutlined",
                                    "tooltip": "编辑页面背景"
                                },
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const rootName = \"bottomRightMenuDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showSettingPageBackgroundDialog()\n  },\n})\n"
                                    }
                                },
                                "x-designable-id": "yh1wmxf3t9p",
                                "x-index": 1,
                                "name": "editBackgroundFb"
                            },
                            "settingsFb": {
                                "x-component": "FloatButton",
                                "x-component-props": {
                                    "description": "",
                                    "type": "primary",
                                    "insetInlineEnd": 24,
                                    "insetBlockEnd": 48,
                                    "badge": {},
                                    "target": "_blank",
                                    "icon": "SettingOutlined",
                                    "tooltip": "低代码页面管理"
                                },
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "$props({\n  onClick: () => {\n    // 低代码页面管理\n    $ga.lowCodePageManage()\n  },\n})\n"
                                    }
                                },
                                "x-designable-id": "3ce4pdz0w31",
                                "x-index": 2,
                                "name": "settingsFb"
                            }
                        }
                    }
                }
            },
            "khhftitma81": {
                "type": "void",
                "x-component": "FormGrid",
                "x-validator": [],
                "x-component-props": {
                    "columnGap": 12,
                    "rowGap": 12,
                    "minColumns": 2,
                    "maxColumns": 2,
                    "style": {
                        "margin": "12px 12px 12px 12px"
                    }
                },
                "x-designable-id": "khhftitma81",
                "x-index": 1,
                "properties": {
                    "jzqskploeu9": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {
                            "gridSpan": 2
                        },
                        "x-designable-id": "jzqskploeu9",
                        "x-index": 0,
                        "properties": {
                            "currentDateTimeText": {
                                "type": "string",
                                "x-component": "Text",
                                "x-validator": [],
                                "x-component-props": {
                                    "style": {
                                        "fontSize": "20px",
                                        "padding": "8px 8px 8px 8px",
                                        "display": "flex",
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "alignItems": "center"
                                    }
                                },
                                "name": "currentDateTimeText",
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const refreshDateTime = () => {\n  $self.value = $dayjs().format(\"YYYY-MM-DD HH:mm:ss\")\n}\n\nrefreshDateTime()\n\n$effect(() => {\n  refreshDateTime()\n  setInterval(() => {\n    refreshDateTime()\n  }, 1000)\n}, [])\n"
                                    }
                                },
                                "x-designable-id": "lbkbjs7vmci",
                                "x-index": 0
                            }
                        }
                    },
                    "zkgvmjzhr02": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {
                            "gridSpan": 2
                        },
                        "x-designable-id": "zkgvmjzhr02",
                        "x-index": 1,
                        "properties": {
                            "currentDateTimeCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "currentDateTimeCardDiv",
                                "x-designable-id": "b0wwsrfop6q",
                                "x-index": 0,
                                "properties": {
                                    "currentDateTimeCardTitleDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "eeid84354r3",
                                        "x-index": 0,
                                        "name": "currentDateTimeCardTitleDiv",
                                        "properties": {
                                            "currentDateTimeCardTitleLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "xtdaqxo1ik4",
                                                "x-index": 0,
                                                "name": "currentDateTimeCardTitleLeftDiv",
                                                "properties": {
                                                    "currentDateTimeCardTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "当前时间",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 0px"
                                                            }
                                                        },
                                                        "x-designable-id": "knly16afz1m",
                                                        "x-index": 0,
                                                        "name": "currentDateTimeCardTitle"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "5w37e56szq3": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 0px 0px"
                                            }
                                        },
                                        "x-designable-id": "5w37e56szq3",
                                        "x-index": 1
                                    },
                                    "currentDateTimeText": {
                                        "type": "string",
                                        "x-component": "Text",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "style": {
                                                "fontSize": "20px",
                                                "padding": "8px 8px 8px 8px",
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                                "alignItems": "center"
                                            }
                                        },
                                        "name": "currentDateTimeText",
                                        "x-reactions": {
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ],
                                            "fulfill": {
                                                "run": "const refreshDateTime = () => {\n  $self.value = $dayjs().format(\"YYYY-MM-DD HH:mm:ss\")\n}\n\nrefreshDateTime()\n\n$effect(() => {\n  refreshDateTime()\n  setInterval(() => {\n    refreshDateTime()\n  }, 1000)\n}, [])\n"
                                            }
                                        },
                                        "x-designable-id": "bl9kgtlwm3m",
                                        "x-index": 2
                                    }
                                }
                            }
                        }
                    },
                    "tuq09prcomu": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {
                            "gridSpan": 2
                        },
                        "x-designable-id": "tuq09prcomu",
                        "x-index": 2,
                        "properties": {
                            "searchCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "searchCardDiv",
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n// 搜索列表持久化缓存的 key\nconst cacheKeySearchList = `${cacheKeyPrefix}SearchList`\n// 默认搜索持久化缓存的 key\nconst cacheKeyDefaultSearch = `${cacheKeyPrefix}DefaultSearch`\n\n// 修复样式问题\n$props({\n  className: $self.props.name,\n})\n$effect(() => {\n  const rootNode = document.querySelector(`.${$self.props.name}`)\n  if (rootNode) {\n    const element = rootNode.querySelector(\n      \".ant-formily-item-feedback-layout-loose\"\n    )\n    if (element) {\n      element.style.marginBottom = 0\n    }\n  }\n}, [])\n\n$self.state = $observable({\n  defaultSearch: null,\n  searchList: null,\n})\n\n// 默认搜索列表\nconst defualtList = [\n  {\n    title: \"百度\",\n    url: \"https://www.baidu.com/s?wd=%s\",\n  },\n  {\n    title: \"必应\",\n    url: \"https://www.bing.com/search?q=%s\",\n  },\n  {\n    title: \"Google\",\n    url: \"https://www.google.com/search?q=%s\",\n  },\n  {\n    title: \"搜狗\",\n    url: \"https://www.sogou.com/web?query=%s\",\n  },\n  {\n    title: \"360\",\n    url: \"https://www.so.com/s?q=%s\",\n  },\n  {\n    title: \"掘金\",\n    url: \"https://juejin.cn/search?query=%s\",\n  },\n  {\n    title: \"npm\",\n    url: \"https://www.npmjs.com/search?q=%s\",\n  },\n  {\n    title: \"GitHub\",\n    url: \"https://github.com/search?q=%s\",\n  },\n  {\n    title: \"Bilibili\",\n    url: \"https://search.bilibili.com/all?keyword=%s\",\n  },\n  {\n    title: \"YouTube\",\n    url: \"https://www.youtube.com/results?search_query=%s\",\n  },\n  {\n    title: \"抖音\",\n    url: \"https://www.douyin.com/search/%s\",\n  },\n  {\n    title: \"快手\",\n    url: \"https://www.kuaishou.com/search/video?searchKey=%s\",\n  },\n  {\n    title: \"小红书\",\n    url: \"https://www.xiaohongshu.com/search_result?keyword=%s\",\n  },\n  {\n    title: \"知乎\",\n    url: \"https://www.zhihu.com/search?type=content&q=%s\",\n  },\n  {\n    title: \"微博\",\n    url: \"https://s.weibo.com/weibo?q=%s\",\n  },\n  {\n    title: \"Facebook\",\n    url: \"https://www.facebook.com/search/top/?q=%s\",\n  },\n  {\n    title: \"X\",\n    url: \"https://x.com/search?q=%s\",\n  },\n].map((item, index) => {\n  return {\n    ...item,\n    id: Date.now() + index,\n  }\n})\n\n// 获取默认搜索\n$self.getDefaultSearch = async () => {\n  if ($self.state.defaultSearch) {\n    // 返回内存缓存的默认搜索\n    return $self.state.defaultSearch\n  }\n\n  let res = null\n  try {\n    res = await $chrome.localStorage.getItem(cacheKeyDefaultSearch)\n    if (res) {\n      res = JSON.parse(res)\n    }\n  } catch (e) {\n    $logger.info(\"获取默认搜索失败\", e)\n  }\n\n  $self.state.defaultSearch = res || $self.state.searchList[0]\n  return $self.state.defaultSearch\n}\n\n// 修改默认搜索\n$self.updateDefaultSearch = async (defaultSearch) => {\n  try {\n    await $chrome.localStorage.setItem(\n      cacheKeyDefaultSearch,\n      JSON.stringify(defaultSearch)\n    )\n\n    $self.state.defaultSearch = defaultSearch\n  } catch (e) {\n    $logger.info(\"修改默认搜索失败\", e)\n  }\n}\n\n// 展示搜索管理对话框\n$self.showSearchManageDialog = () => {\n  const searchManageDialog = $self\n    .query(`${rootEntire}.searchManageDialog`)\n    .take()\n  searchManageDialog.setComponentProps({\n    open: true,\n  })\n}\n\n// 展示添加或修改搜索方式对话框\n$self.showAddOrUpdateSearchDialog = (search) => {\n  const addOrUpdateSearchDialog = $self\n    .query(`${rootEntire}.addOrUpdateSearchDialog`)\n    .take()\n  addOrUpdateSearchDialog.value = {\n    ...(search || {}),\n  }\n  addOrUpdateSearchDialog.setComponentProps({\n    open: true,\n    title: `${search ? \"修改\" : \"添加\"}方式`,\n  })\n}\n\n// 添加或修改搜索方式\n$self.addOrUpdateSearch = async (search) => {\n  const list = await $self.fetchSearchList()\n\n  if (search.id) {\n    // 修改\n    const index = list.findIndex((item) => item.id === search.id)\n    list[index] = search\n  } else {\n    // 添加\n    search.id = Date.now()\n    list.push(search)\n  }\n\n  try {\n    await $chrome.localStorage.setItem(cacheKeySearchList, JSON.stringify(list))\n    $self.state.searchList = [...list]\n  } catch (e) {\n    $logger.info(`${search.id ? \"修改\" : \"添加\"}搜索方式失败`, e)\n  }\n}\n\n// 删除搜索方式\n$self.deleteSearch = async (search) => {\n  let list = await $self.fetchSearchList()\n  list = list.filter((item) => item.id !== search.id)\n  $self.saveSearchList(list)\n}\n\n// 往前移动搜索方式\n$self.moveUpSearch = async (search) => {\n  let list = await $self.fetchSearchList()\n\n  const index = list.findIndex((item) => item.id === search.id)\n  let preIndex = index - 1\n  if (preIndex === -1) {\n    // 已经是第一条，则和最后一条互换\n    preIndex = list.length - 1\n  }\n\n  const other = list[preIndex]\n  list[preIndex] = search\n  list[index] = other\n  $self.saveSearchList(list)\n}\n\n// 往后移动搜索方式\n$self.moveDownSearch = async (search) => {\n  let list = await $self.fetchSearchList()\n\n  const index = list.findIndex((item) => item.id === search.id)\n  let nextIndex = index + 1\n  if (nextIndex === list.length) {\n    // 已经是最后一条，则和第一条互换\n    nextIndex = 0\n  }\n\n  const other = list[nextIndex]\n  list[nextIndex] = search\n  list[index] = other\n\n  $self.saveSearchList(list)\n}\n\n// 保存搜索列表数据\n$self.saveSearchList = async (list) => {\n  try {\n    await $chrome.localStorage.setItem(cacheKeySearchList, JSON.stringify(list))\n\n    $self.state.searchList = [...list]\n  } catch (e) {\n    $logger.info(`保存搜索列表数据失败`, e)\n  }\n}\n\n// 执行搜索\n$self.handleSearch = async (search) => {\n  if (!search) {\n    search = await $self.getDefaultSearch()\n  }\n\n  const searchKeyword = $self.query(`${rootEntire}.searchKeyword`).take()\n  const keyword = searchKeyword.value\n  const url = search.url.replace(\"%s\", keyword)\n  $utils.openUrl(url)\n}\n\n// 获取搜索列表\n$self.fetchSearchList = async () => {\n  if ($self.state.searchList) {\n    return $self.state.searchList\n  }\n\n  let res = null\n  try {\n    res = await $chrome.localStorage.getItem(cacheKeySearchList)\n  } catch (e) {\n    $logger.info(\"获取搜索列表失败\", e)\n    return []\n  }\n\n  if (!res) {\n    $self.saveSearchList(defualtList)\n    return defualtList\n  }\n\n  try {\n    const searchCardData = JSON.parse(res) || []\n    return searchCardData\n  } catch (e) {\n    $logger.info(\"解析搜索列表数据失败\", e)\n    return []\n  }\n}\n\n$effect(() => {\n  const searchIteratorLayout = $self\n    .query(`${rootEntire}.searchIteratorLayout`)\n    .take()\n  searchIteratorLayout.value = $self.state.searchList\n}, [$self.state.searchList])\n\n$effect(() => {\n  if (!$self.state.defaultSearch) {\n    return\n  }\n\n  const defaultSearch = $self.state.defaultSearch\n  const searchKeyword = $self.query(`${rootEntire}.searchKeyword`).take()\n  searchKeyword.setComponentProps({\n    placeholder: `请输入搜索内容，回车键默认「${defaultSearch.title}」搜索`,\n  })\n\n  const searchCardTitle = $self\n    .query(\n      `${rootEntire}.searchCardTitleDiv.searchCardTitleLeftDiv.searchCardTitle`\n    )\n    .take()\n  searchCardTitle.value = `「${defaultSearch.title}」搜索`\n}, [$self.state.defaultSearch])\n\n// 初始化\nconst init = async () => {\n  $self.state.searchList = await $self.fetchSearchList()\n\n  $self.getDefaultSearch()\n}\n\n$effect(async () => {\n  init()\n}, [])\n"
                                    }
                                },
                                "x-designable-id": "93m6bs9ls7h",
                                "x-index": 0,
                                "properties": {
                                    "searchCardTitleDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "vpaomsgm3sh",
                                        "x-index": 0,
                                        "name": "searchCardTitleDiv",
                                        "properties": {
                                            "searchCardTitleLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "8x2il020pyr",
                                                "x-index": 0,
                                                "name": "searchCardTitleLeftDiv",
                                                "properties": {
                                                    "searchCardTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "搜索",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 0px"
                                                            }
                                                        },
                                                        "x-designable-id": "l3ausu9g5zn",
                                                        "x-index": 0,
                                                        "name": "searchCardTitle"
                                                    }
                                                }
                                            },
                                            "searchCardTitleRightDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row"
                                                    }
                                                },
                                                "x-designable-id": "14xmwozlxi8",
                                                "x-index": 1,
                                                "name": "searchCardTitleRightDiv",
                                                "properties": {
                                                    "searchManageBtn": {
                                                        "type": "string",
                                                        "x-component": "Button",
                                                        "x-reactions": {
                                                            "fulfill": {
                                                                "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showSearchManageDialog()\n  },\n})\n"
                                                            },
                                                            "dependencies": [
                                                                {
                                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                    "property": "value",
                                                                    "type": "any"
                                                                }
                                                            ]
                                                        },
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "children": "",
                                                            "target": "_blank",
                                                            "icon": "SettingOutlined",
                                                            "type": "default",
                                                            "style": {
                                                                "margin": "0px 0px 0px 12px"
                                                            },
                                                            "size": "small"
                                                        },
                                                        "x-designable-id": "s2q8ba0fn0s",
                                                        "x-index": 0,
                                                        "name": "searchManageBtn"
                                                    },
                                                    "addSearchBtn": {
                                                        "type": "string",
                                                        "x-component": "Button",
                                                        "x-reactions": {
                                                            "fulfill": {
                                                                "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showAddOrUpdateSearchDialog(null)\n  },\n})\n"
                                                            },
                                                            "dependencies": [
                                                                {
                                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                    "property": "value",
                                                                    "type": "any"
                                                                }
                                                            ]
                                                        },
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "children": "",
                                                            "target": "_blank",
                                                            "icon": "PlusCircleOutlined",
                                                            "type": "default",
                                                            "style": {
                                                                "margin": "0px 0px 0px 12px"
                                                            },
                                                            "size": "small"
                                                        },
                                                        "x-designable-id": "38kv118zjpr",
                                                        "x-index": 1,
                                                        "name": "addSearchBtn"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "8ivah5cfwb1": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 0px 0px"
                                            }
                                        },
                                        "x-designable-id": "8ivah5cfwb1",
                                        "x-index": 1
                                    },
                                    "searchKeyword": {
                                        "type": "string",
                                        "title": "",
                                        "x-decorator": "FormItem",
                                        "x-component": "Input",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "placeholder": "请输入搜索内容",
                                            "styles": {
                                                "input": {
                                                    "textAlign": "center"
                                                }
                                            },
                                            "style": {
                                                "borderRadius": "100px 100px 100px 100px",
                                                "height": "50px",
                                                "padding": "0px 24px 0px 24px"
                                            }
                                        },
                                        "x-decorator-props": {
                                            "style": {
                                                "margin": "8px auto 0px auto",
                                                "minWidth": "340px",
                                                "maxWidth": "500px",
                                                "padding": "0px 8px 0px 8px"
                                            }
                                        },
                                        "name": "searchKeyword",
                                        "x-designable-id": "gz4powqq54m",
                                        "x-index": 2,
                                        "x-reactions": {
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ],
                                            "fulfill": {
                                                "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n/**\n * 监听输入框回车事件\n **/\n$props({\n  onPressEnter: () => {\n    rootField.handleSearch(null)\n  },\n})\n"
                                            }
                                        }
                                    },
                                    "searchIteratorLayout": {
                                        "type": "array",
                                        "x-component": "IteratorLayout",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "justifyContent": "center",
                                                "flexWrap": "wrap",
                                                "padding": "12px 16px 4px 16px"
                                            }
                                        },
                                        "default": [],
                                        "x-validator": [],
                                        "x-designable-id": "jz6ebegxe1p",
                                        "x-index": 3,
                                        "name": "searchIteratorLayout",
                                        "items": {
                                            "type": "object",
                                            "x-designable-id": "dqsh47r3fqm",
                                            "x-validator": [],
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "x-component": "Button",
                                                    "x-component-props": {
                                                        "target": "_blank",
                                                        "type": "primary",
                                                        "style": {
                                                            "margin": "8px 8px 8px 8px"
                                                        },
                                                        "children": "按钮"
                                                    },
                                                    "name": "title",
                                                    "x-reactions": {
                                                        "dependencies": [
                                                            {
                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                "property": "value",
                                                                "type": "any"
                                                            }
                                                        ],
                                                        "fulfill": {
                                                            "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const search = $utils.getArrayFieldRow($self)\n    rootField.handleSearch(search)\n  },\n})\n"
                                                        }
                                                    },
                                                    "x-designable-id": "gpxj1fox04u",
                                                    "x-index": 0,
                                                    "x-validator": []
                                                }
                                            }
                                        }
                                    },
                                    "searchManageDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self.componentProps.open = false\n  },\n})\n"
                                            }
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {
                                                "hidden": true
                                            },
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "搜索方式管理",
                                            "width": 700
                                        },
                                        "name": "searchManageDialog",
                                        "x-designable-id": "ng0zwjqjcph",
                                        "x-index": 4,
                                        "properties": {
                                            "defaultSearch": {
                                                "title": "默认搜索方式",
                                                "x-decorator": "FormItem",
                                                "x-component": "Select",
                                                "x-validator": [],
                                                "x-component-props": {},
                                                "x-decorator-props": {},
                                                "name": "defaultSearch",
                                                "enum": [],
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  const dataSource = rootField.state.searchList.map((item) => {\n    return {\n      label: item.title,\n      value: item.id,\n    }\n  })\n  $self.dataSource = dataSource\n}, [rootField.state.searchList])\n\n$effect(() => {\n  $self.value = rootField.state.defaultSearch.id\n}, [rootField.state.defaultSearch])\n\n$props({\n  // 监听到默认搜索方式变更\n  onChange: async (id) => {\n    const { title, url } = rootField.state.searchList.find(\n      (item) => (item.id === id)\n    )\n    // 更新默认搜索方式\n    await rootField.updateDefaultSearch({\n      id,\n      title,\n      url,\n    })\n  },\n})\n"
                                                    }
                                                },
                                                "x-designable-id": "jovzj3fd8iq",
                                                "x-index": 0
                                            },
                                            "searchTable": {
                                                "type": "array",
                                                "x-decorator": "FormItem",
                                                "x-component": "ArrayTable",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "bordered": false,
                                                    "showHeader": true,
                                                    "tableLayout": "fixed",
                                                    "style": {
                                                        "margin": "0px 10px 0px 10px"
                                                    }
                                                },
                                                "x-decorator-props": {},
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  $self.value = rootField.state.searchList\n}, [rootField.state.searchList])\n"
                                                    }
                                                },
                                                "x-designable-id": "70ctm2ra9h9",
                                                "x-index": 1,
                                                "name": "searchTable",
                                                "items": {
                                                    "type": "object",
                                                    "x-designable-id": "3t8eawnrvot",
                                                    "x-validator": [],
                                                    "properties": {
                                                        "titleColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "搜索方式名称",
                                                                "width": 150
                                                            },
                                                            "x-designable-id": "gpd658dd1k3",
                                                            "x-index": 0,
                                                            "name": "titleColumn",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "x-component": "Text",
                                                                    "x-validator": [],
                                                                    "x-component-props": {},
                                                                    "name": "title",
                                                                    "x-designable-id": "9ux9bd3hp3e",
                                                                    "x-index": 0
                                                                }
                                                            }
                                                        },
                                                        "urlColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "搜索地址"
                                                            },
                                                            "x-designable-id": "ap4ei4xmmcq",
                                                            "x-index": 1,
                                                            "name": "urlColumn",
                                                            "properties": {
                                                                "url": {
                                                                    "type": "string",
                                                                    "x-component": "Text",
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "content": ""
                                                                    },
                                                                    "name": "url",
                                                                    "x-designable-id": "rq8dzdm1uqy",
                                                                    "x-index": 0
                                                                }
                                                            }
                                                        },
                                                        "operateColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "操作",
                                                                "width": 135,
                                                                "align": "center"
                                                            },
                                                            "x-designable-id": "50sc25za39d",
                                                            "x-index": 2,
                                                            "name": "operateColumn",
                                                            "properties": {
                                                                "deleteSearchBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.deleteSearch(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "DeleteOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 0px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "jczm5g5zu2i",
                                                                    "x-index": 0,
                                                                    "name": "deleteSearchBtn"
                                                                },
                                                                "moveUpSearchBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.moveUpSearch(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "ArrowUpOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "tx0igs06dp7",
                                                                    "x-index": 1,
                                                                    "name": "moveUpSearchBtn"
                                                                },
                                                                "moveDownSearchBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.moveDownSearch(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "ArrowDownOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "yhiaqk8k9af",
                                                                    "x-index": 2,
                                                                    "name": "moveDownSearchBtn"
                                                                },
                                                                "editSearchBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.showAddOrUpdateSearchDialog(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "EditOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "td2tiv3h78i",
                                                                    "x-index": 3,
                                                                    "name": "editSearchBtn"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "addOrUpdateSearchDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "const rootName = \"searchCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(async () => {\n        const searchForm = $self.value\n        // $logger.info(\"$self.value\", searchForm)\n\n        // 添加或更新搜索方式\n        await rootField.addOrUpdateSearch({\n          ...searchForm,\n        })\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {},
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "添加搜索方式",
                                            "zIndex": 1001
                                        },
                                        "name": "addOrUpdateSearchDialog",
                                        "x-designable-id": "3youpwjdv0v",
                                        "x-index": 5,
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "title": "搜索名称",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入搜索方式名称"
                                                },
                                                "x-decorator-props": {},
                                                "name": "title",
                                                "required": true,
                                                "x-designable-id": "e6lsb1539ud",
                                                "x-index": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "title": "搜索地址",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入搜索地址"
                                                },
                                                "x-decorator-props": {},
                                                "required": true,
                                                "name": "url",
                                                "x-designable-id": "mgc9j4atfz0",
                                                "x-index": 1,
                                                "description": "使用 %s 代替搜索关键词"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "csehzbiy14w": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {
                            "gridSpan": 1
                        },
                        "x-designable-id": "csehzbiy14w",
                        "x-index": 3,
                        "properties": {
                            "todoAppCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "todoAppCardDiv",
                                "x-designable-id": "t807bach67h",
                                "x-index": 0,
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "// 区块路径\nconst rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n\n// 修复样式问题\n$props({\n  className: $self.props.name,\n})\n$effect(() => {\n  const rootNode = document.querySelector(`.${$self.props.name}`)\n  if (rootNode) {\n    const element = rootNode.querySelector(\n      \".ant-formily-item-feedback-layout-loose\"\n    )\n    if (element) {\n      element.style.marginBottom = 0\n    }\n  }\n}, [])\n\n$self.crud = {\n  // 条目中文名称\n  itemChineseName: \"待办\",\n  // 条目表格组件的名称\n  itemTableName: `todoTable`,\n  // 添加或修改对话框的名称\n  addOrUpdateDialogName: `addOrUpdateTodoDialog`,\n  // 条目默认列表数据\n  defualtItemList: [],\n  // 条目列表持久化缓存的 key\n  cacheKeyItemList: `${cacheKeyPrefix}TodoApp`,\n  // 展示添加或修改条目对话框\n  showAddOrUpdateDialog(toAddOrUpdateItem) {\n    const addOrUpdateDialog = $self\n      .query(`${rootEntire}.${this.addOrUpdateDialogName}`)\n      .take()\n    addOrUpdateDialog.value = {\n      ...(toAddOrUpdateItem || {\n        completed: false,\n      }),\n    }\n\n    // 每次打开弹窗前都清空下表单错误\n    $form.clearErrors()\n\n    addOrUpdateDialog.setComponentProps({\n      open: true,\n      title: `${toAddOrUpdateItem ? \"修改\" : \"添加\"}${this.itemChineseName}`,\n    })\n  },\n  // 添加或修改条目\n  async addOrUpdateItem(toAddOrUpdateItem) {\n    const list = await this.fetchItemList()\n\n    if (toAddOrUpdateItem.id) {\n      // 修改\n      const index = list.findIndex((item) => item.id === toAddOrUpdateItem.id)\n      list[index] = toAddOrUpdateItem\n    } else {\n      // 添加\n      toAddOrUpdateItem.id = Date.now()\n      list.push(toAddOrUpdateItem)\n    }\n\n    await this.saveItemList(list)\n  },\n  // 删除条目\n  async deleteItem(toDeleteItem) {\n    let list = await this.fetchItemList()\n    list = list.filter((item) => item.id !== toDeleteItem.id)\n    await this.saveItemList(list)\n  },\n  // 往前移动条目\n  async moveUpItem(toMoveItem) {\n    let list = await this.fetchItemList()\n\n    const index = list.findIndex((item) => item.id === toMoveItem.id)\n    let preIndex = index - 1\n    if (preIndex === -1) {\n      // 已经是第一条，则和最后一条互换\n      preIndex = list.length - 1\n    }\n\n    const other = list[preIndex]\n    list[preIndex] = toMoveItem\n    list[index] = other\n\n    await this.saveItemList(list)\n  },\n  // 往后移动条目\n  async moveDownItem(toMoveItem) {\n    let list = await this.fetchItemList()\n\n    const index = list.findIndex((item) => item.id === toMoveItem.id)\n    let nextIndex = index + 1\n    if (nextIndex === list.length) {\n      // 已经是最后一条，则和第一条互换\n      nextIndex = 0\n    }\n\n    const other = list[nextIndex]\n    list[nextIndex] = toMoveItem\n    list[index] = other\n\n    await this.saveItemList(list)\n  },\n  // 保存条目列表数据\n  async saveItemList(newItemList) {\n    try {\n      const sortedItemList = newItemList.sort((itemA, itemB) => {\n        const itemACompleted = itemA.completed ? 1 : 0\n        const itemBCompleted = itemB.completed ? 1 : 0\n        if (itemACompleted !== itemBCompleted) {\n          return itemACompleted - itemBCompleted\n        }\n\n        return itemA.time > itemB.time ? 1 : itemA.time < itemB.time ? -1 : 0\n      })\n      await $chrome.localStorage.setItem(\n        this.cacheKeyItemList,\n        JSON.stringify(sortedItemList)\n      )\n\n      await this.refreshItemList()\n    } catch (e) {\n      $logger.info(`保存${this.itemChineseName}列表数据失败`, e)\n    }\n  },\n  // 获取条目列表\n  async fetchItemList() {\n    let res = null\n    try {\n      res = await $chrome.localStorage.getItem(this.cacheKeyItemList)\n    } catch (e) {\n      $logger.info(`获取${this.itemChineseName}列表失败`, e)\n      return []\n    }\n\n    if (!res) {\n      this.saveItemList(this.defualtItemList)\n      return this.defualtItemList\n    }\n\n    try {\n      const itemList = JSON.parse(res) || []\n      return itemList\n    } catch (e) {\n      $logger.info(`解析${this.itemChineseName}列表数据失败`, e)\n      return []\n    }\n  },\n\n  // 刷新条目列表\n  async refreshItemList() {\n    const itemList = await this.fetchItemList()\n\n    const itemListField = $self\n      .query(`${rootEntire}.${this.itemTableName}`)\n      .take()\n    if (itemListField) {\n      // 如果涉及到图片，则先清空在重新赋值，不然图片不会更新\n      // itemListField.value = []\n      itemListField.value = itemList\n    }\n\n    if (itemList.length > 0) {\n      // TODO 存在到时间还未完成的代码，发系统通知\n    }\n  },\n}\n\n$effect(() => {\n  $self.crud.refreshItemList()\n}, [])\n"
                                    }
                                },
                                "properties": {
                                    "headerDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "21k68736j3t",
                                        "x-index": 0,
                                        "name": "headerDiv",
                                        "properties": {
                                            "headerLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "nnywm801yxs",
                                                "x-index": 0,
                                                "name": "headerLeftDiv",
                                                "properties": {
                                                    "todoAppHeaderImg": {
                                                        "type": "string",
                                                        "x-component": "Img",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "src": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/dynamicSchemaBlockTemplate/todo-list/icon.png",
                                                            "style": {
                                                                "width": "20px",
                                                                "height": "20px"
                                                            }
                                                        },
                                                        "x-designable-id": "sxqaace5v8h",
                                                        "x-index": 0,
                                                        "name": "todoAppHeaderImg"
                                                    },
                                                    "todoAppTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "待办清单",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 4px"
                                                            }
                                                        },
                                                        "x-designable-id": "hm50gibwoui",
                                                        "x-index": 1,
                                                        "name": "todoAppTitle"
                                                    }
                                                }
                                            },
                                            "addTodoBtn": {
                                                "type": "string",
                                                "x-component": "Button",
                                                "x-reactions": {
                                                    "fulfill": {
                                                        "run": "const rootName = \"todoAppCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.crud.showAddOrUpdateDialog(null)\n  },\n})\n"
                                                    },
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ]
                                                },
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "children": "",
                                                    "target": "_blank",
                                                    "icon": "PlusCircleOutlined",
                                                    "type": "default",
                                                    "size": "small"
                                                },
                                                "x-designable-id": "xwd27rrj15j",
                                                "x-index": 1,
                                                "name": "addTodoBtn"
                                            }
                                        }
                                    },
                                    "divider": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 4px 0px"
                                            }
                                        },
                                        "x-designable-id": "rbr1062ebha",
                                        "x-index": 1,
                                        "name": "divider"
                                    },
                                    "todoTable": {
                                        "type": "array",
                                        "x-decorator": "FormItem",
                                        "x-component": "ArrayTable",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "bordered": false,
                                            "showHeader": true,
                                            "tableLayout": "fixed",
                                            "style": {
                                                "margin": "0px 10px 0px 10px"
                                            }
                                        },
                                        "x-decorator-props": {},
                                        "x-designable-id": "n3q2kpuzko7",
                                        "x-index": 2,
                                        "name": "todoTable",
                                        "items": {
                                            "type": "object",
                                            "x-designable-id": "5ptax15yybb",
                                            "x-validator": [],
                                            "properties": {
                                                "n2cy7p78jl9": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "待办事项"
                                                    },
                                                    "x-designable-id": "n2cy7p78jl9",
                                                    "x-index": 0,
                                                    "properties": {
                                                        "title": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "title",
                                                            "x-designable-id": "frl8og25z6s",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "y6ar1ujnvf5": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "截止时间",
                                                        "width": 170,
                                                        "align": "center"
                                                    },
                                                    "x-designable-id": "y6ar1ujnvf5",
                                                    "x-index": 1,
                                                    "properties": {
                                                        "time": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "time",
                                                            "x-designable-id": "0b19d77luuc",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "jojumsms5ki": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "状态",
                                                        "width": 90,
                                                        "align": "center"
                                                    },
                                                    "x-designable-id": "jojumsms5ki",
                                                    "x-index": 2,
                                                    "properties": {
                                                        "completed": {
                                                            "type": "boolean",
                                                            "x-decorator": "FormItem",
                                                            "x-component": "Switch",
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "checkedChildren": "已完成",
                                                                "unCheckedChildren": "未完成",
                                                                "style": {},
                                                                "size": "default"
                                                            },
                                                            "x-decorator-props": {},
                                                            "name": "completed",
                                                            "x-reactions": {
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ],
                                                                "fulfill": {
                                                                    "run": "const rootName = \"todoAppCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onChange: async (completed) => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    await rootField.crud.addOrUpdateItem({\n      ...row,\n    })\n  },\n})\n"
                                                                }
                                                            },
                                                            "x-designable-id": "lu66ncd7h0g",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "dxlfjs2bzmi": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "操作",
                                                        "width": 90,
                                                        "align": "center"
                                                    },
                                                    "x-designable-id": "dxlfjs2bzmi",
                                                    "x-index": 3,
                                                    "properties": {
                                                        "deleteTodoBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"todoAppCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.deleteItem(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "DeleteOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 0px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "5k821e4fk7q",
                                                            "x-index": 0,
                                                            "name": "deleteTodoBtn"
                                                        },
                                                        "editTodoBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"todoAppCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.showAddOrUpdateDialog(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "EditOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 6px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "njllgtecfr6",
                                                            "x-index": 1,
                                                            "name": "editTodoBtn"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "addOrUpdateTodoDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "const rootName = \"todoAppCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(async () => {\n        const itemForm = $self.value\n        // $logger.info(\"$self.value\", itemForm)\n\n        // 添加或更新条目\n        await rootField.crud.addOrUpdateItem({\n          ...itemForm,\n        })\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {},
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "添加待办"
                                        },
                                        "name": "addOrUpdateTodoDialog",
                                        "x-designable-id": "nvk85zsjjo4",
                                        "x-index": 3,
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "title": "待办事项",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入待办事项",
                                                    "allowClear": true
                                                },
                                                "x-decorator-props": {},
                                                "name": "title",
                                                "required": true,
                                                "x-designable-id": "erzgaas5txp",
                                                "x-index": 0
                                            },
                                            "time": {
                                                "type": "string",
                                                "title": "截止时间",
                                                "x-decorator": "FormItem",
                                                "x-component": "DatePicker",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "picker": "date",
                                                    "showTime": true,
                                                    "showToday": false,
                                                    "showNow": false,
                                                    "placeholder": "请选择完成时间"
                                                },
                                                "x-decorator-props": {},
                                                "name": "time",
                                                "required": true,
                                                "x-designable-id": "w82v6sv04bl",
                                                "x-index": 1
                                            },
                                            "completed": {
                                                "type": "boolean",
                                                "title": "是否已完成",
                                                "x-decorator": "FormItem",
                                                "x-component": "Switch",
                                                "x-validator": [],
                                                "x-component-props": {},
                                                "x-decorator-props": {},
                                                "name": "completed",
                                                "required": true,
                                                "default": false,
                                                "x-designable-id": "6gvkxmbdcwq",
                                                "x-index": 2
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "txw2uae2s4z": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {},
                        "x-designable-id": "txw2uae2s4z",
                        "x-index": 4,
                        "properties": {
                            "translateCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "translateCardDiv",
                                "x-designable-id": "ade9t8kflpc",
                                "x-index": 0,
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "// 区块路径\nconst rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n\n// 修复样式问题\n$props({\n  className: $self.props.name,\n})\n$effect(() => {\n  const rootNode = document.querySelector(`.${$self.props.name}`)\n  if (rootNode) {\n    const element = rootNode.querySelector(\n      \".ant-formily-item-feedback-layout-loose\"\n    )\n    if (element) {\n      element.style.marginBottom = 0\n    }\n  }\n}, [])\n"
                                    }
                                },
                                "properties": {
                                    "headerDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "7dycm9fafsn",
                                        "x-index": 0,
                                        "name": "headerDiv",
                                        "properties": {
                                            "headerLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "cbhy83gcxqi",
                                                "x-index": 0,
                                                "name": "headerLeftDiv",
                                                "properties": {
                                                    "translateHeaderImg": {
                                                        "type": "string",
                                                        "x-component": "Img",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "src": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/dynamicSchemaBlockTemplate/translate/icon.svg",
                                                            "style": {
                                                                "width": "20px",
                                                                "height": "20px"
                                                            }
                                                        },
                                                        "x-designable-id": "mx17k89jp3m",
                                                        "x-index": 0,
                                                        "name": "translateHeaderImg"
                                                    },
                                                    "translateTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "翻译",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 4px"
                                                            }
                                                        },
                                                        "x-designable-id": "1p651k33in0",
                                                        "x-index": 1,
                                                        "name": "translateTitle"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "divider": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 0px 0px"
                                            }
                                        },
                                        "x-designable-id": "ohiba0voyar",
                                        "x-index": 1,
                                        "name": "divider"
                                    },
                                    "fromLanguage": {
                                        "type": "string",
                                        "title": "",
                                        "x-decorator": "FormItem",
                                        "x-component": "Input.TextArea",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "placeholder": "请输入文本，回车或失去焦点时自动触发翻译"
                                        },
                                        "x-decorator-props": {
                                            "style": {
                                                "margin": "8px 8px 0px 8px"
                                            }
                                        },
                                        "name": "fromLanguage",
                                        "x-designable-id": "sqxkf6ycyyr",
                                        "x-index": 2,
                                        "x-reactions": {
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ],
                                            "fulfill": {
                                                "run": "const getLan = (text) => {\n  return fetch(\"https://fanyi.baidu.com/langdetect\", {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    body: `query=${encodeURIComponent(text)}`,\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.error === 0) {\n        return res.lan\n      } else {\n        $message.error(`自动检测当前语言失败 ${res.msg}`)\n        return null\n      }\n    })\n    .catch((e) => {\n      $message.error(\"自动检测当前语言失败\")\n      return null\n    })\n}\n\nconst getToLanguage = (from, text) => {\n  let to = \"zh\"\n  if (from === \"zh\") {\n    to = \"en\"\n  }\n  return fetch(\"https://fanyi.baidu.com/transapi\", {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    body: `from=${from}&query=${encodeURIComponent(text)}&source=txt&to=${to}`,\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.status === 0) {\n        if (res.type === 2) {\n          return res.data?.[0].dst\n        } else if (res.type === 1) {\n          const data = JSON.parse(res.result)\n          const mean = data.content[0].mean\n          const result = mean\n            .map((item) => {\n              const cont = Object.keys(item.cont).join(\"; \")\n\n              if (item.pre) {\n                return `${item.pre} ${cont}`\n              } else {\n                return cont\n              }\n            })\n            .join(\"\\n\")\n          return result\n        } else {\n          $message.error(\"未支持的翻译类型\")\n          return\n        }\n      } else {\n        $message.error(\"翻译失败\")\n        return null\n      }\n    })\n    .catch((e) => {\n      $message.error(\"翻译失败\")\n      return null\n    })\n}\n\nlet lastText = null\nconst handleTranslate = async (e) => {\n  const toLanguage = $self\n    .query(`${$self.parent.address.entire}.toLanguage`)\n    .take()\n\n  const text = e.target.value\n  if (!text) {\n    toLanguage.value = \"\"\n    return\n  }\n  if (text === lastText) {\n    return\n  }\n\n  lastText = text\n\n  const lan = await getLan(text)\n  if (!lan) {\n    toLanguage.value = \"\"\n    return\n  }\n\n  const result = await getToLanguage(lan, text)\n  if (!result) {\n    toLanguage.value = \"\"\n    return\n  }\n\n  toLanguage.value = result\n}\n\n$props({\n  onChange: (e) => {\n    const text = e.target.value\n    if (!text) {\n      const toLanguage = $self\n        .query(`${$self.parent.address.entire}.toLanguage`)\n        .take()\n      toLanguage.value = \"\"\n    }\n  },\n  onPressEnter: (e) => {\n    e.preventDefault()\n\n    handleTranslate(e)\n  },\n  onBlur: (e) => {\n    handleTranslate(e)\n  },\n})\n"
                                            }
                                        }
                                    },
                                    "toLanguage": {
                                        "type": "string",
                                        "title": "",
                                        "x-decorator": "FormItem",
                                        "x-component": "Input.TextArea",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "placeholder": "翻译结果",
                                            "autoSize": {
                                                "minRows": 3,
                                                "maxRows": 5
                                            },
                                            "style": {}
                                        },
                                        "x-decorator-props": {
                                            "style": {
                                                "margin": "8px 8px 8px 8px"
                                            }
                                        },
                                        "name": "toLanguage",
                                        "x-designable-id": "ilgw9xcvvz1",
                                        "x-index": 3,
                                        "x-pattern": "readOnly"
                                    }
                                }
                            }
                        }
                    },
                    "de7xqyabrw6": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-designable-id": "de7xqyabrw6",
                        "x-index": 5,
                        "x-validator": [],
                        "x-component-props": {},
                        "properties": {
                            "duoLinGuoCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "duoLinGuoCardDiv",
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n// 多邻国指南链接持久化缓存的 key\nconst cacheKeyDuoLinGuoGuidebookUrl = `${cacheKeyPrefix}duoLinGuoGuidebookUrl`\n// 多邻国指南数据持久化缓存的 key\nconst cacheKeyDuoLinGuoGuidebookData = `${cacheKeyPrefix}duoLinGuoGuidebookData`\n// 多领国卡片标题持久化缓存的 key\nconst cacheKeyDuoLinGuoCardTitle = `${cacheKeyPrefix}duoLinGuoCardTitle`\n// 多领国卡片设置持久化缓存的 key\nconst cacheKeyDuoLinGuoSettings = `${cacheKeyPrefix}cacheKeyDuoLinGuoSettings`\n\n// 修复样式问题\n$props({\n  className: $self.props.name,\n})\n$effect(() => {\n  const rootNode = document.querySelector(`.${$self.props.name}`)\n  if (rootNode) {\n    const element = rootNode.querySelector(\n      \".ant-formily-item-feedback-layout-loose\"\n    )\n    if (element) {\n      element.style.marginBottom = 0\n    }\n  }\n}, [])\n\n// 展示设置对话框\n$self.showSettingsDialog = () => {\n  const settingsDialog = $self.query(`${rootEntire}.settingsDialog`).take()\n  settingsDialog.setComponentProps({\n    open: true,\n  })\n}\n\n// 获取多邻国设置信息\n$self.getSettings = async () => {\n  try {\n    const settingsStr = await $chrome.localStorage.getItem(\n      cacheKeyDuoLinGuoSettings\n    )\n\n    if (settingsStr) {\n      try {\n        return JSON.parse(settingsStr)\n      } catch (e) {\n        $logger.info(\"解析缓存的多邻国指南表单失败\")\n        return {}\n      }\n    }\n  } catch (e) {\n    $logger.info(\"获取缓存的多邻国设置失败\", e)\n    return {}\n  }\n}\n\n// 更新多领国设置\n$self.updateSettings = async ({ settingsStr, guidebookUrl, cardTitle }) => {\n  try {\n    await $chrome.localStorage.setItem(cacheKeyDuoLinGuoSettings, settingsStr)\n    await $chrome.localStorage.setItem(cacheKeyDuoLinGuoCardTitle, cardTitle)\n    await $chrome.localStorage.setItem(\n      cacheKeyDuoLinGuoGuidebookUrl,\n      guidebookUrl\n    )\n\n    refreshDuoLinGuoCardTitle()\n    fetchGuidebookFromRemote(guidebookUrl)\n  } catch (e) {\n    $logger.info(\"更新多邻国设置失败\", e)\n  }\n}\n\n// 刷新多邻国卡片标题\nconst refreshDuoLinGuoCardTitle = async () => {\n  try {\n    const cardTitle = await $chrome.localStorage.getItem(\n      cacheKeyDuoLinGuoCardTitle\n    )\n    const headerTitleText = $self\n      .query(`${rootEntire}.headerDiv.headerLeftDiv.headerTitleText`)\n      .take()\n    if (cardTitle) {\n      headerTitleText.value = cardTitle\n    } else {\n      headerTitleText.value = \"请先设置要学习的多邻国指南\"\n    }\n  } catch (e) {\n    $logger.info(\"获取缓存的多邻国指南标题失败\", e)\n  }\n}\n\n// 展示页面内通知和系统通知\nconst sendNotification = (item) => {\n  $message.success(`${item.learningLanguage} ${item.fromLanguage}`)\n\n  // 创建系统通知\n  $chrome.notifications.create(\n    null,\n    {\n      type: \"basic\",\n      title: item.learningLanguage,\n      message: item.fromLanguage || \"\",\n      iconUrl:\n        \"https://d35aaqx5ub95lt.cloudfront.net/images/pathCharacters/guidebook/939ebad747027f1a9d365e15fda3a4e1.svg\",\n    },\n    $chrome.proxy((notificationId) => {\n      // 延迟 6 秒清除系统通知\n      setTimeout(() => {\n        $chrome.notifications.clear(notificationId)\n      }, 6000)\n    })\n  )\n}\n\n// 设置指南表格数据\nconst setGuidebookTableData = (guideBookData) => {\n  const guidebookTable = $self.query(`${rootEntire}.guidebookTable`).take()\n  if (guidebookTable) {\n    guidebookTable.value = guideBookData\n  }\n}\n\n// 从缓存中读取多邻国指南配置数据\nconst fetchGuidebookFromCache = async () => {\n  try {\n    const res = await $chrome.localStorage.getItem(\n      cacheKeyDuoLinGuoGuidebookData\n    )\n    if (res) {\n      try {\n        const guideBookData = JSON.parse(res)\n        setGuidebookTableData(guideBookData)\n      } catch (e) {\n        $logger.info(\"从缓存中解析多邻国指南数据失败\", e)\n      }\n    }\n  } catch (e) {\n    $logger.info(\"从缓存中读取多邻国指南数据失败\", e)\n  }\n}\n\n// 从远程获取多邻国指南配置数据\nconst fetchGuidebookFromRemote = (url) => {\n  fetch(url)\n    .then((res) => res.json())\n    .then((res) => res.elements)\n    .then((res) => {\n      // console.log(\"过滤前\", res)\n\n      // const filterArr = [\"text\", \"dialogue\", \"example\"]\n      const filterArr = [\"dialogue\", \"example\"]\n\n      return res.filter((item) => filterArr.includes(item.type))\n    })\n    .then((res) => {\n      return res.map((item) => {\n        const { type, element } = item\n        if (type === \"text\") {\n          return {\n            type,\n            fromLanguage: element.styledString.text,\n          }\n        } else if (type === \"dialogue\") {\n          if (element.phrases.length === 2) {\n            return {\n              type: type,\n              learningLanguage: element.phrases\n                .map((phrase) => phrase.text?.styledString?.text)\n                .join(\" \"),\n              fromLanguage: \"\",\n              tts: element.phrases[0]?.ttsURL,\n            }\n          }\n\n          const phrase = element.phrases[0]\n          return {\n            type: type,\n            learningLanguage: phrase?.text?.styledString?.text,\n            fromLanguage: phrase?.subtext?.styledString?.text,\n            tts: phrase?.ttsURL,\n          }\n        } else if (type === \"example\") {\n          return {\n            type: type,\n            learningLanguage: element.text?.styledString?.text,\n            fromLanguage: element.subtext?.styledString?.text,\n            tts: element.ttsURL,\n          }\n        }\n\n        return item\n      })\n    })\n    .then((res) => {\n      // console.log(\"映射后\", res)\n\n      setGuidebookTableData(res)\n\n      // 缓存多邻国指南数据到本地\n      $chrome.localStorage.setItem(\n        cacheKeyDuoLinGuoGuidebookData,\n        JSON.stringify(res)\n      )\n\n      const randomIndex = parseInt(Math.random() * res.length)\n      const randomItem = res[randomIndex]\n      sendNotification(randomItem)\n    })\n    .catch((e) => {\n      $logger.info(\"获取多领国信息失败\", e)\n    })\n}\n\n// 初始化指南数据\nconst initGuidebookData = async () => {\n  try {\n    // 读取缓存的 url\n    const url = await $chrome.localStorage.getItem(\n      cacheKeyDuoLinGuoGuidebookUrl\n    )\n    if (url) {\n      // 先从缓存读取\n      fetchGuidebookFromCache()\n\n      // 然后再从远程读取\n      fetchGuidebookFromRemote(url)\n    } else {\n      // $logger.info(\"未设置要学习的多邻国指南 url\")\n    }\n  } catch (e) {\n    $logger.info(\"获取缓存的多邻国指南 url 失败\", e)\n  }\n}\n\n$effect(() => {\n  refreshDuoLinGuoCardTitle()\n  initGuidebookData()\n}, [])\n"
                                    }
                                },
                                "x-index": 0,
                                "x-designable-id": "md2kmeqy4bz",
                                "properties": {
                                    "headerDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "2coklg7gl9n",
                                        "x-index": 0,
                                        "name": "headerDiv",
                                        "properties": {
                                            "headerLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "sl3b3xclo47",
                                                "x-index": 0,
                                                "name": "headerLeftDiv",
                                                "properties": {
                                                    "headerImg": {
                                                        "type": "string",
                                                        "x-component": "Img",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "src": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/dynamicSchemaBlockTemplate/duo-ling-guo/icon.svg",
                                                            "style": {
                                                                "width": "20px",
                                                                "height": "20px"
                                                            }
                                                        },
                                                        "x-designable-id": "grc32ahl3kd",
                                                        "x-index": 0,
                                                        "name": "headerImg"
                                                    },
                                                    "headerTitleText": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 4px"
                                                            }
                                                        },
                                                        "x-designable-id": "pzyhxqvfy28",
                                                        "x-index": 1,
                                                        "name": "headerTitleText"
                                                    }
                                                }
                                            },
                                            "settingsBtn": {
                                                "type": "string",
                                                "x-component": "Button",
                                                "x-reactions": {
                                                    "fulfill": {
                                                        "run": "const rootName = \"duoLinGuoCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showSettingsDialog()\n  },\n})\n"
                                                    },
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ]
                                                },
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "children": "",
                                                    "target": "_blank",
                                                    "icon": "SettingOutlined",
                                                    "type": "default",
                                                    "size": "small"
                                                },
                                                "x-designable-id": "rmtx5m9758q",
                                                "x-index": 1,
                                                "name": "settingsBtn"
                                            }
                                        }
                                    },
                                    "divider": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 4px 0px"
                                            }
                                        },
                                        "x-designable-id": "lgbktuqucjj",
                                        "x-index": 1,
                                        "name": "divider"
                                    },
                                    "guidebookTable": {
                                        "type": "array",
                                        "x-decorator": "FormItem",
                                        "x-component": "ArrayTable",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "bordered": false,
                                            "showHeader": true,
                                            "tableLayout": "fixed",
                                            "style": {
                                                "margin": "0px 10px 0px 10px"
                                            }
                                        },
                                        "x-decorator-props": {},
                                        "x-designable-id": "z9aqp5onkte",
                                        "x-index": 2,
                                        "name": "guidebookTable",
                                        "items": {
                                            "type": "object",
                                            "x-designable-id": "03x1gnsukz1",
                                            "x-validator": [],
                                            "properties": {
                                                "a8psvpb1mad": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "学的语言"
                                                    },
                                                    "x-designable-id": "a8psvpb1mad",
                                                    "x-index": 0,
                                                    "properties": {
                                                        "learningLanguage": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "learningLanguage",
                                                            "x-designable-id": "x5behdpaa8s",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "6u62aukvku1": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "我的语言"
                                                    },
                                                    "x-designable-id": "6u62aukvku1",
                                                    "x-index": 1,
                                                    "properties": {
                                                        "fromLanguage": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "fromLanguage",
                                                            "x-designable-id": "j1n1nx26sva",
                                                            "x-index": 0
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "settingsDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "const rootName = \"duoLinGuoCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n// 回显数据\n$effect(() => {\n  if (!$self.componentProps.open) {\n    return\n  }\n\n  rootField.getSettings().then((settings) => {\n    $self.value = settings\n  })\n}, [$self.componentProps.open])\n\n$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: async () => {\n    try {\n      await $self.validate()\n    } catch (e) {\n      $logger.info(\"表单校验失败\", e)\n      return\n    }\n\n    const settingsStr = JSON.stringify($self.value)\n    // $logger.info(\"$self.value\", settingsStr)\n\n    const guidebook = $self.value.guidebook\n    const sectionTitle = guidebook[0]\n    const guidebookUrl = guidebook[1]\n\n    const guidebookField = $self\n      .query(`${$self.address.entire}.guidebook`)\n      .take()\n\n    const dataSource = guidebookField.dataSource\n    const unitTitle = dataSource\n      .find((item) => item.label === sectionTitle)\n      .children.find((item) => item.value === guidebookUrl).label\n\n    const cardTitle = `${sectionTitle}，${unitTitle}`\n\n    try {\n      await rootField.updateSettings({\n        settingsStr,\n        guidebookUrl,\n        cardTitle,\n      })\n    } catch (e) {\n      $logger.info(\"更新多邻国设置失败\", e)\n    }\n\n    // 关闭当前对话框\n    $self.componentProps.open = false\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {},
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "选择要学习的指南"
                                        },
                                        "name": "settingsDialog",
                                        "x-designable-id": "j17i04rjjtf",
                                        "x-index": 3,
                                        "properties": {
                                            "guidebook": {
                                                "title": "指南",
                                                "x-decorator": "FormItem",
                                                "x-component": "Cascader",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "changeOnSelect": false,
                                                    "showSearch": true,
                                                    "placeholder": "请选择指南",
                                                    "autoFocus": true,
                                                    "bordered": true
                                                },
                                                "x-decorator-props": {},
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "$effect(() => {\n  $self.dataSource = [\n    {\n      label: \"第 1 阶段\",\n      value: \"第 1 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，连词成句\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f4c7099399dbe819c82741939eb1e289ba8d651faa01b1091db106d4ae7031ea234c010a1956ec204e3aaf553bc184b259fa05e9e74518219da7237407064887/12.json\",\n        },\n        {\n          label: \"第 2 部分，介绍简单的物品和颜色\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/aedd9d5faa29b1512632af9b365942adce00070f7cff25f9afab71051f4c01fc28370c7d6e9b5e1ef6baa3b9082978b3f177e1122e7540028eb12655c2768ec0/12.json\",\n        },\n        {\n          label: \"第 3 部分，描述饮料\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a65e3e4977c8b4af03c3231212942c1d277fa5ed5749303a41804f729c44470696241fd9c570517af58724c4c791ae2d75f2008f74cd99d7ff3af2ee31676775/12.json\",\n        },\n        {\n          label: \"第 4 部分，与人打招呼\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8013e1d952ad0e0c15ec3caee65f758638921ddc79190e5bb27e98f000f8a49b6584443812eee71c8bf02f99d623568f9687bada74ee35a69e96e023a8b4b87d/13.json\",\n        },\n        {\n          label: \"第 5 部分，描述个人物品\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/19513d8d5b8373d65a56ddc28a2678a3b15786172d3cd26a76e241c3e3a06a8e3231d09d9762e6a46530e64c60ba17ae7af71e8b69cf260308cbf28469611fb8/12.json\",\n        },\n        {\n          label: \"第 6 部分，介绍自己来自哪里\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b4b62bdc7fcdbf6b5e3a4a8ca11a335c5fa73379bdde2f65f6afe0e267f5ba288a4c032c31f1bab56648e2232669fc138dd2d12c221e7e31ea5927c4f6d1d4d9/12.json\",\n        },\n        {\n          label: \"第 7 部分，在咖啡厅点餐\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ea9c4acb9ee37214f18a08766a5bbf74ffee532cd91acee0988f6c00e5cbf180b6d42c7b7453d5c78f265e4318715e43d1be1ef6aa8eacd5d0440e895fa9d679/12.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 2 阶段\",\n      value: \"第 2 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，介绍自己的职业\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c050b6ff9c36da37f032f52feccd2ce1d0cc35e7a25a472220f98738db4ae48bf82fb24b9ed61cdcb2b84aafc27a1baa705e2cd3556ba05dd6288772d2cae165/12.json\",\n        },\n        {\n          label: \"第 2 部分，谈论衣物及价格\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ae79f27e10d8364ba6b5f3b78a4c0026678d368aaf4ed5f1e85bec922355373bcbfcf940f5724508a51065682b32af5ffce9bcfd9fea91b74986d3b57dc2952b/12.json\",\n        },\n        {\n          label: \"第 3 部分，描述自己的家人\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/72f4a5e4cca0a4a420b7427795c2abd409840c86f22cd3c68404f08acbf439198f0881a358f899d791a332207b0506d98b77aa5c15c74978c02cf546f7ad1eb1/12.json\",\n        },\n        {\n          label: \"第 4 部分，在餐厅点餐\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e44573e70c89cfdbfb19abcf07bfba466d05d1c17ddfc7a5fb7ee03ed9c8a25e32345132606bfb38358fb793f53ab0af88c35de5e66efffe8aaddd65a72e4b6b/12.json\",\n        },\n        {\n          label: \"第 5 部分，谈论学校\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/20ec97194d406ac60f49cfe9d2cb50980d0dfaab56e790306c3f4693f34ff5785afa2cd49567a2de09c564d11d8da02c3ecb7c2a5d59ba23cf421cae0489aaef/12.json\",\n        },\n        {\n          label: \"第 6 部分，询问个人物品\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/aaafb235b86ce6e58dc674b0afb35acc9e4f776f7e4e10ce861cc848c92c70157a8d0a3a633cd61784b8a80127a9b4989d2f552f898846c5c86d63747dfeaa4f/12.json\",\n        },\n        {\n          label: \"第 7 部分，描述人际关系\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/913120ce86dfcfa46486d02b14dc691440fe0f0495ab9e1b2920035187b55bdba9e834ae767d1c965ed78aa623c59e174f398e5b3d7004db8752bc311e4e16b3/12.json\",\n        },\n        {\n          label: \"第 8 部分，交换个人信息\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2e4b34a0c08b85784ef247787a2fc38baeab5516d57ccfad9de86e1bcf7e8ee57b12e1c3bbeff6511bf59fb62e07439017d712d0f010a2580dd98b53cc777c49/12.json\",\n        },\n        {\n          label: \"第 9 部分，谈论不同的职业\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7964b8e966d72de524dd3b3cf4b977ed67909ad26c5f7f31ff260b2970f2624beb7c62a5a3d1bbaf1c3739da4b55cee523f965927fe49bf52fa3da4b9e8df313/12.json\",\n        },\n        {\n          label: \"第 10 部分，描述你的早饭\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/61c4f3281ba0dd56599a04fb9eec5f89c585d5da78b27a286b98dd136606cfd34cfe4d87509d102f57a54f304e156efb7e46050054cdb9c8a693f8398752edf6/12.json\",\n        },\n        {\n          label: \"第 11 部分，谈论日常活动\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/37e6623eab5b2935fd6715d533f6fd9e889b6884dbe30d9048ac3afb6b1db09ffe19a9127ba197ed874eb05c3464e81fc926c5ac37f9930adf14a8251d2b4a3e/12.json\",\n        },\n        {\n          label: \"第 12 部分，介绍地点\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d9b2b28ae93209009369ab25c2f6e5ed32b49084f16a87d550b381da058857321c1e9633a1c8f85abd7bcebefdd11079b94ff434c13146de9b7df7046e85ee52/12.json\",\n        },\n        {\n          label: \"第 13 部分，谈论物品的数量和价格\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0e9b107b6261a07e0e31279d485fe6520732b6c8802a43bf95cb27d5a8f2b9f6263b2c84effc9eb1d4656710cf8dae6909008e5958c996e6c8848855b67b90bb/12.json\",\n        },\n        {\n          label: \"第 14 部分，描述你认识的人\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/613fc8d0a33c48fa96a76b53819ebcc352b7e0cef030de8118eaf637af2001418b9ab00ce66688ac45743387637434298ebf6a6e7dbf91457c926a4ee87675ea/12.json\",\n        },\n        {\n          label: \"第 15 部分，讲述你想要的食物和饮料\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a25b5a7f84df2284134d053e80fd7dd4d366eadc9ce4bcd48d8fe49d4caf53e62b5fc61e5f5e24c21616f30e943e5fa779368c5b3630653c9590f32eee831ead/12.json\",\n        },\n        {\n          label: \"第 16 部分，描述你家有什么\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/67d6849eb4ccebedaee1c6c9d20a40708588eaff6055eabf3e99d7f43db911744fb68c780fe4c7e73780c67f9b3f3080719c49ea6404df0bf13d553e3180de1e/12.json\",\n        },\n        {\n          label: \"第 17 部分，谈论天气\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/327c44d20b24256767f5839ddc5df56b5ece0139fa80fd08aea0dd9b8c0f98a5223b85a9f35253a0dcd5f92e91bd833ae1da056aa1797b2d9f2d54b61e605d40/12.json\",\n        },\n        {\n          label: \"第 18 部分，描述动物\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4b525b7d841969435e1ad19be190f467f38e483d32bae75a718b5d9e36c4f84eec63634b9b2a5cdea56d43c1bc5f5b8ed8bd8c1b10cfd475640f6b96319678b4/12.json\",\n        },\n        {\n          label: \"第 19 部分，表达星期和时间\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ae459bd243886997ad3c82eb30fa6f8d27f746ef0915daf5dc2afce6b78cb89e38fb4f17169547fd8bcbe0fe0abd068e4d79b8cb6732a6d20aedacdf360b81c4/12.json\",\n        },\n        {\n          label: \"第 20 部分，给指令\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/08ebb63e70e499553c3e074ef3a6fd6e6da8d4deaa33b5f8d9acb6ed31b99ae0f2e85f27132d1ad10f40a6698af1dba48574742f7f473406644e6c502f06e48d/12.json\",\n        },\n        {\n          label: \"第 21 部分，描述地点和方位\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0e62f649db24412b456b156150f655dca4ae01aaa7b81a7c9ac46388e1f38f3ecdb5436cc53b4558983c838507abee67b4feaad0771ec82df9ad3e9b38baf6e1/12.json\",\n        },\n        {\n          label: \"第 22 部分，谈论兴趣爱好\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2e16f536020add5b3f5eaa9eaf50ceee6139b1324248d3743ae82c39d245bbbd0630cdf3e380c9b061f56d6f63413676bbd119a4901861b4b56d92ca7d987f15/12.json\",\n        },\n        {\n          label: \"第 23 部分，表达在餐厅的需求\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c6fbe32fdf8e7168e8e3668b2bb54e59692e7f1eb8352f617fa38cd1858a592e958a844284aac5a76c56d97103798c42cf4138f9fd205e940b32b6bb74b19188/12.json\",\n        },\n        {\n          label: \"第 24 部分，在生日聚会上聊天\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/85dee0f2a0bf61fb5d810c2524f8fd404085238db120431f95ebc276fc46f87ebc7fe8043d76c15e0ae1b6a734d99a111bf8368a03490cd636cd49ae102bd5dd/12.json\",\n        },\n        {\n          label: \"第 25 部分，讲述正在进行的活动\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9f66a7b7c30b4dde7c11ba2351e3e26d3d0c22a57b5d0f2a18bba3c34ceb9a3f45cfa5e64f949a14c6c3794fbbaaf2d86051d3c75beb3f4c57fd58c8e9a59188/12.json\",\n        },\n        {\n          label: \"第 26 部分，描述日常安排\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5542175b7cd9bf3cebed6e1ca0e14c5d2e1503a97e608c694e1d3e4f92a0692ce5c30b02cc02ccd5b4b542bd595083a5782d33da908d41e84564ebdf77839767/12.json\",\n        },\n        {\n          label: \"第 27 部分，提问\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fd72203da489c78ece49f4862227a9e0f6d9d9a6d9c516a574bea7f15bd3bdfba7f76fb3c10df224870f0c1de347a1b46c5777a6f26c33ddc0c06d0129678e08/12.json\",\n        },\n        {\n          label: \"第 28 部分，谈论运动\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/32663626a4e92938e6700e2ba45d0777f4e359d37b2ec9c3945eb5af49f49136979f0aadf8f30e6d926f5831b4f875c8e6cb697524b0016a6733fcbde59bc473/12.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 3 阶段\",\n      value: \"第 3 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，在聚会上与人交谈\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/115f0158da60db736d8dd12d8feeab1b4b00ba22695d96aaa21f8e0680ab3d2d8251ebe447c3b1f4e2011b8e19d9cb29f96c3630b50b981568d5526793455f2c/12.json\",\n        },\n        {\n          label: \"第 2 部分，讨论休闲活动\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/501f496fffb5993b95971c40fb761699b5e5f84787b3c68a3226c3957a5ee0105cc752347e59b5635c80062614b1ad0ef95d5acf5290c484db52f5853d9e8be8/12.json\",\n        },\n        {\n          label: \"第 3 部分，描述衣物细节\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9658dbeee4a19d09b449993681b302a9786190bccf11a86b0f3e71fd2f6304596a56a3be4c60b483d60bbc04e1ed0e6458a93d4af899073f10273da184069bb8/12.json\",\n        },\n        {\n          label: \"第 4 部分，使用形容词的比较级\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/280b8410f8ba4a6386af46658f54f0f9efbbb844377caf9c0a4285c2322825a11a7735a64ed0e8a97a990aee1fcc34819654118c258c5eca715373da3c10ab13/12.json\",\n        },\n        {\n          label: \"第 5 部分，谈论日常安排\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3e3263fe31702c182e3010db70e58a6d2a14ac7a787ac5d44516b5273ae3a6b597089dbca6b399606cc39ffce5ee9c519c50424a676bc2789b413327acf07fee/12.json\",\n        },\n        {\n          label: \"第 6 部分，使用形容词的最高级\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c4ca0e724f7e2cd43102eb9adb8cbb147279bc71486f8c6bb08b46e8d443474fd907e34ff7f9772994805ae124e6e53fe9bafadb6745bb2fbad917007c87eefe/12.json\",\n        },\n        {\n          label: \"第 7 部分，用序数词表达顺序\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b3724c3f39fa94697beaa6e8b4530eb14b0c90c23ae50d966510b252d2bb3184cf284815ee1c93470fdfa9a7b1f7c85a510d7bd6fe052062d794cd221afe9c59/12.json\",\n        },\n        {\n          label: \"第 8 部分，表达感受\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6a51b4b47510eebef9d83cfcd1faf1dcb52db30624ecc440518055afca7312aebf2232e9ba5ed16ce37c140bfbb748418c7dec7d882a15cee43a201d6a5bd2b8/12.json\",\n        },\n        {\n          label: \"第 9 部分，描述城市生活\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5f4056618b4c34580c04f5f69abf1473ac40145143ccafb5e948ec0f8a790043bd104608818e269299651091d55b1cad590a2c16fdc3140a763f1711ce47fd3f/12.json\",\n        },\n        {\n          label: \"第 10 部分，谈论未来的事件\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6407e4872a8bdd02ab7f3267339f2964460c44614890bff1fb0e06d931b882ab56f1df925718a30e2922fdda37c2017f4325238eb73a2ede1684f144c09140e5/12.json\",\n        },\n        {\n          label: \"第 11 部分，对他人发出邀请\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0541a67d72ebc9c47c2946b628f08315e5108492f18e9f1191820ac808d385348ddbf436dc1e30c47990bce7694bcacb99ab73dc445851fee83f5a8b843570cc/12.json\",\n        },\n        {\n          label: \"第 12 部分，描述家里的物品\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c7939314ab7376e1a2b6af1f4c9e3837430a15551276e83159e05acd7ff947b3e8a6812aa63dc7bafdc4d63488b9ff3cb9a262a4ec2be3c6ca0a188a4d56b293/12.json\",\n        },\n        {\n          label: \"第 13 部分，表达日期与时间\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/10ad08e98dd05936a1a078267f79b96c7c07ce1c664dfb99b94f05ec5e43479a12dd92878b9cc537bdea5a68155948e76de89d26ab989d851c656f143e247e7b/12.json\",\n        },\n        {\n          label: \"第 14 部分，讲述农场生活\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8c46fc9830e9d582de510116c233ae58173033601f42a1ae48d5b13f01cb7b3671deac7dc378718d5ee1bcd4909c9948f576bf9ab3fdfc113b931dc3e9a0b629/12.json\",\n        },\n        {\n          label: \"第 15 部分，使用动词的一般过去时\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5f9505d90c985df480d079a2554e1c9787e72296587da75984f9e75dcf515a10d1ab9d61f90aa086f800c292b60911fc71d201803379f771c71972535a7463e0/12.json\",\n        },\n        {\n          label: \"第 16 部分，讲述旅行经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0d28a0b9aee688629c64437be7c913fad50c12a3fc18bc5cb6967bc8d58fec8ad244b6c5f00c4c178170342419b8c47ba3d93b5e97a3a1b9414b4e2ab650235f/12.json\",\n        },\n        {\n          label: \"第 17 部分，谈论过往的人生故事\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8ba0c448ad3eedb1dc10571b94f744f04543f221b4488ab1d915d0600d6759475aa78606b537e3aee8dfb5e85cb2ce2d68e431336f0a5a8a6894ea956286f20e/12.json\",\n        },\n        {\n          label: \"第 18 部分，讨论健康问题\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9fbbfd3abc426627cf69ad615f90f0965068586b397b5742f2849ccc4f8ad970036248f18568689fc6c909fca8858e4da93ab4f59dd8dcf59079a760a38dfa67/12.json\",\n        },\n        {\n          label: \"第 19 部分，讲述英国的生活经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/402168359f242b1fa369c02da45b33a7c526e18428680be93021f7b899dc4cebc1580a64e79bef75221405cc47aefa067ceb5656bbb6b4c5ecace812b1b53bc4/12.json\",\n        },\n        {\n          label: \"第 20 部分，描述你的童年\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/991e75adda4612f4ccd872ad140de2eeae0c9c1f11c37f3b00047c59f256db4bb2bf2bafd3f68fd227db046fc66159b2f7be4d2072bdc9e0615e560c234d2de3/12.json\",\n        },\n        {\n          label: \"第 21 部分，使用现在完成时\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5a9b309833ece2129fcdfe0e1e1112aa2d6277216edcc324faa53b23335be0b74a7e96997e796f16f1e1652954828a0429f52849881c81eb3f8b5834fca10c4a/12.json\",\n        },\n        {\n          label: \"第 22 部分，在商场购物时与人交流\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2b3275b953f26b777d00c5fbf3c73b821ed8ffcb90f71508836a4f21e4682c0b9c8c26e5df1871ab85049a97791efc3c0265c019eb331e0cf5d9e5367d125d80/12.json\",\n        },\n        {\n          label: \"第 23 部分，谈论考试经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/530bd5f3820a4c9c2f038ce5716e4b98727ffca2826851504d295d82c270e8d0ffb959a48d5c9d89a99759b89d794dcef5883bd42a565e95270c2707860fba30/12.json\",\n        },\n        {\n          label: \"第 24 部分，分享做饭经验\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0a7fceead913dec6805d1208d84e98711ad78290eff92b0ae60a3ae083b4c320c3bdffdbd164f603ccfe1b5aa25f985a0cd037a6e7ba9a85955e9f12c9429b03/12.json\",\n        },\n        {\n          label: \"第 25 部分，谈论工作安排\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/95cd06d8afd7cc5ed7c3d7a245236791d4b79d0ea87adcdee26e9f09945fb43330a7d6d9cfc294b6a6e61fd4e041ec9483b8e973de0bb3ee85c8b2b6dd247a75/12.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 4 阶段\",\n      value: \"第 4 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，描述家居用品\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a3e51f6922c29c3d08c2dd01c6d88f12dfb3256fc13cd4abee601683cd70a192e4a760e13fc6bd6c33cf9b1f9adee8838ddc07f7f90d9627064224c937d07a9a/12.json\",\n        },\n        {\n          label: \"第 2 部分，在市场购物\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/de33eed70df15d88bbb4ae711b7a767850303a6cecf97de193d39fabe62b542f287429426c098840409badd6269097732a924a64976ffe9a86cd16d81f5510a2/12.json\",\n        },\n        {\n          label: \"第 3 部分，形容人物细节\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/235261bd10aa259c441832c8e94456b6b6224406af9f1f4afedc84054fe0dcd98d1c5e72356fccfe562ae82e8832a7497ff451305fd52219f61b54af653140cb/12.json\",\n        },\n        {\n          label: \"第 4 部分，谈论过去的回忆\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/586b9d9769711379167489b7fdf76ff60a566b7b0f8f9df78c859295873e83fa797151a764d759c244848ea7e365d2c62398ee00bb44584f38d5fc6c389ad075/12.json\",\n        },\n        {\n          label: \"第 5 部分，安排与人见面约会\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5eacf116c8bedec53f809e06342d888dd8981209ec33f8a9bbc47c60d9d60760b03e6d0b16987090b3f2e4d0a33fea39d00148956c8b22966baff1c7c9c2b272/12.json\",\n        },\n        {\n          label: \"第 6 部分，分享惊险的经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/55b270b7b966b31961a71670266aa3a90594b10187a6f093ab45553265380ba26e352221901d876d300aa4640b11557350e41a7a19f4b82b67ea0c9e6f108280/12.json\",\n        },\n        {\n          label: \"第 7 部分，谈论自己的生活\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d492b4e7dd96fcc17cfdbe2dac526b83fb94b1b8848db3c3bf5ce721823f09e07ab7798f541b04e2d717203e08865b993eeb3fd4ad7415d711e3e8690ef56ad5/12.json\",\n        },\n        {\n          label: \"第 8 部分，指路\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/69a3c9583e66b23924b419fac5cdc9c74fcba8ec99fc076da81d3590edfeff59b61858d8245f9994b38354492fb2684d245a1a47c9be3f79c3ffef795dc28117/12.json\",\n        },\n        {\n          label: \"第 9 部分，讲述大学生活\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/de108e1c5c4b15595979aab5e71481d40975419f5585c6620e849417573f4070f10c3dd47f0a2416c43fb53f6952dbbf83b4f20d8816df35e953240838ba6a84/12.json\",\n        },\n        {\n          label: \"第 10 部分，制定交通出行计划\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4ab8e1fc0da5f3db16ee7741fb94104f56eb9e7afd9d2819e678e3424334688c40a5c8ddb72d109ef740639cfcbca849e0d545c79cb8cf2d137fb3e1efddf1e2/12.json\",\n        },\n        {\n          label: \"第 11 部分，描述健康问题\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ef0baa138ccf3abe54a537760d93d3cd9722f9f7fff1f502a0841f933e3c399c6851c418a7599ba87fe05826f253c5a1aa41feb022a8e57d7cea4bc07dd75384/12.json\",\n        },\n        {\n          label: \"第 12 部分，在工作场合向人求助\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fdfdbd4fbad61341cc84c52c9192b628ac971defda900cb1564d788ecd361cc6170fd5fc5f4dc27f9c7f81c4ef11f2ac020277e77d0bef46ee5fae99cee15ffd/12.json\",\n        },\n        {\n          label: \"第 13 部分，谈论节日\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/97e34be7df600ad41ed595e78982681901dc82aac844b4f5de542a64574b668261760b0b36d291806d266fb22d533e9f6ef92e48b5b748b97f4a30fce8aa9c96/12.json\",\n        },\n        {\n          label: \"第 14 部分，描述家居用品\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b9b48048d61fcaa63a7313900bc623ab4d6b112ebe93664780604d45557b30dbe6f7d33c1085a4e9f2302b284efceb2d64cc9df1b8b055389094be79f465b48d/12.json\",\n        },\n        {\n          label: \"第 15 部分，谈论生活方式\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/54911dca9efd0e74d483ff334504f61d13f3f955482b97fd9f8953f0498344283a5c1b4514915c0a33d4f470bf8bbdaaa2dd40b21ab41e95debaf901bb6751b2/12.json\",\n        },\n        {\n          label: \"第 16 部分，在课堂上与人交流\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d73df91f3b743667bdfc6a300b3c9ca43cfbf910747da625bc2169137d3e48a69be8bf18dcec933532fa919ae1faf6428135eba7f90bb4d41d033ee83dbcd399/12.json\",\n        },\n        {\n          label: \"第 17 部分，谈论计划\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/05842c311cdc506d02e81fb560e91761215489e06e8bf257a64a2c8c4334c84cc6b3ba68fb78abff9de1206df43faf45837ce33ee525694dc48a58659c4ef332/12.json\",\n        },\n        {\n          label: \"第 18 部分，描述过去进行的事件\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/79bbc3c8f1b83a9d93c8570a5a40370f498dff40b0aed24884beaf0ceb2dcdc8863f9fc68e11a766fd48f84a225d5b63cc7325339fa09f64fdd49149225577e8/12.json\",\n        },\n        {\n          label: \"第 19 部分，在旅行中交流\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e11225933773cfd6a09dbeb5a9c878449f6d69b075c7b1b25cc5513764c2c2f887f67d68a300e85e508c5ce5813d8e042f54c06f14a9d3a27752c0e9aa3fbd8d/12.json\",\n        },\n        {\n          label: \"第 20 部分，描述童话中的情节\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d8ce25532bb9181e5f4b1567106adfb319fb23dfd24c39b3cbafcf19dc0f757ceb5b1b1fbff163562f1adb4a8c74f953d42bbc91dd6b48bece43c1f609e1c473/12.json\",\n        },\n        {\n          label: \"第 21 部分，分享一次购物经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/00690f0bbf3e2c8b486cdafd2ff0d23e6e87fd85ce98e68fb3b3ed652f62a9ef4319d3dd01039d691443b4416e18fb6b90e42906edd5fad8ad5582865b2b623a/12.json\",\n        },\n        {\n          label: \"第 22 部分，谈论不愉快的事件\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/80fe13a319cea6efc41ce4096f9f50c19eb9913c04fd9b1576f52f5ecb75c1eb211cbbecf910269762ede4b705e4c8c2fe3dc390fab39a4a4b7548e79d0a4c6d/12.json\",\n        },\n        {\n          label: \"第 23 部分，买快餐\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8b93d2b9009215c8fadce7b985a375e7e9f0cd08c76e8556323baef73f57252154226da6e819fbd99687780c73032addb856b909e4e9759e68ed7e34f0985223/12.json\",\n        },\n        {\n          label: \"第 24 部分，谈论休闲娱乐活动\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c6a6ee472de7d725839ca591f4df0ab47311648841ae5cb54254abf2f38a4d40d5ac7d37f66ccb62cdc06bd05dd96185492722673065125a0228f3fea48958a8/12.json\",\n        },\n        {\n          label: \"第 25 部分，讨论做饭步骤\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a1f0bd99a13fa3ef617fc25fa0984d33f419eab4ef172c68f32d199f701a2acca060600473e8ebae3d7749d93b8dbb4f2a96f794ff0958263a74345c4cad1365/12.json\",\n        },\n        {\n          label: \"第 26 部分，在城市中游玩\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f4323ab45d92a7afdbf3d09129ab7b8556aa2c4605bcf94a8dc8cc233407c13bbd4599a192af94d48a7b65193f4bfdf7e0134e1fd17494ae90e49bbee7a7eb10/12.json\",\n        },\n        {\n          label: \"第 27 部分，描述求职经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a17ef7b1b125b01ce6fab7579f0d765746d0e29d54600314e6ac8f8e26956f7ede13ce5239237bcb160eb97bc10c979b38770a8feecf837f92aab6a2dee2f5ab/12.json\",\n        },\n        {\n          label: \"第 28 部分，与酒店前台沟通\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fadc8d0bd40431ce494ac4ec25b3e4260a69d45eb7c1b907712d50d80408f525d9e3ac2ef5f7a3305a9b35dabec51fac2b75fd5e78165faa0e0efacdafecb1de/12.json\",\n        },\n        {\n          label: \"第 29 部分，分享高中学习经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0a21770809f0ac4fd751feba0f288332c1587bc2afe456f94132c3683a90321ee824ccd2d48b58aef20aff2a1f8cf74261b678d93d4abacf35b2aee44c494f37/12.json\",\n        },\n        {\n          label: \"第 30 部分，谈论户外旅行\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/800ac4373eebeab533e599d523163936e722db356daa9c2130136fdf0c3d44013772b6798e7e3deaa06e556079670a1eeda2d5d6d6b9fa7bd07c1b3b3f04fdc2/12.json\",\n        },\n        {\n          label: \"第 31 部分，描述你的工作安排\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/90c9553ce2cbaed89c4e87faa1f646af713a92ea34e8242a56644eb813e6d473fa04d52c82c1640522ea2fd16729651312c7008f246c315fd511352ccdca86df/12.json\",\n        },\n        {\n          label: \"第 32 部分，在二手市场购物\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6db364415b0f79e5cd49cf4a72b74287202383e4353d82ba4fcc6ddf883c34aca6672f242b3b08f015230a24a9ca44e9dd56e37223cd180dd0ee3fde2f1f836d/12.json\",\n        },\n        {\n          label: \"第 33 部分，谈论传统节日\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fc5df4f14875359e06eb10e56f5d57c2386c22bc8b672d30b2c730565c743410e9a6736fef5280919ee32e9bfaaf3d6e7f2247c7cd7008a32aa53fc4e97e7c99/12.json\",\n        },\n        {\n          label: \"第 34 部分，与老友叙旧\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c01f9a1de577d19f48b24d036ccbf9d308286d61dc92b6957bf55d42339e8b66b093c2cf19ddb8167b51b1b7b9f219c42ed487b57d66301a90f796d90bd75c1c/12.json\",\n        },\n        {\n          label: \"第 35 部分，讲述在欧洲的旅行经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/eee2a836f21f11189fb1de801bb85394a986052553cc717c6892b03b56423146291021b27b22d4044f311e8bb76506738624a2aa7de8a763e16d2077ffbb7c6b/12.json\",\n        },\n        {\n          label: \"第 36 部分，询问地铁出行的信息\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/106880351712ef53c022a6b2697d1f21dd29e72e45edc8eb8b86d6a0217b4d16b5e527f514ade2eb117d4630f41595a0fae6a3efb070806ba85a5b268ba9b96a/12.json\",\n        },\n        {\n          label: \"第 37 部分，与人谈论工作\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1a60084d95bcf5945591c277f9bc388db03b579d86dc176c8c068d7749abf9f4e5b06c5ff2241fcbb30a7e71181d72ff7967ee3207f2e54d04ce7a4c5808dcc4/12.json\",\n        },\n        {\n          label: \"第 38 部分，分享自驾游的经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/39780279492d7656c1ff69151b95b2b3545da915555b5075a0fa35f45d6d23af1d74f9d832234eeb2bd772a9e3dc807fd0e687691157f0849a34a2d799ee1867/12.json\",\n        },\n        {\n          label: \"第 39 部分，制定度假计划\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b997504b03c43555a1bc5f6a97a4d590aadd9b6a2ca1a49a9b24dee03cb708fa78a79e7f45100697f9dea799d3569b601c68de101787be068bf23944c5a75626/12.json\",\n        },\n        {\n          label: \"第 40 部分，描述家务活\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f0a9cdaa4c1acd46e52939b8251cc7a3e2173ebfeca610cd563b6bd00419aedd8ff3746767a35324c53eb9477162989636f1f494897841da4d31adacb5d56530/12.json\",\n        },\n        {\n          label: \"第 41 部分，讨论一场时装秀\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e461193de7ba6203d09360761504e4f64fdeed37a0b696ee66ccfb22bff86cf2f069d584ba4679ee6eb1449bec533c66adb3ffd134a985997c2a2f6f11b15995/12.json\",\n        },\n        {\n          label: \"第 42 部分，谈论未来你可能做的事\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c396e1f53d96e577288052ce986c39e6ae2afd6e5d69c65765dad7aa3eb0429bc444ad909551f0642a7779f67513fdd7ad8187dcedb913ff73bf40a9bfc3ed49/12.json\",\n        },\n        {\n          label: \"第 43 部分，讲述一次吃饭的经历\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/03a5d8ce6a831256fea628f3942eeb1fc63bd2600a24cc833c0badd7a0cda1748528e719d0860cd32a5cb7f4fb4eecec474f7c66a2ae1fde7f5e754c0b958e48/12.json\",\n        },\n        {\n          label: \"第 44 部分，讨论买一个新房子\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/cb81bf1f4b99a177e8a3f4c6ce5743e08fb9bba95f0b7a07aa0f2c519c7ac34c918f9c76f10c6934e496600e4516d8d4189ea3e5b12fc3d5f52b151b4e965e2b/12.json\",\n        },\n        {\n          label: \"第 45 部分，和医生交流病情\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b7d9bf0d7f39f0cf11cfd3e01744b5de044be17e20e72b7203a55c24ab2ee4df870d390e35c69896272fe7b92abdcfacc7a07607c7e1f5ea7eb767583f505ff8/12.json\",\n        },\n        {\n          label: \"第 46 部分，讨论修改计划\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/40ff430245a6993b0a7bc3ded5a279daf0de93c0225809b4cae5cc0edd16970cdf0f1e829778c0f7280c5b026888b58ae23825cb2a8f078567694ea0fde54dc2/12.json\",\n        },\n        {\n          label: \"第 47 部分，打电话\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8f07b0726426eb8d516cec41be186226c2356d761fbd9bd5e94ed44fdeb8af472ad31a451d7eb6d8ac3e402c6753ffb7c83c35ac22d9b0c9648777e08b8453d4/12.json\",\n        },\n        {\n          label: \"第 48 部分，表达工作压力\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3524be86c0e2958903d6881224c269a44f9498e235463f7a23149f3362aa11a14e22bbcf5b76fc40e6a187b61a01c0b8b38af169e2fd8b6a1efd9246a7b0860e/12.json\",\n        },\n        {\n          label: \"第 49 部分，讲述一次盗窃事件\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6300b83b6d0852fdb944427f6277089e939f0aeecf6f076eefc3238d8bf97aa126692fb00f0735e11993ccc9368fe91e8570fe71cb2f2a199d78965b54dfe37a/12.json\",\n        },\n        {\n          label: \"第 50 部分，分享你做的梦\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ca5f45f85938c2d1107956de183ba50d74efd610e3d6cebac1e8aa3b17e4230b1b1502ca19c528f76a3884c935072a2c2dee91566c0e4ca147dedd1bc9876ad2/12.json\",\n        },\n        {\n          label: \"第 51 部分，进行返校购物\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d6460809846b4af878c123ce59baa1e0760b56a6da37a49f634c1ffc27909a4d0b180494648028240b42fba1d9d353d6e2a0a677c4915645073331578ded956d/12.json\",\n        },\n        {\n          label: \"第 52 部分，讨论暑假计划\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/11160f0866f27740ad0dbb8afc53662ef3dab9ba9c855b3b98e04850d056159075f6d1a3e2b91acfbd48af17a6e98a4ec37ca7ecea09e99f2ce5e1df27f8bb4e/12.json\",\n        },\n        {\n          label: \"第 53 部分，描述上班第一天\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/67e7433baf043cf54e61667a3017584ff22fcfc6d7397159453447ab0939505d0c276a7d6b186fa437e96d59f5cea6b0b3fb7f2e504d271c505ece57d5108b86/12.json\",\n        },\n        {\n          label: \"第 54 部分，讨论名人八卦\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5ab792d9ce98f9db4209bada8963bc5ad5cdcfc5430d5c75497d01dec13faf1b8423ff923c09f7c2e5da6b6867090c7de75d7cdc16473b34895f25f2346908a7/12.json\",\n        },\n        {\n          label: \"第 55 部分，探索一个城市\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d3187b007be8c3ac6503170bc072f1f9bc81cb7d09e4af4bd1388c317979418231e3d7484a99cccd17f2436b180092be580c89ee359b15afd25ba3ffb1da7f8d/12.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 5 阶段\",\n      value: \"第 5 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，discuss traveling solo\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/78e0c67f02c83b0378d74cf092ca131b0214ef231d2358073eff2465e90bfe1684f84a0128bf584c2fa0b3822c186fac2612252b20faf2a0d2cba7ecf8171e8b/4.json\",\n        },\n        {\n          label: \"第 2 部分，order food delivery\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b3e5600e7d943d71ddce621eca364c3f9114863760e95af25c89b3e3d64d3ffb98d75c96019dd76d53ffb4887000a29f3029e07cc066fdb95c420ead99b63379/4.json\",\n        },\n        {\n          label: \"第 3 部分，describe a day in college\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/34d339c5e118216a30600d935d5d554020617aa0f8116e1bb0caab0526ab323b2d6645e9c134ea3ff689ea030832876df91db219614b9290eec28934cba3d35b/4.json\",\n        },\n        {\n          label: \"第 4 部分，discuss your work experience\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2d999cc7e21a479f2faf065b7007cd82f879edf5f0b0e28f3af7342327793b4649e38215c778f2976c7a97d74122ddee36e22ca17f1287e119d970becfdbe065/4.json\",\n        },\n        {\n          label: \"第 5 部分，talk about the chores\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e4d24c18c4a1ec99696c9f25ff33db211ca3c01f294773781db03e08407905dfa540c813db0cbc90ddf344a37ea8e78d68da2107ec21e3ecbbbbe98a4ef9416c/3.json\",\n        },\n        {\n          label: \"第 6 部分，talk in an online meeting\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c79544f995e2d43c0fe40c2ef9d7f4645d5d8f7b132e8224817050ef9de2376adaf6a88f6c1aad692de70fc2af9d0d6131f88ad6e586a7c31c2d1416a7b67c99/4.json\",\n        },\n        {\n          label: \"第 7 部分，catch up with old friends\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d881911edf21503e563be45363ed852e03085d37cb84601d0842ad94d26cefbb8386e09b3700b5d58147f805ff66e385472aa81d43c8397d6a4b976641669146/4.json\",\n        },\n        {\n          label: \"第 8 部分，talk about your health\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b683abe550e489408716cd40b1327e06e975d158720629aede504d3ce5ffa0f9af8fbeef7fd5e01a80e36a5e4a7f1a7001fb26e05006e473c5dad13b5bb99573/4.json\",\n        },\n        {\n          label: \"第 9 部分，discuss social media\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2e5512b49482ffb68540e8a3ec3f9135d7de043d6d63bf4fcab098c3a876d318b61c1001805ca01d52d426a234aaa1c2606192121b263ce3add5db5e869f704c/4.json\",\n        },\n        {\n          label: \"第 10 部分，describe your routine\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/65caaaf6b4112f8ad0b6fcbd47747c2c608f682c82c09d9514180b1e9af2f31089395910cdbaab399af26e75b414f6237a8f43e07ac22ca5d497b6f688b8ff8c/4.json\",\n        },\n        {\n          label: \"第 11 部分，tell a fairy tale\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4eff637b7b1182d46b4fc6959a506b7a81c57a5a6009e0a844c2e90dd343f1cafb799c1e228ab9ee74b8f20a65d2e102626cbe99ff5ba5b7e7f9ec82a3b1c3a7/4.json\",\n        },\n        {\n          label: \"第 12 部分，describe a wedding\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0b294ecf950a5419435fb90c54af0e5c26b377533899ce14e4523ac47a8bc07d65054a2b8d2ec09928e860d8bb23429e72e331207de74b0637928a464e9e412d/4.json\",\n        },\n        {\n          label: \"第 13 部分，share memories\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0218cff7f3b7305acfa10f6bf7854722d8b434673392f89ee1e019bdac7200be2c30cdb2efda259019783bf712f8f98de8b855e9c86e68e08bb54a5aca00ec48/3.json\",\n        },\n        {\n          label: \"第 14 部分，talk about relationships\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a06067f2f0fa1a768a6ad8dc511f8b9a49376c4a18652fc46fc3bfa727c436e0e537b542eb264e92783c00a8c8ef3e1cfcc1a3ae4fe16b7e1ca5cf477dfda833/3.json\",\n        },\n        {\n          label: \"第 15 部分，describe clothes\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/616cb9b87e30ce1bca9e22b543e091d64ee05d2c8bba522695282fa5bd57123fd02b2a898ab56591425de4361ca96c3a312b203c72a876c6791df0907db7179b/3.json\",\n        },\n        {\n          label: \"第 16 部分，discuss traveling by plane\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7aa8d2c7c350d1c96f97c7532144fbcce84cbe29f965c235f5da4a0731a873c330fe96fa441ff6068e8817634ba2d4676ab48c83bdecc89f971f4dea69109744/4.json\",\n        },\n        {\n          label: \"第 17 部分，talk about the news\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e8d9df12077a968ff21889e548bdc30d7d83ac5c12a5b6ed375a3e0e6b00ea2b69084021cd3e007c2352288ad5f7d63e9a323a0b345938cb50169ebe1ee87d74/4.json\",\n        },\n        {\n          label: \"第 18 部分，describe a trip in nature\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/307c6b878352335f25d69530614f396c3289ecae0bc1cfc614fd419f962acee5f0236ee187578f24b7aedb9bd6cb80bf9e61e239ba98dfb04adf54f9e6536b7b/4.json\",\n        },\n        {\n          label: \"第 19 部分，talk about the past\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1e0aeed679d74d1a154ee87386fc02b0af8fa066dc8535b4b5fd4616e8e7c6560a96f5f6413e8574a5cb932178be877c3f526e01ea724f0b176f89e6f3d1b77e/4.json\",\n        },\n        {\n          label: \"第 20 部分，discuss relationships\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fa83f833f71a1b96cd455ed4d661b651129b40d3cfc207b98b402488d4cfc0caa33f7d24abb5e9f5fbae5966479dbbe07f6e87ebf946e35c072d136ad04ca30a/3.json\",\n        },\n        {\n          label: \"第 21 部分，discuss party preparation\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/dce51d944fe00487192cdc2bfc7498684e8a93daf11548e6ad20b25d1c5c46230e14085854444fd937ad36e949be3cdfc276797e83565cce731f71f68ff1a6d8/3.json\",\n        },\n        {\n          label: \"第 22 部分，talk about visiting family\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e810258801a732e668ac2bc439cc85353940781138ae23f3f7c79b2967db9fe65217c43409d9690e43cf5c80010e61b7b4306eb710d6d5bc9b815c362736ae06/4.json\",\n        },\n        {\n          label: \"第 23 部分，talk about work\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5c9f6448c7f2c2823bcac94c83877b87eadfaccfb7dae2964474633d5b0e10f8b0816813e877d1a1e8cc07ed5275236f9a3bf4081ccaa7a4a1c6fa50b1670fab/4.json\",\n        },\n        {\n          label: \"第 24 部分，discuss opinions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f749e79f186238e0f32e03ce6f833a9cb8a502722041657c519f8764194bc0047e16e61d42e33d9791fc12ece6411adbcf0abb23901c17e9349d8129a38c25b4/4.json\",\n        },\n        {\n          label: \"第 25 部分，talk about the arts\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0ebe5326919654a4a6a52ae68e9d8388d49af44c10f07e4dc0e5a54eef072da51d58f37222926d0b2ada452fe213faaf40392d76eaa08e3809ddf2c37bd0c256/4.json\",\n        },\n        {\n          label: \"第 26 部分，describe sleeping habits\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/972b03bfb4fde85a53f8d8bb466b4ec3cb063b99e3342f0f6bdf523428f3b4f71a679a79c32704139fc290bab6f63afba72dde79e0d2c4fbacc97cbdb0b2141a/4.json\",\n        },\n        {\n          label: \"第 27 部分，discuss sports\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f957e6856c02d1288480d7e6ef946c0f9c7b8babf02627a4cd82bf40f435aaab010068987c567525d9f781c78dcc6756e33c496ecae71ba0538db4ff0ae96127/4.json\",\n        },\n        {\n          label: \"第 28 部分，talk about Halloween\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ce3b53535682561a77f69eacd0cc95de52a610a5dbceb0b1369d0147d6ca7634aaa87ea78c4ea8338875e5b97bbba916e0adf9f6f4d439f962f353873ebadb82/3.json\",\n        },\n        {\n          label: \"第 29 部分，describe marriage\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/abb10f0e2a976f0cf28084b9de0231795596dd2abffe4e77b25f2cb2c0a556ca4da6ae8d1dc11a29fc25f29a4c312c6d34fba5c1b5f38a0284b48c4c6111c3c3/4.json\",\n        },\n        {\n          label: \"第 30 部分，discuss a trip in nature\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f65b79202e3046cdd82573a83db4acf10bf14a136a87930b5aa3147cb8ab71a268968807a4eadd0eea700301b310df6793d61e816a38a33dab57e137078d4335/4.json\",\n        },\n        {\n          label: \"第 31 部分，share a secret\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/287a82246833b1edb17e230afdddbc6e34e6551b90eb0cbb9ec949382a7950c8718735687bdc23a0fb5c0dc5a83cc6eb6ba4c861f59c4924cb7379424865a069/3.json\",\n        },\n        {\n          label: \"第 32 部分，discussing medical issues\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f14ab0b7b96994ad5f45aee411104ca077313e72b80744e0afde4c97db88b4de8edd605089c7f0aa94328f70d3487310bc35b8f5d630aec9ca904d16b49da1d7/4.json\",\n        },\n        {\n          label: \"第 33 部分，talk about your studies\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/cd4a049d45be4732a18773786984a8fc0326b0ec9a1c66ea3376ac829bab181df65e6143057e76194f3446c1e9c7620a19684a3cacd78f6969f5d897127184a0/4.json\",\n        },\n        {\n          label: \"第 34 部分，talk about a move\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1d580b8ec2d4c7166148d9ab2614e22c5e1b263bcabd3b28a8a4d8ffac07f58ea2aa82e008f5f1fdcd3c746b3d5e9ec5272ea5795d2083029cc843a6a8e7b47d/3.json\",\n        },\n        {\n          label: \"第 35 部分，talk about your daily commute\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2b77ea92755f29bb0d2cbd22d71209c3252a2fe7ec971d5eb75b86dcf30bddd10b2f5e6a319636c3bd3d57bbaa9a186aba01ece1fb24b7780adf684b394bdf36/3.json\",\n        },\n        {\n          label: \"第 36 部分，express surprise\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/03be44678332ba47e08e5bc09fbafc71e19b4f64cfe0390d1824c85437a7a95f483a423d494c80750a2c3a4ab7d1f1175b05ded64a7cf97f431bd185acd45549/4.json\",\n        },\n        {\n          label: \"第 37 部分，describe technology\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/95963a382e86bf7341161ba5782e8f597857ba20a8a915be36764b3e4dbf4f49a9f9af97189716cbffe21f48673ee662b08321e04c91bf711b012791270ace13/3.json\",\n        },\n        {\n          label: \"第 38 部分，talk about politics\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a93c1e804b9fc4cfc0736ac0b4b8f3cd9acdac34bf71bff61489f9f063071ef1cc125e4f1a056b699d038b8ef1e4ce4c77484d179d48decaa327ae99840ed45f/4.json\",\n        },\n        {\n          label: \"第 39 部分，express fear\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a2829fd905c2534cc64b84578ea9341f9a9b57b7558e189fee4f1b9b84c5344631a8c5e1f5ca951ed8112b693007e70fca844c7e6b4a1787f2cfa0b21a8baaa6/4.json\",\n        },\n        {\n          label: \"第 40 部分，talk about movies\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/47b4d43384e9d2f3c840580b1317b0e40ead178d31d72d4ef628d4e4e6c9ef270d76d8ba688c458c50b1b230b44eadb6df80cd307215fdb5bd501b63f6a4fac1/4.json\",\n        },\n        {\n          label: \"第 41 部分，talk about a tournament\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/318c1a7582af6968b38554da6c79ce59015b94f0c1da69f524e010c84f2e404448668250d4a9b60e5c443456b5bb4374532ef11d2dfbc15b482e5b4bc798106d/4.json\",\n        },\n        {\n          label: \"第 42 部分，make transactions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/30590ea981868392f4c0189a5d075b9108d066e4c5b8834e7ff4b1e68bebc057d5434a9135e345baa9bf97269bcaf088b495c9173db7e4a66239ab4948d0cfa9/4.json\",\n        },\n        {\n          label: \"第 43 部分，establish contacts\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/406aaa72e7507420daa7095a2a8b05c7fba1170ba4386f71781ffd53f87fb0ffcdaa9d705937b8ab77fe33bafa25e210e8b884d367803969f59e7fa1dd7de90a/4.json\",\n        },\n        {\n          label: \"第 44 部分，describe geography\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/97adf249da7f2eaf8911f19ba4228344be1191292dea22e3ab7df4b608b1bd10ff133bea5c99ad0df714691b78aff32505afd78a37eb0835ecdd9066cf053c41/4.json\",\n        },\n        {\n          label: \"第 45 部分，eat in a restaurant\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6ca4a27a0181d17224ce706d3acd67b851595a52a2a8a10b1f72bb9f934f92405b208dc26022821c0c30545f269b1a65bd39068e990a8222476b13144d084c2a/4.json\",\n        },\n        {\n          label: \"第 46 部分，comment on music\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c8832c01cb64651b21de9e223b91ef7db9a827109511a794bdf4d45063535a3c9089320fdcd8ca76441ce65d176c25dcc28fd3286dbfd0a5bcb9f8bf8de77129/3.json\",\n        },\n        {\n          label: \"第 47 部分，talk about crime\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/824c05e005969897f8d3cb3ba099ae9e8f47e60c25200c14f3dcc1a7f14f08369ede71a04257722c2ed75ad1fd11ad1bb12aa9a7b33e8c9dd77debc7914c97d4/4.json\",\n        },\n        {\n          label: \"第 48 部分，talk about pastimes\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/10a5e24d2eb4d6e14f551f1d0b9d30b92af1fa65272b864bc56ee0e66925a71391cca3832f202145c446e295150c8a74c57902805b1663ba7e7c411b48fd49cb/3.json\",\n        },\n        {\n          label: \"第 49 部分，buy items you need\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/167680fb55f4f76158770f7bf4a4cc98268a78e929e2faeabe700d3281a0b3bd78142b0abf56c638c2c1f73974f6250964209d33a074faf07499075e9bdd1023/4.json\",\n        },\n        {\n          label: \"第 50 部分，talk about historical eras\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c024e1adae2b8ab8b192063be86e3d7803794de262f968f4efbccd5cb66f06ddc92f96bd36dc878f5b1881133ca9dacb8b57f147e36c51b076e6a8e4b6d0e94d/4.json\",\n        },\n        {\n          label: \"第 51 部分，recount experiences\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/61cab25aa3f3ad1c0b70d4e22481068672eab14c6377c28b8bd80ea3e4497bf35f16271871d0f2113e4dd00e203c35f9eedf8b33b99a3aedec01e422ac1b91c0/4.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 6 阶段\",\n      value: \"第 6 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，express gratitude\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/509e6939e0785e956761a66ac2ebe43713796e4c19b26bd9f7bf25c0f933eb84f49d2f5336d2cb7e569cf30c8d00aad97b8ca540589672b2c6ade0cc5aabb7f3/3.json\",\n        },\n        {\n          label: \"第 2 部分，talk about your home\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c1ef4d8b6c67fd2d385f478c8ddc77b21053f606f737336cb392594ffa155288f1004d18d10bfd3088d24776139c1ca6c278c2e46e443d7dcd353ce5d2e37075/3.json\",\n        },\n        {\n          label: \"第 3 部分，talk about interests\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e1a78c68c1892512ad03590fe1905faf393b3ca7be61c3dfaec825866503ed2d8fb433da5eb889198e85a0c3d14358449259626183aab57126984605c6259353/4.json\",\n        },\n        {\n          label: \"第 4 部分，lead a conversation\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/db8355faab08afe0c3fd222d81c403e5cf4b9dbf4326e6d17f40ac261556df749cc4dd0a929efd7fa934fcd314226a1cea4b1e6cb4047bead7fd5672948e7a9e/4.json\",\n        },\n        {\n          label: \"第 5 部分，share anecdotes\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/91b9a984eec66b9e4cd5c837c854d9ad563dfdd0243f9da7bcccca014eb6788348f31b5d2696735ac3eeaf224f47657917da5fff375aae9dc837a6a59f26c1b9/4.json\",\n        },\n        {\n          label: \"第 6 部分，recount your latest trip\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f4365c84b6c7931b204ee79be8097bc4e14192974c974d55d7c5345d265c17eff0e95dc15a6634dcc392abe0bc6369efec11ba7029087b3edf3d3e14d6df2cf0/3.json\",\n        },\n        {\n          label: \"第 7 部分，talk about news\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2c9278a05c418bd3e3d0120186331816b2fdf7baa6b6f63fe453d9dc860ec52f0b724aa4f2c01a008bd4936a141c18b0385d2b9d281dbfb073ad6862a3c30550/4.json\",\n        },\n        {\n          label: \"第 8 部分，talk about television\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3b16af950771efbf69d38bf8601c462b86afe3222963c6023401926fe94994e9ab1e313bd18a0d59899fb45a296a49e75c0f12f054b622bbe3d2f78c4e122c13/4.json\",\n        },\n        {\n          label: \"第 9 部分，talk about history\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8e877cf1be40fddc40136e99e373d81c903b10989664c26e3edded1db5644df86337a8d48770a4cd00db515c082b571bec1ae1d8785dbde4184591b0ccfab409/4.json\",\n        },\n        {\n          label: \"第 10 部分，make plans with friends\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4d30fd4e1d282e8cf88c010769f7e8fc0a7acd0d336f488544429aa12a2646e1ddfd7673f362adb5eac191b6c726eb34b08c117fd0d099cd05cd2dbb603f30a1/4.json\",\n        },\n        {\n          label: \"第 11 部分，refer to extended family\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fa5f31139d29b2d96accffdba465c4ae65b381aff78864d4fea238f50b5d2746d21d0cdbe188d8b4882ca222afc7f680163ad1b4bbcf2f76dec431dd09b1a4fe/4.json\",\n        },\n        {\n          label: \"第 12 部分，make complaints\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9f8e5c4b0b78aa98267e6613dcb1d7c12c27d9379b6421fa4b9dab319169e68fb1356900732ac48b26b224b60fdf2da78fc435d4ae2cdc8c43f290fa7d43ad27/4.json\",\n        },\n        {\n          label: \"第 13 部分，report what someone said\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/33fddb931550c9201d9399a853d306e113ae888488966b6044fe684c25c68a480fb606fd5179c03b634106cf14be87ecda5920a01b0ddaeede6015d0e15f0231/3.json\",\n        },\n        {\n          label: \"第 14 部分，talk about religion\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7e2a6e7442386f95b655f4c9b929884dbb14d87528527c1682ff29beb6de4b4002c3cefdfbe9fb6be689db492b2961548dea949eb7f0696ab84c0efc4fb19805/4.json\",\n        },\n        {\n          label: \"第 15 部分，make suggestions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e5b6212913e114ef4a0f029207d90ce5cc305cce3c6ba5b72dcc90f39abc2193366a79fb3aceb6ceaa075b3d4b7f9bca05d9f520d9508437fbf78b1ca756b58e/4.json\",\n        },\n        {\n          label: \"第 16 部分，plan a move\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7e9c5dfacf6f88c4ba544b93d0ec2321401c32f10de4cbff03c6af74e112ba9b11e082bb3c96e764e1d0f5ac245b833b6395e2276e14ba33a7c8177fb2ed3895/4.json\",\n        },\n        {\n          label: \"第 17 部分，apologize\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5fa93f8ca8e387206f56b9d4ce5b46ca90ae6861dc3ae8c74142face42adcf51c1d7aa943e538a5762d3a55222c176f3ac75fe6bf48fcb304ee94a3e424f29a9/4.json\",\n        },\n        {\n          label: \"第 18 部分，talk about your goals\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/bf9b3d2322731405c598fd8e047edbb71d585c468218a25654402e387f3bdf126579b798d201c8cef0f87b72c53d9d6aead713597574d9b9edca4090adea4f86/4.json\",\n        },\n        {\n          label: \"第 19 部分，arrange auto maintenance\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/36592f62c58a417a1323d62205be578c927f404af341b1e43539e9f93afb298fe41f64b94ba74888826bf51f66e3da9a01635271e9c238c7200e88902e3804ca/3.json\",\n        },\n        {\n          label: \"第 20 部分，comment on food\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/122cfa2ea77173e79a7674c6975148abc986cc9bc99ebbe234aa0a0a62c794826777539aff7082a7981856c29ee0cde851e776e0e5ee45c089e9b245c3f44a5f/4.json\",\n        },\n        {\n          label: \"第 21 部分，communicate with doctors\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fe401bc861e94652e7989c03dfc66188303c44929d4e42fd1116834a7241f83656506dd0adb1eb7f7a88213285676497f08ee9ef1f1684789d18a28e12d1857f/4.json\",\n        },\n        {\n          label: \"第 22 部分，talk about life at school\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f3dc980c23daeceacc0003198b82d9b6e4aa2edc38292dcb3d1e53f0584c0b12076bbead858e575a4ff1386cdf1c41cc7811d2c23e27d9f52dc88150204048bb/4.json\",\n        },\n        {\n          label: \"第 23 部分，plan a party\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/085f516ba6f083172cc0567bbee316d0066a31dd5eff89e4a3bce720f0ff471e146bdd874b3b2d84022f4874845378133071719a62821850064ce6b568f82c8e/4.json\",\n        },\n        {\n          label: \"第 24 部分，talk about news\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f1b2a04ab1e435d12684d0bc0b499e9a1f06ab50188476c9e2a58ef91dc4d7413e429fe6326192e0b91edcfae6f47d69f390a28ece0dd81a1fed22aeedd56fb2/4.json\",\n        },\n        {\n          label: \"第 25 部分，talk about traffic\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/821d9f7438e976411131c19a953015d848ee235f6c90e379cd9e6603e6c87f6fe8ce578ae7fd748173c841635de0a700abd4353bc4e8adae7c1956d763352a22/4.json\",\n        },\n        {\n          label: \"第 26 部分，describe nature\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0b4e6163fd5d8d249e4251c445374617aaca46507f08c14608228818d8eccef9b79d41d868de68fcc6e22c8f5e598b457c008db373fad49ae8e1ef99b3101552/4.json\",\n        },\n        {\n          label: \"第 27 部分，ask for and give advice\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e8371f63209e2617b4de4163ac069f70ef6a8082595bb43994b5dd905ba9537820e7ecd1f922152cef96db3e3e0f514e38111abed04bf7e0a7caf696114a217d/3.json\",\n        },\n        {\n          label: \"第 28 部分，talk about professional life\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9f212dcaa22350ed584570709bd475f990742672b1e020a44d35b2af582ab7b2ecef6965d46ca1c050ee93f8a5e81c0f6ba7b05f15726b7c914227536adf897f/4.json\",\n        },\n        {\n          label: \"第 29 部分，talk about places\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4ed2c65afd32082c3d3ff6e1b31ef1ae9100d4b3f90a80c4700b08dbb9ef4b9c6f45e86e1107cbb9192c1ccd4eff92cf975e7a8d743d09401d61013f376a23c5/3.json\",\n        },\n        {\n          label: \"第 30 部分，talk about famous people\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9a572c832d5ec2e834858cc3ba44705b4b80d874131ec570eb06531a938bc6794c0a4f3b6c67d836d193e398c4c106f109d8d3adca875542808be32eea059a79/4.json\",\n        },\n        {\n          label: \"第 31 部分，talk about food\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/24007d0e9304d12afde2f2556b4fdfb9be23095f18e4ed085df514bf766418f60eab5880f8ca85e7a758aefd5d68950cfad0bb71f2aed93c9dff57949f6aba6c/4.json\",\n        },\n        {\n          label: \"第 32 部分，maintain a conversation\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d26db969babb258f150c05e348d72f0e5844fe76ea960d6867f571fe366c0a1fcc12e18e4de60de5704db2d76ca220dc43dfd735359ee6c301271d10c4de85b3/4.json\",\n        },\n        {\n          label: \"第 33 部分，return an item\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/da1e7f725a6ea471ef12d362625254e04e229cf0d73708aaf083dee287e232a4f5ad782e16529ea8de5012a72c85aad2e4c3d2eb849af1e1b99d7ba9f81c7e03/4.json\",\n        },\n        {\n          label: \"第 34 部分，make announcements\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d04f5fa04aaebb515f9213d1fd115c5b4b03ed189657fc42709810ace6edd1c820b4f401fa5c5d62554da89c03d9b2a0a0b3d5e604c886b8007f8cfb6cd55e10/4.json\",\n        },\n        {\n          label: \"第 35 部分，describe your home\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1e1c3ba73c7ce1bb1bb1546ad0dd7a079185e352e4c383aceb74e84c9e9c805251395ada01c0b9d972af08cbcaf7100dd4a25191335b3f066b89c837201e3c38/4.json\",\n        },\n        {\n          label: \"第 36 部分，talk about mistakes\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9dfae331160f0cc9bdbbe3d63cef3c268df83a075a1313d6576226deaf288ade68b61ca59e9f879809ae68c71c3279793c34be00f32b9dd31ba51207aa0ab35a/4.json\",\n        },\n        {\n          label: \"第 37 部分，express fear\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3145abfd7036e7de8e8f01a8b5871c617215c10434387fac6f807259830ef8d800f2606978a8deb86eba0dff0f574a52a5a8232f45942c61d328a0a9d202e316/4.json\",\n        },\n        {\n          label: \"第 38 部分，use the internet\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/02a147ed9bad166a9936ea8e8e969c605668af55fc821825530beba7bb8702db6306b2d2f1cfa4e983dfe06f47c4c3d069fc39fa443e19465d26a187933cb16a/4.json\",\n        },\n        {\n          label: \"第 39 部分，talk about the arts\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e3a64a165fe1a8c927510ee87bcc6e25a04b38ddbca6bf949735396f79e14761522a46dc7171569456db9caa5591ccd18f4ae46e349814485a474cdae109b5aa/4.json\",\n        },\n        {\n          label: \"第 40 部分，describe traditions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f8fda81c935a3779119313af69f4d27feb2979e0d94eeab320877ecc931e9cca50bc9f3fd7a0a834cf102f19af44adcf64a1fe005468c0c4513b63f7f841b3b3/3.json\",\n        },\n        {\n          label: \"第 41 部分，eat at a restaurant\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9aa5bfb0b136a8e5d92e83ec9b155c374175ebbe1216b4e33d9090afcfb9fdf7340b51ad55b01b0ca17ca3f3534d04ac09614b01c61a71412e149e54b4c7814e/4.json\",\n        },\n        {\n          label: \"第 42 部分，discuss the environment\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/03e40c16de4dc069b734f6d31adccc4f82b26ea19db32dca2e03858b48514788fd9e065264ee265f97d09896b4b94860cc51b894c4d5dcfeae6f6cea9334863e/4.json\",\n        },\n        {\n          label: \"第 43 部分，express preferences\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7d54557560717594de0c3928ec726917a615eae8c54195326076e3924485c05013b350449dd5a712d1d47c1fb161145c62f1f4e768887d50b2d0c93e0f8ad080/4.json\",\n        },\n        {\n          label: \"第 44 部分，talk about beauty\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a52e4be4e695c4b4177b6e4af5d9396a1427d6a67990a30aeae3c33175a1d2e13899c8cba386235e25c0c04fe66e0d1adb34c7a3e20a091fc5f5f3065fcae6b9/4.json\",\n        },\n        {\n          label: \"第 45 部分，shop for sales\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/bd19312a6094af0247db19bd03aca1ff11544fe3ba4d16e8aeda5bcbb3074ef4660e5f212542a164bcfbef8ce24d94b42f300d5d24d8059a5fdc7f53606f2fc8/4.json\",\n        },\n        {\n          label: \"第 46 部分，comment on sports\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1c2f55c28ba073fac8d0eb35ee124e45e09abd0b959ffcc47b665c3cec9ba4794d86b4a54eb409a1916df02b75ab316ebc4fc0d609bc3f15a912b98f4a6e3c27/4.json\",\n        },\n        {\n          label: \"第 47 部分，talk about wellness\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ae1db9955b735517f89edeb3568b7273a7a3c36f8ddf2c8664932c6a1d5f39b105ac1a1c6c28e41e2691a118eb8ccb4693818bc324eddef7305fa402e37b6513/4.json\",\n        },\n        {\n          label: \"第 48 部分，collaborate at work\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/64dcace7683a48000158c0a60f00e111aafd204405ec30839132b2f533130c2a95a2b3ae887cd138674ff50bbe4567d7d5d1155996732b4c8e6a11c2ad3a4eab/4.json\",\n        },\n        {\n          label: \"第 49 部分，resolve problems\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/985d9d506a1eddf09119c35327ba92cbb5887c945af2944c298984dd297a95d6c88d3967530a87936f0f08711cc86784d2f76933fb0a2313450cc0e4db29d841/3.json\",\n        },\n        {\n          label: \"第 50 部分，talk about news\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a46ad61169ce74e0f13900dc9172b1f14fa5f3a2a4257dfe8c2a6829c4e780800e0cfac93924786e73d96feb3ab6e386c4b2d8f2a6525237fe27763dba2b1d4b/4.json\",\n        },\n        {\n          label: \"第 51 部分，talk about history\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f4a65bec502c7adf8a62f1624519b65b36efe5a9db3bb985ba25a24799355c7fb755324421b25455a34eb8b62b88c3ea1fd80bfa4597b99d68403940b11f6420/4.json\",\n        },\n        {\n          label: \"第 52 部分，express wishes\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3fa5b489d55f0a16f4534d81697938c0c689c4ba012fc60a572ffee9e4a43a5de97d2f9250f1e59768fde24fb612da40bbfa1694eaee5670d74b7fba02bab143/4.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 7 阶段\",\n      value: \"第 7 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，give and get permission\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a59550cf97ba5d98c9c9d1ba4dc0422f2b443c963455d5df27093d6637fd87761f688dd75dabeca626e1fed4381d6a2f1c1ee424244f1ca165b825b6a1e1008f/4.json\",\n        },\n        {\n          label: \"第 2 部分，give health advice\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/60d0c026cd99c01ad0dd6ba802bf68d522021192ad2d61e0c552b862ea393f3dfe9faa25a1e896b5207a6df66ee9d6c1320f005da23668788529bce026b71ab5/4.json\",\n        },\n        {\n          label: \"第 3 部分，discuss moving\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/86d65b0f883444ecec51f0be854d1950d190837bd1f0edaf3d7bb8995e2af15c08e964d13bcd2f553b46e382a09f5852094d7b2e2a225ba01736401bafd6a1a2/4.json\",\n        },\n        {\n          label: \"第 4 部分，give advice\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c02a4c85c236505e665200a286488c3dc3c21432e65eafa34a9ca152d72253e15c350eba8fd1e97228cd4a24510c1f24b6e00cfb662084942d9b1976c90403d9/4.json\",\n        },\n        {\n          label: \"第 5 部分，take on a project\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b43f345d64f9d2a683964453247046c68cf43c7739454ae097252b6418937d4a0a1b21107787ab012c5e3a575568858e48067fe000466b5e4f9d87fdaf75b465/4.json\",\n        },\n        {\n          label: \"第 6 部分，talk about gardening\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/93c0be292ef2f9d49962e6fac22e1dafad6e7a2ba8f5133a8ea08ed5051ccb6597f500a86521d04e57d8dfac1600db98b2dae02a089052879039bf7d5e74d411/4.json\",\n        },\n        {\n          label: \"第 7 部分，plan a trip\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f1914de9e2a0daf047fd43471c8d49a453d0f338113eb346b225ad2265bb962b268b321a4779771367e2ec850b4ff413f4340174639865059fed4ff70ca850fd/3.json\",\n        },\n        {\n          label: \"第 8 部分，catch up at a reunion\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/cb86af85f258af7cc17aaaec35caa74bd28fa4a1ba38b325605d73e37fb42fdd1a191831b5faf089a9c63aea4a36b25a71a94cb35d6988b58ac371f0a5e9f711/4.json\",\n        },\n        {\n          label: \"第 9 部分，talk about politics\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/18b8f91227ce1f4ab90a009d4709d45c41d0e895a453371da2cddb4a18e1e640d0a922fc1ef85c09b70136058529fdda9d2c66f5b916da86ce0f6fd981da8dd2/4.json\",\n        },\n        {\n          label: \"第 10 部分，predict the weather\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e23f0778c4b2a6e382e6eb5728898af8f8314957ba41305f1a3494b1707a4004bcc9f6199ec73ca9e5351cf4d28eeb4e6e490890c78ed0f4481018f770cb8190/4.json\",\n        },\n        {\n          label: \"第 11 部分，discuss potential risks\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3524f4a41f14276368d099817783e7e9029e8be852bfc4352261eb8e3ef20b7a67464116132f685fb6c7020c8ff1fb15f9162d926fbde8b777b5a055c7621d5c/4.json\",\n        },\n        {\n          label: \"第 12 部分，discuss obligations\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3f0bc82d9529ab80f1d8498d0aad6e0ba88881a943a1d1e0c8f5de00e1f21f80fb7fc04c082b556f918624cb438df5c90b100eb82fd429d575d9c634808c9ac7/4.json\",\n        },\n        {\n          label: \"第 13 部分，debunk American clichés\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ced905854139383ce7bb426d2970d71685d15b6b8ecef6166c24bd430b2ceabe9109a5cffb2f17c9994ab600dd8e8d6a6de3f840f37291311798004ef5b663b6/4.json\",\n        },\n        {\n          label: \"第 14 部分，express regret\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e297a36495dd052be0f3717fb3592b474895c58be1bee67a74406e1394cf19710f218168fb80195749287162d0f3fd20af81297753c894ab1472c025618d38e5/4.json\",\n        },\n        {\n          label: \"第 15 部分，talk about college\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f7117fcca5f3a66d1c57ee94c316d9e23593cdcc1f7bf45dc619b8b12d577ada6df085d71206bae2637661e62aa6c18a0e14a22f6b01eb4517e31e29bfb706cf/3.json\",\n        },\n        {\n          label: \"第 16 部分，reminisce about the past\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6c098b681c103da5cbd1e515e96daad73617b3ad2374442eeece5a2d03e7235814d5db87f6741a3c4d9608b6f85ce434b9b9187d21d0a7523e113fbd1a53fecd/3.json\",\n        },\n        {\n          label: \"第 17 部分，express preferences\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8ab5a7e1a5bb9af605fb7bc69516e4f82b08f4fec9dade88e223cc4a54ae26d84503e0c9554c84793077089737b560d2f9e977c78dc8a51e26725aaf93673fb5/4.json\",\n        },\n        {\n          label: \"第 18 部分，communicate at work\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/90652f46a8c09991ad112ea273b3cb6937aa6d36b793ec8a9b63fc7a4bfb601ad54dd925358539626395192299f1cc7eb8154aca41285e119c791b7aceab7f3b/4.json\",\n        },\n        {\n          label: \"第 19 部分，discuss etiquette\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b7b7cda35ed8f69c23c38b07417d2fdd6352a8fdd2d126b3be49bfae0648996319bb646d0936e0c52606a8c2c65524bc3e501eb47e4aa276537ade904112bd03/4.json\",\n        },\n        {\n          label: \"第 20 部分，describe symptoms\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4d6f03edb36227c03e4ac5aaeb7286eff49762b81cc2892f24f17449eefa0ee661b2aaa736d7e2c1b21c82d5c760d43c3b1e82b7f00c990e5f4293e441b7b3b0/4.json\",\n        },\n        {\n          label: \"第 21 部分，talk about (home) renovations\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/295377f57c437cbc697dae6d5ad9c1d0bc774f5dad008f2e61e15e6d13c733326cbc7ce73a4bd2d63a4f411dd975917e0ba1ada472f54ee9b147f19e378d2493/4.json\",\n        },\n        {\n          label: \"第 22 部分，talk about relationships\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a2dd65994ad9791915a20feee135ba9ff0ebfc257cdb56e6d29dd5134a0db8695c7accca50fa609dcb285a0d70fa102d973710473aa0469119975b3bd6a07b8e/3.json\",\n        },\n        {\n          label: \"第 23 部分，tell stories\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/14837997ad7b6c63719b37768b6d8c6760a7a81aead9871024c259c35e6ef6c4c4fe81637d69a134f1fbe2fe2454dd866f803615aa0fa0ed2332f87d2cd782f1/4.json\",\n        },\n        {\n          label: \"第 24 部分，talk about goals\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/749c64aff319e41a1a25e7252e7d1cdbc75eb4da9bec90f8188ae990fe35476b7c4d26f2bbd5fb84cd97b7f85863f630cc9549df24495e4b8c48d09edca69112/3.json\",\n        },\n        {\n          label: \"第 25 部分，exchange gossip/talk about rumors\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/955422063ecaff258550e0aa98e50d77d70cd6b1adb0288f79df7b4de397f2f628b60c8b5bb9b410593c15eb6592c20e7ba1b6bd38227bb8ea1633c5d7e71404/4.json\",\n        },\n        {\n          label: \"第 26 部分，narrate past events\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9ab1b7ed31b63495693463d782b649a4b3e2abb327fcfe81abc069e8555af953d43fd14350b8f47517e8e7716592c8f160bb6c324939bdd28d36959f4d2075bb/4.json\",\n        },\n        {\n          label: \"第 27 部分，make complaints\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/880945de517c6b1f2d329fbce85dfc5ec03c84956bf8d0d76c1713f5874d369b6a3fdf82c932b62acb36e0a8bec2fe4bc0a54e92c5da6e654f8dc4491a727f3b/4.json\",\n        },\n        {\n          label: \"第 28 部分，discuss cause and effect\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6c08007e5c8e29982699352f580748c50f0675cbab0e322da8dab0fdfa1697a3723324624c7a1af76fb68fffe7e3759102f0aba73b96ed804c3bbebee54d0323/4.json\",\n        },\n        {\n          label: \"第 29 部分，talk about television\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3d3f0681d4c7bb77a3d9c804621602de1c8ba788df79c4d7b83d9d13774480068396d61a9e795093cb8548b43defd80d522aee51f961355669206e254fe727f3/4.json\",\n        },\n        {\n          label: \"第 30 部分，talk about news\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/970fd222a2d9107a952c148efa817d080b499568d1596ddd6562990d29af2d98413f56df6210b934283cbe02c49752fcf566843de6894db00e98dcc6720b92c1/4.json\",\n        },\n        {\n          label: \"第 31 部分，express opinions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/900b25aef5e5000f7f03735851cc11180202819c360c0a41671aa2adba929d37d4cc194ec060b3db4d3c6f06d3737fd089547c8b05deeb8984ce9e2f3646803d/4.json\",\n        },\n        {\n          label: \"第 32 部分，comfort somebody\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/58c09b52a7cd052d6005593da0aeea51a534350f770244d29710b1821bbf39631ac5a127efa0c6b0397055d76465095966adbda3b28476da71012224a7e383b8/4.json\",\n        },\n        {\n          label: \"第 33 部分，maintain a conversation\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9f0291f8d59183e3f1ce50d5d2304472b3572d2563b9ec77b5ffc9aa47676491b5dece046ba7f6abe01c31bed7dacb4cddcb2e4377646d850f0ef0e29b94d9c4/4.json\",\n        },\n        {\n          label: \"第 34 部分，negotiate at work\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f2fd91add9fd5e4ed3153ff2e36e678f4087896ad152885ee0732a02fb691f70b1bb7a7a79b32afadd9ba151d5e59082f1cf5035d0a7e9f660c2b612c3ef0dc7/3.json\",\n        },\n        {\n          label: \"第 35 部分，blame someone\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7e236b66e5453f7f24413a3269abba12dcc115c7615f4773c14f7b6898af26a3c9a5c700a4567eb74625c49074ad9c8005604f0deeaab663ae5c477b89d6606e/4.json\",\n        },\n        {\n          label: \"第 36 部分，discuss hypotheticals\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d02fbd13d8f9e05e834fe875527b11db23b58398ea65e6ea28974e88fe789e0b291bac9492f9181ba12944958487c2e5d75da48ea97d1b005e2fac3c2d4a2674/4.json\",\n        },\n      ],\n    },\n    {\n      label: \"第 8 阶段\",\n      value: \"第 8 阶段\",\n      children: [\n        {\n          label: \"第 1 部分，give reasons and justifications\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/1cb96422f5523dfe909e27a854f5bf89bea04819f34bb0acf740acc251bc5c84a551376ea74933f7a424fa710b9697b7c57dda12bb79113356e8aefc33ff5302/4.json\",\n        },\n        {\n          label: \"第 2 部分，ask for things in a softened way\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d79cfdcbdbf92353542408d0d63b683a8ea5d30adbab31d4578f519ee6e96129c5cb1e9f7afa2f42fc7404e7712b27db472fa4697db8f20afdabaad887e92dfa/4.json\",\n        },\n        {\n          label: \"第 3 部分，negotiate while shopping\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2e440a0d30d2d2239e67f9bff79029e7e96c2f81935adbd3455c89c950a0676bd29fa2e369cb6d80e21ffad40c66e4c763709851ccea2dc00bebef567a886add/4.json\",\n        },\n        {\n          label: \"第 4 部分，understand a local news report\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/525065ba21fd2baa5e596aa2cd969fb155ed8f5f1cacd27b43990bf73612bce5c2554095c5dcd3e84040a887b84c5748af1c3d48cae74db124422587823f04e0/4.json\",\n        },\n        {\n          label: \"第 5 部分，talk about music history\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/f8520816a5968887f507dd01a4fa09120e06a1f8ca75f87965ae4fbf62f53e8f46ec19904fdd9eabefef4596cbf34b71d43f4d67dd943ac588a11e9918aa53f8/4.json\",\n        },\n        {\n          label: \"第 6 部分，use the present perfect progressive\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/21bfc635986ead3e64ac019c7f16a0751ee7a514db8f44512a115bba2da744146db47509173a18486fa12603addb1fc87c610e11982b993f943665e3f39346a7/4.json\",\n        },\n        {\n          label: \"第 7 部分，talk about how things have changed\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6682ff1c8db213d9b9a41e1a26392abe6eaf6d592086616647b7a9a195d7a95ffd781df8be01f790be63cbfeaef5c8ff78194b6919dc92d120a866adba1f9571/4.json\",\n        },\n        {\n          label: \"第 8 部分，express disagreement\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/28448feb9f95030b1b05388d6041c9e2ede1960dd51b6b543c1dc1b01f49ad1431d161dfb4b9e658d4ab8d4628e9a263b7aeb8928e7d11500623378fad1bbd56/4.json\",\n        },\n        {\n          label: \"第 9 部分，present a counter-argument\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/686ec209a5aa72449bacc5dc44e4864a1799b2705a97c1051be75be526128b0843cad4c146d0ddd1156317dc03fdcca6a76b5422c482f45350c3e83c0ec5be60/4.json\",\n        },\n        {\n          label: \"第 10 部分，express frustration\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/8c19f643ccc71b1d2ac124552da2fe5136d31b54febd0d7f7bb471fd2498b5a27d3b339ecd1f91f48e507b78eff5da25ab43080665eb4f9b1bd924af350bed84/4.json\",\n        },\n        {\n          label: \"第 11 部分，discuss plans for a work party\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/2a8e6f4d7ec452a1abb18ae571f4dc81acb796ff1815e19b99255fae16f4f98167ee54cb7c7afffe52361ea33b42dede2e27c38504fbc025bcd9abff33bc0026/4.json\",\n        },\n        {\n          label: \"第 12 部分，make conclusions and deductions\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/483d6ba6f5e6c5acc07ea3b5e6c20a93fd71e0ac9efb203cdb931a80db8c5390e7327b63330999c64532966950bcd6fe0d959baef7eeae4bf47b809eb4f46381/4.json\",\n        },\n        {\n          label: \"第 13 部分，tell stories around a campfire\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7c5b63fee50b553db06e0a889b8ca8ac09574b95c93b72e77273a6faec29f001e804e1cbbb00c5ba94d514a4d02ff70a70f49f5876c6b1a2c4b359941d0e46b6/4.json\",\n        },\n        {\n          label: \"第 14 部分，describe a move to the big city\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e89ed57471f45156e27cb9a3a361f23e5b3627385f1ff9d7e7b196afc2daf1089c6ad40c58db5244a9efc8c46e60356a4619c844011559381b94c5dd78d43df0/4.json\",\n        },\n        {\n          label: \"第 15 部分，navigate a trip to a theme park\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6e97774dc9c8cd8d559e2bfb3017e2fd1b30c672051a7e346d753a7d5cee8cda1a024f970be5160ca4cb4410a5acc55811e83790b658c4c737e739a1e71e5156/4.json\",\n        },\n        {\n          label: \"第 16 部分，negotiate chores with roommates\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/4f63817fd79948112844d9c91dc1e2fa22189653388a9b81eb9b0e554974695899d823102edfac9046b57684a7c136442c690f7d4aaaa7a67c706ec51a6daf83/4.json\",\n        },\n        {\n          label: \"第 17 部分，express how certain or uncertain you are\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/7103173c1f4ef6365a6f8845a96cf378781deb7441b0c200af1617a01b6dbc520e238d2e2c7797abfec499d0d2900feab54edbc88572186c4df667cb1d873f18/4.json\",\n        },\n        {\n          label: \"第 18 部分，confirm information\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/185c7ba3ad8336e489880224ac2569a52ab6c4a38024377a34de380e82fa2bc430178c3529f47163ae4441aa062f2b0be2babf84f0f02a76d141bc59f1fc63ac/4.json\",\n        },\n        {\n          label: \"第 19 部分，express good wishes for someone\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6fdbb15982a09220558a0f121d3567c1854921e7b58141358b79a3c8674a176c7526e9c79cd6cc7ee6e62faf2e8ea1d3f709a7875b794cff056d98af9047f8f7/4.json\",\n        },\n        {\n          label: \"第 20 部分，talk about your plans for a trip\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/e5d1b9648ff08844ad7d91392a2dad454303331214da420b00e6a06b63b1e3aa3cb4ef8effa196875efcb230bfb1cbb0576f6cd05614087c61150b51dc85e8c6/4.json\",\n        },\n        {\n          label: \"第 21 部分，use the future perfect progressive\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c177ea277020905e290fbcd8e2d772b7665fe67fcd07fa733bd26278911d60287d5efe384b6d781dc3bf6b81e0d6157399df380b07fb972a2371db0aaa764a3a/4.json\",\n        },\n        {\n          label: \"第 22 部分，make plans for a Friday night\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/686900e20e992382196d18acd37c7c1a65b64dd0dda1af53e16e6024959aeb050b4fb56402796cbecdb0fdaf9294420083e260aa44d7954ca34c3abd6c132b09/4.json\",\n        },\n        {\n          label: \"第 23 部分，navigate transactions at a garage sale\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/3161c91e82dd9a3bfc42468a8809a6326a0d6bfa7d0b1fc1722066ed143c98377a7d293deafc1f25c8cd7998ea6b7d602e1ad3aab0bcb455b672dcbb272af93f/4.json\",\n        },\n        {\n          label: \"第 24 部分，respond to a command or request\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c8d9bec3b83616fa24a2f6f0d98e65dd9e12dee8934cef8bd693d486fb091eef14e597f48e9c84b046ae5e57fe7a660fea40575bd7e0735103764f66212ace8d/3.json\",\n        },\n        {\n          label: \"第 25 部分，politely decline an offer or proposal\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/72824a6df8a4568516e962305545af3d4da1b1f11dad600a70df0e2fb3f31883dee2867dd069d7c32b614862f38defac5ff844f4d31d39bc1665031c92b8ad87/4.json\",\n        },\n        {\n          label: \"第 26 部分，talk about household chores\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/499b8b892d8ea2d4171e7d43cf8672d5a676518ce71d505d26a10452c3ae9c5fdc1a375b339c6dd37274cb6257d3591af9760cabfc20642bba625753686326c5/4.json\",\n        },\n        {\n          label: \"第 27 部分，catch up with an old friend\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/5be6ce2b640d99484af14a606a9c986da26131de8fd3d74bb8f46765a68b73a13eb67ffce5c653a8435b92f459d7653dc899b23eec7167ba1da6ba16d6f623b1/3.json\",\n        },\n        {\n          label: \"第 28 部分，use the past perfect passive\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/c532e3f1c8d9028e40e7ccc945cb06a14c1feac41c45b9e6e1676989968072359f64e07b399d8fdce55b2b4301857e404eaa2d1f9bd73732e32a9c0778a586a9/4.json\",\n        },\n        {\n          label: \"第 29 部分，express limitations or caveats\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/9f1cdc5cfc1cf5a45bc4cc673cc998870ef0810b111154e4120e2470baabd84adacb1e31ba0a64506c4bbd0a62335238183aa01e7cc9b09244c27f93cc82a535/4.json\",\n        },\n        {\n          label: \"第 30 部分，talk about sporting events\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/6914fa84516f70badcfd1d01b84ea48fb77e1a4a1a351247c5323c62381a2110ffd4a547d5f88ae9d45a4027c3ebbfab7c9fb87895dbe5ed5a1a760bc8742e8a/4.json\",\n        },\n        {\n          label: \"第 31 部分，understand a guided tour\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/a4ccbd4b8dc8ebbdece6015cf438e6717f8aa200eb896071ae657d6ed244e3e08e6100770c4d2c37c6595f795a1826b2e83c45d960be9e1655ec1bc1638b548d/4.json\",\n        },\n        {\n          label: \"第 32 部分，speculate about mysteries\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/b8eab9c4664146cf4eb6685b99491aa757af333fc20e2247c6c43d80599314a70b028d5bf4d701396bb7e7730a09aeeef6c7805eea8344209045554e5ffa54f3/4.json\",\n        },\n        {\n          label: \"第 33 部分，interact at a magic show\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/0a49377d44e7d15b59d79cf3a136aeceed40bd4fbb59e881e6a66a70278c436df58978c01d7a86b30e26b2c1944f8873136259a21cd90f73012ededc03dc7c34/4.json\",\n        },\n        {\n          label: \"第 34 部分，reminisce about childhood\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/fa5d255351b5710bc35c94780df8825a201c5fc9921f99903a771366c2a1e8feba3bb07ef42697b95cd862a5ed551aff71413eb4f5e2f1c7e396c1aed5d83735/4.json\",\n        },\n        {\n          label: \"第 35 部分，explain a complicated situation\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/d7900a42ef1215ac2e21e0949d21ce9809959ba927fbeef754734b27268b3c638dace4ce019cb08f4afcaaedd5539001a6c906ba4bd6614c06cb1288927df427/4.json\",\n        },\n        {\n          label: \"第 36 部分，express relief and congratulations\",\n          value:\n            \"https://d1btvuu4dwu627.cloudfront.net/guidebook/compiled/en/zh-CN/iOS/1/ceb6d90964d52b9ddef0c171a3a9478ef7c90218ec190fcf7be6aba401342aaa82c6818a9f9f19718f81f6ff08ed3352ea1fde6d6b1f9315e0dde4faec5f7367/4.json\",\n        },\n      ],\n    },\n  ]\n}, [])\n"
                                                    }
                                                },
                                                "name": "guidebook",
                                                "required": true,
                                                "x-designable-id": "t5zwyj2z24o",
                                                "x-index": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "7lww9d1ufcx": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {},
                        "x-designable-id": "7lww9d1ufcx",
                        "x-index": 6,
                        "properties": {
                            "customWordCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "customWordCardDiv",
                                "x-designable-id": "0gwibpjhtb4",
                                "x-index": 0,
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "// 区块路径\nconst rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n\n// 修复样式问题\n$props({\n  className: $self.props.name,\n})\n$effect(() => {\n  const rootNode = document.querySelector(`.${$self.props.name}`)\n  if (rootNode) {\n    const element = rootNode.querySelector(\n      \".ant-formily-item-feedback-layout-loose\"\n    )\n    if (element) {\n      element.style.marginBottom = 0\n    }\n  }\n}, [])\n\n// 展示页面内通知和系统通知\nconst sendNotification = (item) => {\n  $message.success(`${item.learningLanguage} ${item.fromLanguage}`)\n\n  // 创建系统通知\n  $chrome.notifications.create(\n    null,\n    {\n      type: \"basic\",\n      title: item.learningLanguage,\n      message: item.fromLanguage,\n      iconUrl:\n        \"https://d35aaqx5ub95lt.cloudfront.net/images/pathCharacters/guidebook/939ebad747027f1a9d365e15fda3a4e1.svg\",\n    },\n    $chrome.proxy((notificationId) => {\n      // 延迟 6 秒清除系统通知\n      setTimeout(() => {\n        $chrome.notifications.clear(notificationId)\n      }, 6000)\n    })\n  )\n}\n\n$self.crud = {\n  // 条目中文名称\n  itemChineseName: \"自定义单词\",\n  // 条目表格组件的名称\n  itemTableName: `customWordTable`,\n  // 添加或修改对话框的名称\n  addOrUpdateDialogName: `addOrUpdateCustomWordDialog`,\n  // 条目默认列表数据\n  defualtItemList: [],\n  // 条目列表持久化缓存的 key\n  cacheKeyItemList: `${cacheKeyPrefix}CustomWordList`,\n  // 展示添加或修改条目对话框\n  showAddOrUpdateDialog(toAddOrUpdateItem) {\n    const addOrUpdateDialog = $self\n      .query(`${rootEntire}.${this.addOrUpdateDialogName}`)\n      .take()\n    addOrUpdateDialog.value = {\n      ...(toAddOrUpdateItem || {}),\n    }\n    addOrUpdateDialog.setComponentProps({\n      open: true,\n      title: `${toAddOrUpdateItem ? \"修改\" : \"添加\"}${this.itemChineseName}`,\n    })\n  },\n  // 添加或修改条目\n  async addOrUpdateItem(toAddOrUpdateItem) {\n    const list = await this.fetchItemList()\n\n    if (toAddOrUpdateItem.id) {\n      // 修改\n      const index = list.findIndex((item) => item.id === toAddOrUpdateItem.id)\n      list[index] = toAddOrUpdateItem\n    } else {\n      // 添加\n      toAddOrUpdateItem.id = Date.now()\n      list.push(toAddOrUpdateItem)\n    }\n\n    await this.saveItemList(list)\n  },\n  // 删除条目\n  async deleteItem(toDeleteItem) {\n    let list = await this.fetchItemList()\n    list = list.filter((item) => item.id !== toDeleteItem.id)\n    await this.saveItemList(list)\n  },\n  // 往前移动条目\n  async moveUpItem(toMoveItem) {\n    let list = await this.fetchItemList()\n\n    const index = list.findIndex((item) => item.id === toMoveItem.id)\n    let preIndex = index - 1\n    if (preIndex === -1) {\n      // 已经是第一条，则和最后一条互换\n      preIndex = list.length - 1\n    }\n\n    const other = list[preIndex]\n    list[preIndex] = toMoveItem\n    list[index] = other\n\n    await this.saveItemList(list)\n  },\n  // 往后移动条目\n  async moveDownItem(toMoveItem) {\n    let list = await this.fetchItemList()\n\n    const index = list.findIndex((item) => item.id === toMoveItem.id)\n    let nextIndex = index + 1\n    if (nextIndex === list.length) {\n      // 已经是最后一条，则和第一条互换\n      nextIndex = 0\n    }\n\n    const other = list[nextIndex]\n    list[nextIndex] = toMoveItem\n    list[index] = other\n\n    await this.saveItemList(list)\n  },\n  // 保存条目列表数据\n  async saveItemList(newItemList) {\n    try {\n      await $chrome.localStorage.setItem(\n        this.cacheKeyItemList,\n        JSON.stringify(newItemList)\n      )\n\n      await this.refreshItemList()\n    } catch (e) {\n      $logger.info(`保存${this.itemChineseName}列表数据失败`, e)\n    }\n  },\n  // 获取条目列表\n  async fetchItemList() {\n    let res = null\n    try {\n      res = await $chrome.localStorage.getItem(this.cacheKeyItemList)\n    } catch (e) {\n      $logger.info(`获取${this.itemChineseName}列表失败`, e)\n      return []\n    }\n\n    if (!res) {\n      this.saveItemList(this.defualtItemList)\n      return this.defualtItemList\n    }\n\n    try {\n      const itemList = JSON.parse(res) || []\n      return itemList\n    } catch (e) {\n      $logger.info(`解析${this.itemChineseName}列表数据失败`, e)\n      return []\n    }\n  },\n\n  // 刷新条目列表\n  async refreshItemList() {\n    const itemList = await this.fetchItemList()\n\n    const itemListField = $self\n      .query(`${rootEntire}.${this.itemTableName}`)\n      .take()\n    if (itemListField) {\n      // 如果涉及到图片，则先清空在重新赋值，不然图片不会更新\n      // itemListField.value = []\n      itemListField.value = itemList\n    }\n\n    if (itemList.length > 0) {\n      const randomIndex = parseInt(Math.random() * itemList.length)\n      const randomItem = itemList[randomIndex]\n      sendNotification(randomItem)\n    }\n  },\n}\n\n$effect(() => {\n  $self.crud.refreshItemList()\n}, [])\n"
                                    }
                                },
                                "properties": {
                                    "headerDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "rbzdiyic885",
                                        "x-index": 0,
                                        "name": "headerDiv",
                                        "properties": {
                                            "headerLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "5s32ao6hsy3",
                                                "x-index": 0,
                                                "name": "headerLeftDiv",
                                                "properties": {
                                                    "customWordHeaderImg": {
                                                        "type": "string",
                                                        "x-component": "Img",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "src": "https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/dynamicSchemaBlockTemplate/custom-word/icon.svg",
                                                            "style": {
                                                                "width": "20px",
                                                                "height": "20px"
                                                            }
                                                        },
                                                        "x-designable-id": "3cpgoly1zjb",
                                                        "x-index": 0,
                                                        "name": "customWordHeaderImg"
                                                    },
                                                    "customWordTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "自定义单词本",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 4px"
                                                            }
                                                        },
                                                        "x-designable-id": "iu5nkp6jf1q",
                                                        "x-index": 1,
                                                        "name": "customWordTitle"
                                                    }
                                                }
                                            },
                                            "addCustomWordBtn": {
                                                "type": "string",
                                                "x-component": "Button",
                                                "x-reactions": {
                                                    "fulfill": {
                                                        "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.crud.showAddOrUpdateDialog(null)\n  },\n})\n"
                                                    },
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ]
                                                },
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "children": "",
                                                    "target": "_blank",
                                                    "icon": "PlusCircleOutlined",
                                                    "type": "default",
                                                    "size": "small"
                                                },
                                                "x-designable-id": "ip73usf50ot",
                                                "x-index": 1,
                                                "name": "addCustomWordBtn"
                                            }
                                        }
                                    },
                                    "divider": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 4px 0px"
                                            }
                                        },
                                        "x-designable-id": "thsg0ktdovs",
                                        "x-index": 1,
                                        "name": "divider"
                                    },
                                    "customWordTable": {
                                        "type": "array",
                                        "x-decorator": "FormItem",
                                        "x-component": "ArrayTable",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "bordered": false,
                                            "showHeader": true,
                                            "tableLayout": "fixed",
                                            "style": {
                                                "margin": "0px 10px 0px 10px"
                                            }
                                        },
                                        "x-decorator-props": {},
                                        "x-designable-id": "fgoj0jwud2k",
                                        "x-index": 2,
                                        "name": "customWordTable",
                                        "items": {
                                            "type": "object",
                                            "x-designable-id": "101atc56jq0",
                                            "x-validator": [],
                                            "properties": {
                                                "e7o9x7nsodu": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "学的语言"
                                                    },
                                                    "x-designable-id": "e7o9x7nsodu",
                                                    "x-index": 0,
                                                    "properties": {
                                                        "learningLanguage": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "learningLanguage",
                                                            "x-designable-id": "gnt5jlp82b4",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "grmu00lg07i": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "我的语言"
                                                    },
                                                    "x-designable-id": "grmu00lg07i",
                                                    "x-index": 1,
                                                    "properties": {
                                                        "fromLanguage": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "x-validator": [],
                                                            "x-component-props": {},
                                                            "name": "fromLanguage",
                                                            "x-designable-id": "t5u6hns1eit",
                                                            "x-index": 0
                                                        }
                                                    }
                                                },
                                                "spznivuol6h": {
                                                    "type": "void",
                                                    "x-component": "ArrayTable.Column",
                                                    "x-component-props": {
                                                        "title": "操作",
                                                        "width": 135,
                                                        "align": "center"
                                                    },
                                                    "x-designable-id": "spznivuol6h",
                                                    "x-index": 2,
                                                    "properties": {
                                                        "deleteCustomWordBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.deleteItem(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "DeleteOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 0px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "c4p6xhtbp7c",
                                                            "x-index": 0,
                                                            "name": "deleteCustomWordBtn"
                                                        },
                                                        "moveUpCustomWordBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.moveUpItem(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "ArrowUpOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 6px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "y34ahvz9qnk",
                                                            "x-index": 1,
                                                            "name": "moveUpCustomWordBtn"
                                                        },
                                                        "moveDownCustomWordBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.moveDownItem(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "ArrowDownOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 6px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "54tdogcyjpb",
                                                            "x-index": 2,
                                                            "name": "moveDownCustomWordBtn"
                                                        },
                                                        "editCustomWordBtn": {
                                                            "type": "string",
                                                            "x-component": "Button",
                                                            "x-reactions": {
                                                                "fulfill": {
                                                                    "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.crud.showAddOrUpdateDialog(row)\n  },\n})\n"
                                                                },
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ]
                                                            },
                                                            "x-validator": [],
                                                            "x-component-props": {
                                                                "children": "",
                                                                "target": "_blank",
                                                                "icon": "EditOutlined",
                                                                "style": {
                                                                    "margin": "0px 0px 0px 6px"
                                                                },
                                                                "size": "small"
                                                            },
                                                            "x-designable-id": "9y6r6aa2hpa",
                                                            "x-index": 3,
                                                            "name": "editCustomWordBtn"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "addOrUpdateCustomWordDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "const rootName = \"customWordCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(async () => {\n        const itemForm = $self.value\n        // $logger.info(\"$self.value\", itemForm)\n\n        // 添加或更新条目\n        await rootField.crud.addOrUpdateItem({\n          ...itemForm\n        })\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {},
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "添加自定义单词"
                                        },
                                        "name": "addOrUpdateCustomWordDialog",
                                        "x-designable-id": "zh91a19h98u",
                                        "x-index": 3,
                                        "properties": {
                                            "learningLanguage": {
                                                "type": "string",
                                                "title": "学的语言",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入所学语言的单词"
                                                },
                                                "x-decorator-props": {},
                                                "name": "learningLanguage",
                                                "required": true,
                                                "x-designable-id": "ivvx1q89d4o",
                                                "x-index": 0
                                            },
                                            "fromLanguage": {
                                                "type": "string",
                                                "title": "我的语言",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入单词对应的我的语言"
                                                },
                                                "x-decorator-props": {},
                                                "required": true,
                                                "name": "fromLanguage",
                                                "x-designable-id": "syaa2ij9lre",
                                                "x-index": 1
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "1rumjnvpp8v": {
                        "type": "void",
                        "x-component": "FormGrid.GridColumn",
                        "x-validator": [],
                        "x-component-props": {
                            "gridSpan": 2
                        },
                        "x-designable-id": "1rumjnvpp8v",
                        "x-index": 7,
                        "properties": {
                            "bookmarkCardDiv": {
                                "type": "void",
                                "x-component": "Div",
                                "x-component-props": {
                                    "style": {
                                        "backgroundColor": "rgba(255,255,255,1)",
                                        "borderRadius": "8px 8px 8px 8px",
                                        "border": "1px solid #f0f0f0"
                                    }
                                },
                                "name": "bookmarkCardDiv",
                                "x-reactions": {
                                    "dependencies": [
                                        {
                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                            "property": "value",
                                            "type": "any"
                                        }
                                    ],
                                    "fulfill": {
                                        "run": "const rootEntire = $self.address.entire\n// 只截取自己和父节点，避免拖动位置后数据丢失\nconst cacheKeyPrefix = $self.address.segments.slice(-2).join(\".\")\n// 书签列表持久化缓存的 key\nconst cacheKeyBookmarkList = `${cacheKeyPrefix}BookmarkList`\n// 书签样式持久化缓存的 key\nconst cacheKeyBookmarkStyle = `${cacheKeyPrefix}BookmarkStyle`\n// 书签卡片标题持久化缓存的 key\nconst cacheKeyBookmarkCardTitle = `${cacheKeyPrefix}BookmarkCardTitle`\n// 默认书签样式\nconst defaultBookmarkStyle = \"verticalImgAndText\"\n\n$self.state = $observable({\n  bookmarkStyle: \"\",\n  bookmarkCardTitle: \"书签卡片\",\n})\n\n// 默认书签列表\nconst defualtList = [\n  {\n    id: Date.now(),\n    title: \"React\",\n    url: \"https://zh-hans.react.dev/learn\",\n  },\n  {\n    id: Date.now() + 1,\n    title: \"Vue\",\n    url: \"https://cn.vuejs.org/v2/guide/index.html\",\n  },\n]\n\n// 获取书签样式\n$self.getBookmarkStyle = async () => {\n  if ($self.state.bookmarkStyle) {\n    // 返回内存缓存的书签样式\n    return $self.state.bookmarkStyle\n  }\n\n  let res = null\n  try {\n    res = await $chrome.localStorage.getItem(cacheKeyBookmarkStyle)\n  } catch (e) {\n    $logger.info(\"获取书签样式失败\", e)\n  }\n\n  $self.state.bookmarkStyle = res || defaultBookmarkStyle\n  return $self.state.bookmarkStyle\n}\n\n// 修改书签样式\n$self.updateBookmarkStyle = async (bookmarkStyle) => {\n  try {\n    await $chrome.localStorage.setItem(cacheKeyBookmarkStyle, bookmarkStyle)\n\n    $self.state.bookmarkStyle = bookmarkStyle\n  } catch (e) {\n    $logger.info(\"修改书签样式失败\", e)\n  }\n}\n\n// 刷新书签卡片名称\n$self.refreshBookmarkCardTitle = async () => {\n  let res = null\n  try {\n    res = await $chrome.localStorage.getItem(cacheKeyBookmarkCardTitle)\n  } catch (e) {\n    $logger.info(\"获取书签卡片名称失败\", e)\n  }\n\n  $self.state.bookmarkCardTitle = res\n\n  const bookmarkCardTitleText = $self\n    .query(\n      `${rootEntire}.bookmarkCardTitleDiv.bookmarkCardTitleLeftDiv.bookmarkCardTitle`\n    )\n    .take()\n\n  bookmarkCardTitleText.value = $self.state.bookmarkCardTitle || '书签卡片'\n}\n\n// 修改书签卡片名称\n$self.updateBookmarkCardTitle = async (bookmarkCardTitle) => {\n  try {\n    await $chrome.localStorage.setItem(\n      cacheKeyBookmarkCardTitle,\n      bookmarkCardTitle\n    )\n\n    $self.refreshBookmarkCardTitle()\n  } catch (e) {\n    $logger.info(\"修改书签卡片名称失败\", e)\n  }\n}\n\n// 展示书签管理对话框\n$self.showBookmarkManageDialog = () => {\n  const bookmarkManageDialog = $self\n    .query(`${rootEntire}.bookmarkManageDialog`)\n    .take()\n  bookmarkManageDialog.setComponentProps({\n    open: true,\n  })\n}\n\n// 展示添加或书签对话框\n$self.showAddOrUpdateBookmarkDialog = (bookmark) => {\n  const addBookmarkDialog = $self\n    .query(`${rootEntire}.addBookmarkDialog`)\n    .take()\n  addBookmarkDialog.value = {\n    ...(bookmark || {}),\n  }\n  addBookmarkDialog.setComponentProps({\n    open: true,\n    title: `${bookmark ? \"修改\" : \"添加\"}书签`,\n  })\n}\n\n// 添加或修改书签\n$self.addOrUpdateBookmark = async (bookmark) => {\n  const list = await $self.fetchBookmarkList()\n\n  if (bookmark.id) {\n    // 修改\n    const index = list.findIndex((item) => item.id === bookmark.id)\n    list[index] = bookmark\n  } else {\n    // 添加\n    bookmark.id = Date.now()\n    list.push(bookmark)\n  }\n\n  try {\n    await $chrome.localStorage.setItem(\n      cacheKeyBookmarkList,\n      JSON.stringify(list)\n    )\n\n    $self.refreshBookmarkListAndTable()\n  } catch (e) {\n    $logger.info(`${bookmark.id ? \"修改\" : \"添加\"}书签数据失败`, e)\n  }\n}\n\n// 删除书签\n$self.deleteBookmark = async (bookmark) => {\n  let list = await $self.fetchBookmarkList()\n  list = list.filter((item) => item.id !== bookmark.id)\n  $self.saveBookmarkList(list)\n}\n\n// 往前移动书签\n$self.moveUpBookmark = async (bookmark) => {\n  let list = await $self.fetchBookmarkList()\n\n  const index = list.findIndex((item) => item.id === bookmark.id)\n  let preIndex = index - 1\n  if (preIndex === -1) {\n    // 已经是第一条，则和最后一条互换\n    preIndex = list.length - 1\n  }\n\n  const other = list[preIndex]\n  list[preIndex] = bookmark\n  list[index] = other\n  $self.saveBookmarkList(list)\n}\n\n// 往后移动书签\n$self.moveDownBookmark = async (bookmark) => {\n  let list = await $self.fetchBookmarkList()\n\n  const index = list.findIndex((item) => item.id === bookmark.id)\n  let nextIndex = index + 1\n  if (nextIndex === list.length) {\n    // 已经是最后一条，则和第一条互换\n    nextIndex = 0\n  }\n\n  const other = list[nextIndex]\n  list[nextIndex] = bookmark\n  list[index] = other\n\n  $self.saveBookmarkList(list)\n}\n\n// 保存书签列表数据\n$self.saveBookmarkList = async (bookmarkList) => {\n  try {\n    await $chrome.localStorage.setItem(\n      cacheKeyBookmarkList,\n      JSON.stringify(bookmarkList)\n    )\n\n    $self.refreshBookmarkListAndTable()\n  } catch (e) {\n    $logger.info(`保存书签列表数据失败`, e)\n  }\n}\n\n// 获取书签列表\n$self.fetchBookmarkList = async () => {\n  let res = null\n  try {\n    res = await $chrome.localStorage.getItem(cacheKeyBookmarkList)\n  } catch (e) {\n    $logger.info(\"获取书签列表失败\", e)\n    return []\n  }\n\n  if (!res) {\n    $self.saveBookmarkList(defualtList)\n    return defualtList\n  }\n\n  try {\n    const bookmarkCardData = JSON.parse(res) || []\n    return bookmarkCardData\n  } catch (e) {\n    $logger.info(\"解析书签列表数据失败\", e)\n    return []\n  }\n}\n\n// 刷新书签列表和管理表格\n$self.refreshBookmarkListAndTable = async () => {\n  const bookmarkCardData = await $self.fetchBookmarkList()\n\n  const bookmarkIteratorLayout = $self\n    .query(`${rootEntire}.bookmarkIteratorLayout`)\n    .take()\n  if (bookmarkIteratorLayout) {\n    // 先清空再重新赋值，负责书签图标不会更新\n    bookmarkIteratorLayout.value = []\n    bookmarkIteratorLayout.value = bookmarkCardData\n  }\n\n  const bookmarkTable = $self.query(`${rootEntire}.*.bookmarkTable`).take()\n  if (bookmarkTable) {\n    bookmarkTable.value = bookmarkCardData\n  }\n}\n\n// 初始化\nconst init = async () => {\n  // 1、先调用下获取书签样式方法。这里需要 await，后续可以并行，不需要 await\n  await $self.getBookmarkStyle()\n\n  // 2、获取成功后再展示列表，方便后续快速获取\n  $self.refreshBookmarkListAndTable()\n  $self.refreshBookmarkCardTitle()\n}\n\n$effect(async () => {\n  init()\n}, [])\n"
                                    }
                                },
                                "x-designable-id": "2wb6jmm9vnb",
                                "x-index": 0,
                                "properties": {
                                    "bookmarkCardTitleDiv": {
                                        "type": "void",
                                        "x-component": "Div",
                                        "x-component-props": {
                                            "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "alignItems": "center",
                                                "margin": "0px 0px 0px 0px",
                                                "padding": "4px 10px 4px 10px",
                                                "justifyContent": "space-between"
                                            }
                                        },
                                        "x-designable-id": "ef8rd8lx2ae",
                                        "x-index": 0,
                                        "name": "bookmarkCardTitleDiv",
                                        "properties": {
                                            "bookmarkCardTitleLeftDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "alignItems": "center",
                                                        "margin": "0px 0px 0px 0px",
                                                        "padding": "0px 0px 0px 0px",
                                                        "justifyContent": "flex-start"
                                                    }
                                                },
                                                "x-designable-id": "7xpai0xh2by",
                                                "x-index": 0,
                                                "name": "bookmarkCardTitleLeftDiv",
                                                "properties": {
                                                    "bookmarkCardTitle": {
                                                        "type": "string",
                                                        "x-component": "Text",
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "content": "书签卡片",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": 700,
                                                                "margin": "0px 0px 0px 0px"
                                                            }
                                                        },
                                                        "x-designable-id": "ct4vu8tgtt9",
                                                        "x-index": 0,
                                                        "name": "bookmarkCardTitle"
                                                    }
                                                }
                                            },
                                            "bookmarkCardTitleRightDiv": {
                                                "type": "void",
                                                "x-component": "Div",
                                                "x-component-props": {
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row"
                                                    }
                                                },
                                                "x-designable-id": "fl7mda7cb57",
                                                "x-index": 1,
                                                "name": "bookmarkCardTitleRightDiv",
                                                "properties": {
                                                    "bookmarkManageBtn": {
                                                        "type": "string",
                                                        "x-component": "Button",
                                                        "x-reactions": {
                                                            "fulfill": {
                                                                "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showBookmarkManageDialog()\n  },\n})\n"
                                                            },
                                                            "dependencies": [
                                                                {
                                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                    "property": "value",
                                                                    "type": "any"
                                                                }
                                                            ]
                                                        },
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "children": "",
                                                            "target": "_blank",
                                                            "icon": "SettingOutlined",
                                                            "type": "default",
                                                            "style": {
                                                                "margin": "0px 0px 0px 12px"
                                                            },
                                                            "size": "small"
                                                        },
                                                        "x-designable-id": "n37r496ojuf",
                                                        "x-index": 0,
                                                        "name": "bookmarkManageBtn"
                                                    },
                                                    "addBookmarkBtn": {
                                                        "type": "string",
                                                        "x-component": "Button",
                                                        "x-reactions": {
                                                            "fulfill": {
                                                                "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    rootField.showAddOrUpdateBookmarkDialog(null)\n  },\n})\n"
                                                            },
                                                            "dependencies": [
                                                                {
                                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                    "property": "value",
                                                                    "type": "any"
                                                                }
                                                            ]
                                                        },
                                                        "x-validator": [],
                                                        "x-component-props": {
                                                            "children": "",
                                                            "target": "_blank",
                                                            "icon": "PlusCircleOutlined",
                                                            "type": "default",
                                                            "style": {
                                                                "margin": "0px 0px 0px 12px"
                                                            },
                                                            "size": "small"
                                                        },
                                                        "x-designable-id": "mxdoh90e2ns",
                                                        "x-index": 1,
                                                        "name": "addBookmarkBtn"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "669y7jb5ewz": {
                                        "type": "string",
                                        "x-component": "Divider",
                                        "x-validator": [],
                                        "x-component-props": {
                                            "children": "",
                                            "style": {
                                                "margin": "0px 0px 0px 0px"
                                            }
                                        },
                                        "x-designable-id": "669y7jb5ewz",
                                        "x-index": 1
                                    },
                                    "bookmarkIteratorLayout": {
                                        "type": "array",
                                        "x-component": "IteratorLayout",
                                        "x-component-props": {
                                            "style": {}
                                        },
                                        "default": [],
                                        "x-validator": [],
                                        "x-designable-id": "1vtkmhkh12h",
                                        "x-index": 2,
                                        "name": "bookmarkIteratorLayout",
                                        "x-reactions": {
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ],
                                            "fulfill": {
                                                "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  if (rootField.state.bookmarkStyle === \"onlyText\") {\n    $props({\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        padding: \"0 4px 4px 4px\",\n      },\n    })\n  } else {\n    let itemWidth = 120\n    if (rootField.state.bookmarkStyle === \"horizontalImgAndText\") {\n      itemWidth = 155\n    }\n    $props({\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(auto-fill, ${itemWidth}px)`,\n        justifyContent: \"space-between\",\n        gap: \"10px\",\n        padding: \"0 4px 4px 4px\",\n      },\n    })\n  }\n}, [rootField.state.bookmarkStyle])\n"
                                            }
                                        },
                                        "items": {
                                            "type": "object",
                                            "x-designable-id": "4emwz2uvq26",
                                            "x-validator": [],
                                            "properties": {
                                                "verticalImgAndText": {
                                                    "type": "void",
                                                    "x-component": "Div",
                                                    "x-component-props": {
                                                        "style": {
                                                            "cursor": "pointer",
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "alignItems": "center",
                                                            "padding": "8px 0px 8px 0px"
                                                        }
                                                    },
                                                    "x-reactions": {
                                                        "fulfill": {
                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  $self.hidden = rootField.state.bookmarkStyle !== \"verticalImgAndText\"\n}, [rootField.state.bookmarkStyle])\n\n$props({\n  onClick: () => {\n    // 处理点击指定的循环类组件的条目链接，默认就是取的条目的 url 字段来打开\n    $utils.clickArrayFieldUrlItem($self)\n  },\n  onMouseEnter: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        transition: \"0.2s\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n        borderRadius: \"8px\",\n      },\n    })\n  },\n  onMouseLeave: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        transition: \"0.2s\",\n        boxShadow: \"none\",\n        borderRadius: \"0px\",\n      },\n    })\n  },\n})\n"
                                                        },
                                                        "dependencies": [
                                                            {
                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                "property": "value",
                                                                "type": "any"
                                                            }
                                                        ]
                                                    },
                                                    "x-designable-id": "4vj5d7ctp68",
                                                    "x-index": 0,
                                                    "name": "verticalImgAndText",
                                                    "properties": {
                                                        "icon": {
                                                            "type": "string",
                                                            "x-component": "Img",
                                                            "x-component-props": {
                                                                "style": {
                                                                    "width": "40px",
                                                                    "height": "40px"
                                                                },
                                                                "objectFit": "contain"
                                                            },
                                                            "name": "icon",
                                                            "x-reactions": {
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ],
                                                                "fulfill": {
                                                                    "run": "$effect(() => {\n  // 获取迭代器布局中当前点击的条目数据\n  const row = $utils.getArrayFieldRow($self)\n  // 获取书签的图标地址\n  $utils.getBookmarkIconUrl(row.url, row.icon).then((iconUrl) => {\n    $props({\n      src: iconUrl,\n    })\n  })\n}, [])\n"
                                                                }
                                                            },
                                                            "x-designable-id": "hko4p5bgxab",
                                                            "x-index": 0,
                                                            "x-validator": []
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "name": "title",
                                                            "x-designable-id": "yvvkq8wv9sb",
                                                            "x-index": 1,
                                                            "x-validator": [],
                                                            "x-component-props": {}
                                                        }
                                                    }
                                                },
                                                "horizontalImgAndText": {
                                                    "type": "void",
                                                    "x-component": "Div",
                                                    "x-component-props": {
                                                        "style": {
                                                            "cursor": "pointer",
                                                            "display": "flex",
                                                            "flexDirection": "row",
                                                            "alignItems": "center",
                                                            "justifyContent": "center",
                                                            "padding": "8px 10px 8px 10px"
                                                        }
                                                    },
                                                    "x-reactions": {
                                                        "fulfill": {
                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  $self.hidden = rootField.state.bookmarkStyle !== \"horizontalImgAndText\"\n}, [rootField.state.bookmarkStyle])\n\n$props({\n  onClick: () => {\n    // 处理点击指定的循环类组件的条目链接，默认就是取的条目的 url 字段来打开\n    $utils.clickArrayFieldUrlItem($self)\n  },\n  onMouseEnter: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        transition: \"0.2s\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n        borderRadius: \"8px\",\n      },\n    })\n  },\n  onMouseLeave: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        transition: \"0.2s\",\n        boxShadow: \"none\",\n        borderRadius: \"0px\",\n      },\n    })\n  },\n})\n"
                                                        },
                                                        "dependencies": [
                                                            {
                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                "property": "value",
                                                                "type": "any"
                                                            }
                                                        ]
                                                    },
                                                    "x-designable-id": "bt24ujfisqw",
                                                    "x-index": 1,
                                                    "name": "horizontalImgAndText",
                                                    "properties": {
                                                        "icon": {
                                                            "type": "string",
                                                            "x-component": "Img",
                                                            "x-component-props": {
                                                                "style": {
                                                                    "width": "30px",
                                                                    "height": "30px",
                                                                    "margin": "0px 8px 0px 0px"
                                                                },
                                                                "objectFit": "contain"
                                                            },
                                                            "name": "icon",
                                                            "x-reactions": {
                                                                "dependencies": [
                                                                    {
                                                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                        "property": "value",
                                                                        "type": "any"
                                                                    }
                                                                ],
                                                                "fulfill": {
                                                                    "run": "$effect(() => {\n  // 获取迭代器布局中当前点击的条目数据\n  const row = $utils.getArrayFieldRow($self)\n  // 获取书签的图标地址\n  $utils.getBookmarkIconUrl(row.url, row.icon).then((iconUrl) => {\n    $props({\n      src: iconUrl,\n    })\n  })\n}, [])\n"
                                                                }
                                                            },
                                                            "x-validator": [],
                                                            "x-designable-id": "f92u9kxq4nr",
                                                            "x-index": 0
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "x-component": "Text",
                                                            "name": "title",
                                                            "x-component-props": {},
                                                            "x-designable-id": "3ry52koycu3",
                                                            "x-index": 1,
                                                            "x-validator": []
                                                        }
                                                    }
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "x-component": "Button",
                                                    "x-component-props": {
                                                        "target": "_blank",
                                                        "type": "link",
                                                        "children": "超链接"
                                                    },
                                                    "name": "title",
                                                    "x-reactions": {
                                                        "dependencies": [
                                                            {
                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                "property": "value",
                                                                "type": "any"
                                                            }
                                                        ],
                                                        "fulfill": {
                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$effect(() => {\n  $self.hidden = rootField.state.bookmarkStyle !== \"onlyText\"\n}, [rootField.state.bookmarkStyle])\n\n$props({\n  onClick: () => {\n    // 处理点击指定的循环类组件的条目链接，默认就是取的条目的 url 字段来打开\n    $utils.clickArrayFieldUrlItem($self)\n  },\n  onMouseEnter: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n        transition: \"0.2s\",\n        borderRadius: \"8px\",\n      },\n    })\n  },\n  onMouseLeave: () => {\n    $props({\n      style: {\n        ...$self.componentProps.style,\n        transition: \"0.2s\",\n        boxShadow: \"none\",\n        borderRadius: \"0px\",\n      },\n    })\n  },\n})\n"
                                                        }
                                                    },
                                                    "x-designable-id": "8puit0com2w",
                                                    "x-index": 2,
                                                    "x-validator": []
                                                }
                                            }
                                        }
                                    },
                                    "bookmarkManageDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self.componentProps.open = false\n  },\n})\n"
                                            }
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {
                                                "hidden": true
                                            },
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "书签管理",
                                            "width": 700
                                        },
                                        "name": "bookmarkManageDialog",
                                        "x-designable-id": "ou6trmuiigb",
                                        "x-index": 3,
                                        "properties": {
                                            "bookmarkCardTitle": {
                                                "type": "string",
                                                "title": "书签卡片名称",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入书签卡片名称"
                                                },
                                                "x-decorator-props": {},
                                                "name": "bookmarkCardTitle",
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n// 回填数据\n$self.value = rootField.state.bookmarkCardTitle\n\n$props({\n  // 监听到书签卡片名称变更\n  onChange: async (e) => {\n    // 更新书签卡片名称\n    await rootField.updateBookmarkCardTitle(e.target.value.trim())\n  },\n})\n"
                                                    }
                                                },
                                                "x-designable-id": "uct7q1bu58f",
                                                "x-index": 0
                                            },
                                            "bookmarkStyle": {
                                                "title": "书签样式",
                                                "x-decorator": "FormItem",
                                                "x-component": "Select",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请选择书签样式"
                                                },
                                                "x-decorator-props": {},
                                                "name": "bookmarkStyle",
                                                "enum": [
                                                    {
                                                        "children": [],
                                                        "label": "纵向图文",
                                                        "value": "verticalImgAndText"
                                                    },
                                                    {
                                                        "children": [],
                                                        "label": "横向图文",
                                                        "value": "horizontalImgAndText"
                                                    },
                                                    {
                                                        "children": [],
                                                        "label": "纯文本",
                                                        "value": "onlyText"
                                                    }
                                                ],
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n// 回填数据\n$self.value = rootField.state.bookmarkStyle\n\n$props({\n  // 监听到书签样式变更\n  onChange: async (bookmarkStyle) => {\n    // 更新书签样式\n    await rootField.updateBookmarkStyle(bookmarkStyle)\n  },\n})\n"
                                                    }
                                                },
                                                "x-designable-id": "uw3sr5huolc",
                                                "x-index": 1
                                            },
                                            "bookmarkTable": {
                                                "type": "array",
                                                "x-decorator": "FormItem",
                                                "x-component": "ArrayTable",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "bordered": false,
                                                    "showHeader": true,
                                                    "tableLayout": "fixed",
                                                    "style": {
                                                        "margin": "0px 10px 0px 10px"
                                                    }
                                                },
                                                "x-decorator-props": {},
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\nrootField.refreshBookmarkListAndTable()\n"
                                                    }
                                                },
                                                "x-designable-id": "iw0eqd0q2w3",
                                                "x-index": 2,
                                                "name": "bookmarkTable",
                                                "items": {
                                                    "type": "object",
                                                    "x-designable-id": "1b9rl4quqgn",
                                                    "x-validator": [],
                                                    "properties": {
                                                        "titleColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "书签名称",
                                                                "width": 150
                                                            },
                                                            "x-designable-id": "wm1kqkje7fq",
                                                            "x-index": 0,
                                                            "name": "titleColumn",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "x-component": "Text",
                                                                    "x-validator": [],
                                                                    "x-component-props": {},
                                                                    "name": "title",
                                                                    "x-designable-id": "nwo3ybeyi8w",
                                                                    "x-index": 0
                                                                }
                                                            }
                                                        },
                                                        "urlColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "书签地址"
                                                            },
                                                            "x-designable-id": "hcs0cj2130y",
                                                            "x-index": 1,
                                                            "name": "urlColumn",
                                                            "properties": {
                                                                "url": {
                                                                    "type": "string",
                                                                    "x-component": "Text",
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "content": ""
                                                                    },
                                                                    "name": "url",
                                                                    "x-designable-id": "cqegu75zshy",
                                                                    "x-index": 0
                                                                }
                                                            }
                                                        },
                                                        "operateColumn": {
                                                            "type": "void",
                                                            "x-component": "ArrayTable.Column",
                                                            "x-component-props": {
                                                                "title": "操作",
                                                                "width": 135,
                                                                "align": "center"
                                                            },
                                                            "x-designable-id": "kmov0p5frh4",
                                                            "x-index": 2,
                                                            "name": "operateColumn",
                                                            "properties": {
                                                                "deleteBookmarkBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.deleteBookmark(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "DeleteOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 0px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "lm9jp7lirla",
                                                                    "x-index": 0,
                                                                    "name": "deleteBookmarkBtn"
                                                                },
                                                                "moveUpBookmarkBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.moveUpBookmark(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "ArrowUpOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "asytmyipxsx",
                                                                    "x-index": 1,
                                                                    "name": "moveUpBookmarkBtn"
                                                                },
                                                                "moveDownBookmarkBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.moveDownBookmark(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "ArrowDownOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "zxi80mizvjy",
                                                                    "x-index": 2,
                                                                    "name": "moveDownBookmarkBtn"
                                                                },
                                                                "editBookmarkBtn": {
                                                                    "type": "string",
                                                                    "x-component": "Button",
                                                                    "x-reactions": {
                                                                        "fulfill": {
                                                                            "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  onClick: () => {\n    const row = $utils.getArrayFieldRow($self, \"ArrayTable\")\n    rootField.showAddOrUpdateBookmarkDialog(row)\n  },\n})\n"
                                                                        },
                                                                        "dependencies": [
                                                                            {
                                                                                "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                                                "property": "value",
                                                                                "type": "any"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-validator": [],
                                                                    "x-component-props": {
                                                                        "children": "",
                                                                        "target": "_blank",
                                                                        "icon": "EditOutlined",
                                                                        "style": {
                                                                            "margin": "0px 0px 0px 6px"
                                                                        },
                                                                        "size": "small"
                                                                    },
                                                                    "x-designable-id": "s0uci4fi3f6",
                                                                    "x-index": 3,
                                                                    "name": "editBookmarkBtn"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "addBookmarkDialog": {
                                        "type": "object",
                                        "x-component": "Modal",
                                        "x-reactions": {
                                            "fulfill": {
                                                "run": "const rootName = \"bookmarkCardDiv\"\nconst rootEntire = $self.address.entire.substring(\n  0,\n  $self.address.entire.lastIndexOf(rootName) + rootName.length\n)\nconst rootField = $self.query(rootEntire).take()\n\n$props({\n  // 点击取消按钮\n  onCancel: () => {\n    $self.componentProps.open = false\n  },\n  // 点击确认按钮\n  onOk: () => {\n    $self\n      .validate() // 校验\n      .then(async () => {\n        const bookmarkForm = $self.value\n        // $logger.info(\"$self.value\", bookmarkForm)\n\n        // 添加或更新书签\n        await rootField.addOrUpdateBookmark({\n          ...bookmarkForm,\n        })\n\n        // 关闭当前对话框\n        $self.componentProps.open = false\n      })\n      .catch((e) => {\n        $logger.info(\"表单校验失败\", e)\n      })\n  },\n})\n"
                                            },
                                            "dependencies": [
                                                {
                                                    "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                    "property": "value",
                                                    "type": "any"
                                                }
                                            ]
                                        },
                                        "x-component-props": {
                                            "cancelButtonProps": {},
                                            "cancelText": "取消",
                                            "okButtonProps": {},
                                            "okText": "确定",
                                            "classNames": {},
                                            "styles": {},
                                            "title": "添加书签",
                                            "zIndex": 1001
                                        },
                                        "name": "addBookmarkDialog",
                                        "x-designable-id": "ic32qip89qq",
                                        "x-index": 4,
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "title": "书签名称",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入书签名称"
                                                },
                                                "x-decorator-props": {},
                                                "name": "title",
                                                "required": true,
                                                "x-designable-id": "obav5t0jz55",
                                                "x-index": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "title": "书签地址",
                                                "x-decorator": "FormItem",
                                                "x-component": "Input",
                                                "x-validator": [],
                                                "x-component-props": {
                                                    "placeholder": "请输入书签地址"
                                                },
                                                "x-decorator-props": {},
                                                "required": true,
                                                "name": "url",
                                                "x-designable-id": "iyil440qupg",
                                                "x-index": 1
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "personalBookmarkList": {
                "type": "array",
                "x-component": "IteratorLayout",
                "x-component-props": {
                    "style": {}
                },
                "default": [],
                "x-validator": [],
                "name": "personalBookmarkList",
                "x-designable-id": "kkv73tvdfet",
                "x-reactions": {
                    "dependencies": [
                        {
                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                            "property": "value",
                            "type": "any"
                        }
                    ],
                    "fulfill": {
                        "run": "// TODO 改为你个人的远程书签配置链接\nconst configUrl = \"https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/bookmarkConfigDemo/personalBookmarkConfig.json\"\n\n\n\n\nconst fetchBookmarkConfig = async () => {\n  const bookmarkList = await fetch(configUrl).then((res) => res.json())\n  $self.value = bookmarkList\n}\n\n$effect(() => {\n  fetchBookmarkConfig()\n}, [])\n"
                    }
                },
                "x-index": 2,
                "items": {
                    "type": "object",
                    "x-validator": [],
                    "name": "",
                    "x-designable-id": "8k6a3k1i88b",
                    "properties": {
                        "v0vzpxxa1ch": {
                            "type": "void",
                            "x-component": "Card",
                            "x-component-props": {
                                "title": "个人链接分组名称",
                                "style": {
                                    "margin": "16px 16px 16px 16px"
                                }
                            },
                            "x-designable-id": "v0vzpxxa1ch",
                            "x-index": 0,
                            "x-reactions": {
                                "dependencies": [
                                    {
                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                        "property": "value",
                                        "type": "any"
                                    }
                                ],
                                "fulfill": {
                                    "state": {},
                                    "run": "$props({\n  title: $utils.getArrayFieldRowAndIndex($self, \"IteratorLayout\").row.title,\n})"
                                }
                            },
                            "properties": {
                                "list": {
                                    "type": "array",
                                    "x-component": "IteratorLayout",
                                    "x-component-props": {
                                        "style": {
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap"
                                        }
                                    },
                                    "x-validator": [],
                                    "x-designable-id": "7wsr7ntu5hd",
                                    "x-index": 0,
                                    "default": [],
                                    "name": "list",
                                    "items": {
                                        "type": "object",
                                        "x-designable-id": "k1l0c196bpp",
                                        "x-validator": [],
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "x-component": "Button",
                                                "x-component-props": {
                                                    "target": "_blank",
                                                    "type": "link"
                                                },
                                                "name": "title",
                                                "x-designable-id": "pqtwpvyxsiw",
                                                "x-index": 0,
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "$props({\n  onClick: () => {\n    // 获取迭代器布局中当前点击的条目数据和索引\n    const { row } = $utils.getArrayFieldRowAndIndex($self, \"IteratorLayout\")\n    $chrome.tabs.create({\n      url: row.url,\n    })\n  },\n})\n"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "groupBookmarkList": {
                "type": "array",
                "x-component": "IteratorLayout",
                "x-component-props": {
                    "style": {}
                },
                "default": [],
                "x-validator": [],
                "name": "groupBookmarkList",
                "x-designable-id": "z7kw9egmx2o",
                "x-reactions": {
                    "dependencies": [
                        {
                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                            "property": "value",
                            "type": "any"
                        }
                    ],
                    "fulfill": {
                        "run": "// TODO 改为你们小组的远程书签配置链接\nconst configUrl =\n  \"https://gitee.com/bingoogolapple/bga-god-assistant-config/raw/master/bookmarkConfigDemo/groupBookmarkConfig.json\"\n\nconst fetchBookmarkConfig = async () => {\n  const bookmarkList = await fetch(configUrl).then((res) => res.json())\n  $self.value = bookmarkList\n}\n\n$effect(() => {\n  fetchBookmarkConfig()\n}, [])\n"
                    }
                },
                "x-index": 3,
                "items": {
                    "type": "object",
                    "x-validator": [],
                    "name": "",
                    "x-designable-id": "5k38nm56cbo",
                    "properties": {
                        "65bixtu67ww": {
                            "type": "void",
                            "x-component": "Card",
                            "x-component-props": {
                                "title": "小组链接分组名称",
                                "style": {
                                    "margin": "16px 16px 16px 16px"
                                }
                            },
                            "x-designable-id": "65bixtu67ww",
                            "x-index": 0,
                            "x-reactions": {
                                "dependencies": [
                                    {
                                        "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                        "property": "value",
                                        "type": "any"
                                    }
                                ],
                                "fulfill": {
                                    "state": {},
                                    "run": "$props({\n  title: $utils.getArrayFieldRowAndIndex($self, \"IteratorLayout\").row.title,\n})"
                                }
                            },
                            "properties": {
                                "list": {
                                    "type": "array",
                                    "x-component": "IteratorLayout",
                                    "x-component-props": {
                                        "style": {
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "flexWrap": "wrap"
                                        }
                                    },
                                    "x-validator": [],
                                    "x-designable-id": "jkt9jqras7u",
                                    "x-index": 0,
                                    "default": [],
                                    "name": "list",
                                    "items": {
                                        "type": "object",
                                        "x-designable-id": "vpt8y8zgp7u",
                                        "x-validator": [],
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "x-component": "Button",
                                                "x-component-props": {
                                                    "target": "_blank",
                                                    "type": "link",
                                                    "children": "按钮"
                                                },
                                                "name": "title",
                                                "x-designable-id": "xatnue4f93j",
                                                "x-index": 0,
                                                "x-reactions": {
                                                    "dependencies": [
                                                        {
                                                            "__DO_NOT_USE_THIS_PROPERTY_index__": 0,
                                                            "property": "value",
                                                            "type": "any"
                                                        }
                                                    ],
                                                    "fulfill": {
                                                        "run": "$props({\n  onClick: () => {\n    // 获取迭代器布局中当前点击的条目数据和索引\n    const { row } = $utils.getArrayFieldRowAndIndex($self, \"IteratorLayout\")\n    $chrome.tabs.create({\n      url: row.url,\n    })\n  },\n})\n"
                                                    }
                                                },
                                                "x-validator": []
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "x-designable-id": "bflx24mx8tp"
    }
}